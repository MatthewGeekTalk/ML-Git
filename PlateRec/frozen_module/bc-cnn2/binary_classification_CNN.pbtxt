node {
  name: "x"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 4200
        }
      }
    }
  }
}
node {
  name: "y_"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 2
        }
      }
    }
  }
}
node {
  name: "keep_prob"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\377\377\377\377\024\000\000\000F\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "Reshape"
  op: "Reshape"
  input: "x"
  input: "Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv1/truncated_normal/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000\003\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "conv1/truncated_normal/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv1/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "conv1/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "conv1/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv1/truncated_normal/mul"
  op: "Mul"
  input: "conv1/truncated_normal/TruncatedNormal"
  input: "conv1/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1/truncated_normal"
  op: "Add"
  input: "conv1/truncated_normal/mul"
  input: "conv1/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1/weight"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 5
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1/weight/Assign"
  op: "Assign"
  input: "conv1/weight"
  input: "conv1/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1/weight/read"
  op: "Identity"
  input: "conv1/weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/weight"
      }
    }
  }
}
node {
  name: "conv1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "conv1/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1/bias/Assign"
  op: "Assign"
  input: "conv1/bias"
  input: "conv1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1/bias/read"
  op: "Identity"
  input: "conv1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bias"
      }
    }
  }
}
node {
  name: "conv1/conv2d"
  op: "Conv2D"
  input: "Reshape"
  input: "conv1/weight/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv1/add"
  op: "Add"
  input: "conv1/conv2d"
  input: "conv1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1/conv_relu"
  op: "Relu"
  input: "conv1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "pool1/max_pool"
  op: "MaxPool"
  input: "conv1/conv_relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "conv2/truncated_normal/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000 \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "conv2/truncated_normal/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "conv2/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "conv2/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv2/truncated_normal/mul"
  op: "Mul"
  input: "conv2/truncated_normal/TruncatedNormal"
  input: "conv2/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2/truncated_normal"
  op: "Add"
  input: "conv2/truncated_normal/mul"
  input: "conv2/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2/weight"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 5
        }
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2/weight/Assign"
  op: "Assign"
  input: "conv2/weight"
  input: "conv2/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2/weight/read"
  op: "Identity"
  input: "conv2/weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/weight"
      }
    }
  }
}
node {
  name: "conv2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "conv2/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2/bias/Assign"
  op: "Assign"
  input: "conv2/bias"
  input: "conv2/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2/bias/read"
  op: "Identity"
  input: "conv2/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bias"
      }
    }
  }
}
node {
  name: "conv2/conv2d"
  op: "Conv2D"
  input: "pool1/max_pool"
  input: "conv2/weight/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv2/add"
  op: "Add"
  input: "conv2/conv2d"
  input: "conv2/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2/conv_relu"
  op: "Relu"
  input: "conv2/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "pool2/max_pool"
  op: "MaxPool"
  input: "conv2/conv_relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "dense/truncated_normal/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\026\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "dense/truncated_normal/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "dense/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "dense/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "dense/truncated_normal/mul"
  op: "Mul"
  input: "dense/truncated_normal/TruncatedNormal"
  input: "dense/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense/truncated_normal"
  op: "Add"
  input: "dense/truncated_normal/mul"
  input: "dense/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense/weight"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5760
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dense/weight/Assign"
  op: "Assign"
  input: "dense/weight"
  input: "dense/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dense/weight/read"
  op: "Identity"
  input: "dense/weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/weight"
      }
    }
  }
}
node {
  name: "dense/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "dense/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dense/bias/Assign"
  op: "Assign"
  input: "dense/bias"
  input: "dense/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dense/bias/read"
  op: "Identity"
  input: "dense/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
}
node {
  name: "dense/pool2_flat/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\200\026\000\000"
      }
    }
  }
}
node {
  name: "dense/pool2_flat"
  op: "Reshape"
  input: "pool2/max_pool"
  input: "dense/pool2_flat/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dense/MatMul"
  op: "MatMul"
  input: "dense/pool2_flat"
  input: "dense/weight/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dense/add"
  op: "Add"
  input: "dense/MatMul"
  input: "dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense/dense_relu"
  op: "Relu"
  input: "dense/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout/dense_drop/Shape"
  op: "Shape"
  input: "dense/dense_relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dropout/dense_drop/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dropout/dense_drop/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout/dense_drop/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dropout/dense_drop/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "dropout/dense_drop/random_uniform/sub"
  op: "Sub"
  input: "dropout/dense_drop/random_uniform/max"
  input: "dropout/dense_drop/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout/dense_drop/random_uniform/mul"
  op: "Mul"
  input: "dropout/dense_drop/random_uniform/RandomUniform"
  input: "dropout/dense_drop/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout/dense_drop/random_uniform"
  op: "Add"
  input: "dropout/dense_drop/random_uniform/mul"
  input: "dropout/dense_drop/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout/dense_drop/add"
  op: "Add"
  input: "keep_prob"
  input: "dropout/dense_drop/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout/dense_drop/Floor"
  op: "Floor"
  input: "dropout/dense_drop/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout/dense_drop/div"
  op: "RealDiv"
  input: "dense/dense_relu"
  input: "keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout/dense_drop/mul"
  op: "Mul"
  input: "dropout/dense_drop/div"
  input: "dropout/dense_drop/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "output/truncated_normal/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\004\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "output/truncated_normal/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "output/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "output/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "output/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "output/truncated_normal/mul"
  op: "Mul"
  input: "output/truncated_normal/TruncatedNormal"
  input: "output/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "output/truncated_normal"
  op: "Add"
  input: "output/truncated_normal/mul"
  input: "output/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "output/weight"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
        dim {
          size: 2
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "output/weight/Assign"
  op: "Assign"
  input: "output/weight"
  input: "output/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output/weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "output/weight/read"
  op: "Identity"
  input: "output/weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output/weight"
      }
    }
  }
}
node {
  name: "output/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2
          }
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "output/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "output/bias/Assign"
  op: "Assign"
  input: "output/bias"
  input: "output/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "output/bias/read"
  op: "Identity"
  input: "output/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output/bias"
      }
    }
  }
}
node {
  name: "output/MatMul"
  op: "MatMul"
  input: "dropout/dense_drop/mul"
  input: "output/weight/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "output/predict"
  op: "Add"
  input: "output/MatMul"
  input: "output/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "output/predict_sm"
  op: "Softmax"
  input: "output/predict"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "loss/Shape"
  op: "Shape"
  input: "output/predict"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/Rank_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "loss/Shape_1"
  op: "Shape"
  input: "output/predict"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/Sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "loss/Sub"
  op: "Sub"
  input: "loss/Rank_1"
  input: "loss/Sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/Slice/begin"
  op: "Pack"
  input: "loss/Sub"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "loss/Slice/size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "loss/Slice"
  op: "Slice"
  input: "loss/Shape_1"
  input: "loss/Slice/begin"
  input: "loss/Slice/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/concat/values_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "loss/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/concat"
  op: "ConcatV2"
  input: "loss/concat/values_0"
  input: "loss/Slice"
  input: "loss/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/Reshape"
  op: "Reshape"
  input: "output/predict"
  input: "loss/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/Rank_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "loss/Shape_2"
  op: "Shape"
  input: "y_"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/Sub_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "loss/Sub_1"
  op: "Sub"
  input: "loss/Rank_2"
  input: "loss/Sub_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/Slice_1/begin"
  op: "Pack"
  input: "loss/Sub_1"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "loss/Slice_1/size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "loss/Slice_1"
  op: "Slice"
  input: "loss/Shape_2"
  input: "loss/Slice_1/begin"
  input: "loss/Slice_1/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/concat_1/values_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "loss/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/concat_1"
  op: "ConcatV2"
  input: "loss/concat_1/values_0"
  input: "loss/Slice_1"
  input: "loss/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/Reshape_1"
  op: "Reshape"
  input: "y_"
  input: "loss/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/cross_entropy"
  op: "SoftmaxCrossEntropyWithLogits"
  input: "loss/Reshape"
  input: "loss/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/Sub_2/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "loss/Sub_2"
  op: "Sub"
  input: "loss/Rank"
  input: "loss/Sub_2/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/Slice_2/begin"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/Slice_2/size"
  op: "Pack"
  input: "loss/Sub_2"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "loss/Slice_2"
  op: "Slice"
  input: "loss/Shape"
  input: "loss/Slice_2/begin"
  input: "loss/Slice_2/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/Reshape_2"
  op: "Reshape"
  input: "loss/cross_entropy"
  input: "loss/Slice_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "reduce_ce"
  op: "Mean"
  input: "loss/Reshape_2"
  input: "Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adam_optimizer/gradients/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adam_optimizer/gradients/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "adam_optimizer/gradients/Fill"
  op: "Fill"
  input: "adam_optimizer/gradients/Shape"
  input: "adam_optimizer/gradients/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adam_optimizer/gradients/reduce_ce_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "adam_optimizer/gradients/reduce_ce_grad/Reshape"
  op: "Reshape"
  input: "adam_optimizer/gradients/Fill"
  input: "adam_optimizer/gradients/reduce_ce_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adam_optimizer/gradients/reduce_ce_grad/Shape"
  op: "Shape"
  input: "loss/Reshape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adam_optimizer/gradients/reduce_ce_grad/Tile"
  op: "Tile"
  input: "adam_optimizer/gradients/reduce_ce_grad/Reshape"
  input: "adam_optimizer/gradients/reduce_ce_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adam_optimizer/gradients/reduce_ce_grad/Shape_1"
  op: "Shape"
  input: "loss/Reshape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adam_optimizer/gradients/reduce_ce_grad/Shape_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adam_optimizer/gradients/reduce_ce_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adam_optimizer/gradients/reduce_ce_grad/Prod"
  op: "Prod"
  input: "adam_optimizer/gradients/reduce_ce_grad/Shape_1"
  input: "adam_optimizer/gradients/reduce_ce_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adam_optimizer/gradients/reduce_ce_grad/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adam_optimizer/gradients/reduce_ce_grad/Prod_1"
  op: "Prod"
  input: "adam_optimizer/gradients/reduce_ce_grad/Shape_2"
  input: "adam_optimizer/gradients/reduce_ce_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adam_optimizer/gradients/reduce_ce_grad/Maximum/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "adam_optimizer/gradients/reduce_ce_grad/Maximum"
  op: "Maximum"
  input: "adam_optimizer/gradients/reduce_ce_grad/Prod_1"
  input: "adam_optimizer/gradients/reduce_ce_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adam_optimizer/gradients/reduce_ce_grad/floordiv"
  op: "FloorDiv"
  input: "adam_optimizer/gradients/reduce_ce_grad/Prod"
  input: "adam_optimizer/gradients/reduce_ce_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adam_optimizer/gradients/reduce_ce_grad/Cast"
  op: "Cast"
  input: "adam_optimizer/gradients/reduce_ce_grad/floordiv"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adam_optimizer/gradients/reduce_ce_grad/truediv"
  op: "RealDiv"
  input: "adam_optimizer/gradients/reduce_ce_grad/Tile"
  input: "adam_optimizer/gradients/reduce_ce_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adam_optimizer/gradients/loss/Reshape_2_grad/Shape"
  op: "Shape"
  input: "loss/cross_entropy"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adam_optimizer/gradients/loss/Reshape_2_grad/Reshape"
  op: "Reshape"
  input: "adam_optimizer/gradients/reduce_ce_grad/truediv"
  input: "adam_optimizer/gradients/loss/Reshape_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adam_optimizer/gradients/zeros_like"
  op: "ZerosLike"
  input: "loss/cross_entropy:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adam_optimizer/gradients/loss/cross_entropy_grad/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "adam_optimizer/gradients/loss/cross_entropy_grad/ExpandDims"
  op: "ExpandDims"
  input: "adam_optimizer/gradients/loss/Reshape_2_grad/Reshape"
  input: "adam_optimizer/gradients/loss/cross_entropy_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adam_optimizer/gradients/loss/cross_entropy_grad/mul"
  op: "Mul"
  input: "adam_optimizer/gradients/loss/cross_entropy_grad/ExpandDims"
  input: "loss/cross_entropy:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adam_optimizer/gradients/loss/Reshape_grad/Shape"
  op: "Shape"
  input: "output/predict"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adam_optimizer/gradients/loss/Reshape_grad/Reshape"
  op: "Reshape"
  input: "adam_optimizer/gradients/loss/cross_entropy_grad/mul"
  input: "adam_optimizer/gradients/loss/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adam_optimizer/gradients/output/predict_grad/Shape"
  op: "Shape"
  input: "output/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adam_optimizer/gradients/output/predict_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "adam_optimizer/gradients/output/predict_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "adam_optimizer/gradients/output/predict_grad/Shape"
  input: "adam_optimizer/gradients/output/predict_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adam_optimizer/gradients/output/predict_grad/Sum"
  op: "Sum"
  input: "adam_optimizer/gradients/loss/Reshape_grad/Reshape"
  input: "adam_optimizer/gradients/output/predict_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adam_optimizer/gradients/output/predict_grad/Reshape"
  op: "Reshape"
  input: "adam_optimizer/gradients/output/predict_grad/Sum"
  input: "adam_optimizer/gradients/output/predict_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adam_optimizer/gradients/output/predict_grad/Sum_1"
  op: "Sum"
  input: "adam_optimizer/gradients/loss/Reshape_grad/Reshape"
  input: "adam_optimizer/gradients/output/predict_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adam_optimizer/gradients/output/predict_grad/Reshape_1"
  op: "Reshape"
  input: "adam_optimizer/gradients/output/predict_grad/Sum_1"
  input: "adam_optimizer/gradients/output/predict_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adam_optimizer/gradients/output/predict_grad/tuple/group_deps"
  op: "NoOp"
  input: "^adam_optimizer/gradients/output/predict_grad/Reshape"
  input: "^adam_optimizer/gradients/output/predict_grad/Reshape_1"
}
node {
  name: "adam_optimizer/gradients/output/predict_grad/tuple/control_dependency"
  op: "Identity"
  input: "adam_optimizer/gradients/output/predict_grad/Reshape"
  input: "^adam_optimizer/gradients/output/predict_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adam_optimizer/gradients/output/predict_grad/Reshape"
      }
    }
  }
}
node {
  name: "adam_optimizer/gradients/output/predict_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "adam_optimizer/gradients/output/predict_grad/Reshape_1"
  input: "^adam_optimizer/gradients/output/predict_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adam_optimizer/gradients/output/predict_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "adam_optimizer/gradients/output/MatMul_grad/MatMul"
  op: "MatMul"
  input: "adam_optimizer/gradients/output/predict_grad/tuple/control_dependency"
  input: "output/weight/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "adam_optimizer/gradients/output/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "dropout/dense_drop/mul"
  input: "adam_optimizer/gradients/output/predict_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "adam_optimizer/gradients/output/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^adam_optimizer/gradients/output/MatMul_grad/MatMul"
  input: "^adam_optimizer/gradients/output/MatMul_grad/MatMul_1"
}
node {
  name: "adam_optimizer/gradients/output/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "adam_optimizer/gradients/output/MatMul_grad/MatMul"
  input: "^adam_optimizer/gradients/output/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adam_optimizer/gradients/output/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "adam_optimizer/gradients/output/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "adam_optimizer/gradients/output/MatMul_grad/MatMul_1"
  input: "^adam_optimizer/gradients/output/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adam_optimizer/gradients/output/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "adam_optimizer/gradients/dropout/dense_drop/mul_grad/Shape"
  op: "Shape"
  input: "dropout/dense_drop/div"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adam_optimizer/gradients/dropout/dense_drop/mul_grad/Shape_1"
  op: "Shape"
  input: "dropout/dense_drop/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adam_optimizer/gradients/dropout/dense_drop/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "adam_optimizer/gradients/dropout/dense_drop/mul_grad/Shape"
  input: "adam_optimizer/gradients/dropout/dense_drop/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adam_optimizer/gradients/dropout/dense_drop/mul_grad/mul"
  op: "Mul"
  input: "adam_optimizer/gradients/output/MatMul_grad/tuple/control_dependency"
  input: "dropout/dense_drop/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adam_optimizer/gradients/dropout/dense_drop/mul_grad/Sum"
  op: "Sum"
  input: "adam_optimizer/gradients/dropout/dense_drop/mul_grad/mul"
  input: "adam_optimizer/gradients/dropout/dense_drop/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adam_optimizer/gradients/dropout/dense_drop/mul_grad/Reshape"
  op: "Reshape"
  input: "adam_optimizer/gradients/dropout/dense_drop/mul_grad/Sum"
  input: "adam_optimizer/gradients/dropout/dense_drop/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adam_optimizer/gradients/dropout/dense_drop/mul_grad/mul_1"
  op: "Mul"
  input: "dropout/dense_drop/div"
  input: "adam_optimizer/gradients/output/MatMul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adam_optimizer/gradients/dropout/dense_drop/mul_grad/Sum_1"
  op: "Sum"
  input: "adam_optimizer/gradients/dropout/dense_drop/mul_grad/mul_1"
  input: "adam_optimizer/gradients/dropout/dense_drop/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adam_optimizer/gradients/dropout/dense_drop/mul_grad/Reshape_1"
  op: "Reshape"
  input: "adam_optimizer/gradients/dropout/dense_drop/mul_grad/Sum_1"
  input: "adam_optimizer/gradients/dropout/dense_drop/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adam_optimizer/gradients/dropout/dense_drop/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^adam_optimizer/gradients/dropout/dense_drop/mul_grad/Reshape"
  input: "^adam_optimizer/gradients/dropout/dense_drop/mul_grad/Reshape_1"
}
node {
  name: "adam_optimizer/gradients/dropout/dense_drop/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "adam_optimizer/gradients/dropout/dense_drop/mul_grad/Reshape"
  input: "^adam_optimizer/gradients/dropout/dense_drop/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adam_optimizer/gradients/dropout/dense_drop/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "adam_optimizer/gradients/dropout/dense_drop/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "adam_optimizer/gradients/dropout/dense_drop/mul_grad/Reshape_1"
  input: "^adam_optimizer/gradients/dropout/dense_drop/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adam_optimizer/gradients/dropout/dense_drop/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "adam_optimizer/gradients/dropout/dense_drop/div_grad/Shape"
  op: "Shape"
  input: "dense/dense_relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adam_optimizer/gradients/dropout/dense_drop/div_grad/Shape_1"
  op: "Shape"
  input: "keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adam_optimizer/gradients/dropout/dense_drop/div_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "adam_optimizer/gradients/dropout/dense_drop/div_grad/Shape"
  input: "adam_optimizer/gradients/dropout/dense_drop/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adam_optimizer/gradients/dropout/dense_drop/div_grad/RealDiv"
  op: "RealDiv"
  input: "adam_optimizer/gradients/dropout/dense_drop/mul_grad/tuple/control_dependency"
  input: "keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adam_optimizer/gradients/dropout/dense_drop/div_grad/Sum"
  op: "Sum"
  input: "adam_optimizer/gradients/dropout/dense_drop/div_grad/RealDiv"
  input: "adam_optimizer/gradients/dropout/dense_drop/div_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adam_optimizer/gradients/dropout/dense_drop/div_grad/Reshape"
  op: "Reshape"
  input: "adam_optimizer/gradients/dropout/dense_drop/div_grad/Sum"
  input: "adam_optimizer/gradients/dropout/dense_drop/div_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adam_optimizer/gradients/dropout/dense_drop/div_grad/Neg"
  op: "Neg"
  input: "dense/dense_relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adam_optimizer/gradients/dropout/dense_drop/div_grad/RealDiv_1"
  op: "RealDiv"
  input: "adam_optimizer/gradients/dropout/dense_drop/div_grad/Neg"
  input: "keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adam_optimizer/gradients/dropout/dense_drop/div_grad/RealDiv_2"
  op: "RealDiv"
  input: "adam_optimizer/gradients/dropout/dense_drop/div_grad/RealDiv_1"
  input: "keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adam_optimizer/gradients/dropout/dense_drop/div_grad/mul"
  op: "Mul"
  input: "adam_optimizer/gradients/dropout/dense_drop/mul_grad/tuple/control_dependency"
  input: "adam_optimizer/gradients/dropout/dense_drop/div_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adam_optimizer/gradients/dropout/dense_drop/div_grad/Sum_1"
  op: "Sum"
  input: "adam_optimizer/gradients/dropout/dense_drop/div_grad/mul"
  input: "adam_optimizer/gradients/dropout/dense_drop/div_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adam_optimizer/gradients/dropout/dense_drop/div_grad/Reshape_1"
  op: "Reshape"
  input: "adam_optimizer/gradients/dropout/dense_drop/div_grad/Sum_1"
  input: "adam_optimizer/gradients/dropout/dense_drop/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adam_optimizer/gradients/dropout/dense_drop/div_grad/tuple/group_deps"
  op: "NoOp"
  input: "^adam_optimizer/gradients/dropout/dense_drop/div_grad/Reshape"
  input: "^adam_optimizer/gradients/dropout/dense_drop/div_grad/Reshape_1"
}
node {
  name: "adam_optimizer/gradients/dropout/dense_drop/div_grad/tuple/control_dependency"
  op: "Identity"
  input: "adam_optimizer/gradients/dropout/dense_drop/div_grad/Reshape"
  input: "^adam_optimizer/gradients/dropout/dense_drop/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adam_optimizer/gradients/dropout/dense_drop/div_grad/Reshape"
      }
    }
  }
}
node {
  name: "adam_optimizer/gradients/dropout/dense_drop/div_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "adam_optimizer/gradients/dropout/dense_drop/div_grad/Reshape_1"
  input: "^adam_optimizer/gradients/dropout/dense_drop/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adam_optimizer/gradients/dropout/dense_drop/div_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "adam_optimizer/gradients/dense/dense_relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "adam_optimizer/gradients/dropout/dense_drop/div_grad/tuple/control_dependency"
  input: "dense/dense_relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adam_optimizer/gradients/dense/add_grad/Shape"
  op: "Shape"
  input: "dense/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adam_optimizer/gradients/dense/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "adam_optimizer/gradients/dense/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "adam_optimizer/gradients/dense/add_grad/Shape"
  input: "adam_optimizer/gradients/dense/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adam_optimizer/gradients/dense/add_grad/Sum"
  op: "Sum"
  input: "adam_optimizer/gradients/dense/dense_relu_grad/ReluGrad"
  input: "adam_optimizer/gradients/dense/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adam_optimizer/gradients/dense/add_grad/Reshape"
  op: "Reshape"
  input: "adam_optimizer/gradients/dense/add_grad/Sum"
  input: "adam_optimizer/gradients/dense/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adam_optimizer/gradients/dense/add_grad/Sum_1"
  op: "Sum"
  input: "adam_optimizer/gradients/dense/dense_relu_grad/ReluGrad"
  input: "adam_optimizer/gradients/dense/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adam_optimizer/gradients/dense/add_grad/Reshape_1"
  op: "Reshape"
  input: "adam_optimizer/gradients/dense/add_grad/Sum_1"
  input: "adam_optimizer/gradients/dense/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adam_optimizer/gradients/dense/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^adam_optimizer/gradients/dense/add_grad/Reshape"
  input: "^adam_optimizer/gradients/dense/add_grad/Reshape_1"
}
node {
  name: "adam_optimizer/gradients/dense/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "adam_optimizer/gradients/dense/add_grad/Reshape"
  input: "^adam_optimizer/gradients/dense/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adam_optimizer/gradients/dense/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "adam_optimizer/gradients/dense/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "adam_optimizer/gradients/dense/add_grad/Reshape_1"
  input: "^adam_optimizer/gradients/dense/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adam_optimizer/gradients/dense/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "adam_optimizer/gradients/dense/MatMul_grad/MatMul"
  op: "MatMul"
  input: "adam_optimizer/gradients/dense/add_grad/tuple/control_dependency"
  input: "dense/weight/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "adam_optimizer/gradients/dense/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "dense/pool2_flat"
  input: "adam_optimizer/gradients/dense/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "adam_optimizer/gradients/dense/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^adam_optimizer/gradients/dense/MatMul_grad/MatMul"
  input: "^adam_optimizer/gradients/dense/MatMul_grad/MatMul_1"
}
node {
  name: "adam_optimizer/gradients/dense/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "adam_optimizer/gradients/dense/MatMul_grad/MatMul"
  input: "^adam_optimizer/gradients/dense/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adam_optimizer/gradients/dense/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "adam_optimizer/gradients/dense/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "adam_optimizer/gradients/dense/MatMul_grad/MatMul_1"
  input: "^adam_optimizer/gradients/dense/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adam_optimizer/gradients/dense/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "adam_optimizer/gradients/dense/pool2_flat_grad/Shape"
  op: "Shape"
  input: "pool2/max_pool"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adam_optimizer/gradients/dense/pool2_flat_grad/Reshape"
  op: "Reshape"
  input: "adam_optimizer/gradients/dense/MatMul_grad/tuple/control_dependency"
  input: "adam_optimizer/gradients/dense/pool2_flat_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adam_optimizer/gradients/pool2/max_pool_grad/MaxPoolGrad"
  op: "MaxPoolGrad"
  input: "conv2/conv_relu"
  input: "pool2/max_pool"
  input: "adam_optimizer/gradients/dense/pool2_flat_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "adam_optimizer/gradients/conv2/conv_relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "adam_optimizer/gradients/pool2/max_pool_grad/MaxPoolGrad"
  input: "conv2/conv_relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adam_optimizer/gradients/conv2/add_grad/Shape"
  op: "Shape"
  input: "conv2/conv2d"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adam_optimizer/gradients/conv2/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "adam_optimizer/gradients/conv2/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "adam_optimizer/gradients/conv2/add_grad/Shape"
  input: "adam_optimizer/gradients/conv2/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adam_optimizer/gradients/conv2/add_grad/Sum"
  op: "Sum"
  input: "adam_optimizer/gradients/conv2/conv_relu_grad/ReluGrad"
  input: "adam_optimizer/gradients/conv2/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adam_optimizer/gradients/conv2/add_grad/Reshape"
  op: "Reshape"
  input: "adam_optimizer/gradients/conv2/add_grad/Sum"
  input: "adam_optimizer/gradients/conv2/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adam_optimizer/gradients/conv2/add_grad/Sum_1"
  op: "Sum"
  input: "adam_optimizer/gradients/conv2/conv_relu_grad/ReluGrad"
  input: "adam_optimizer/gradients/conv2/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adam_optimizer/gradients/conv2/add_grad/Reshape_1"
  op: "Reshape"
  input: "adam_optimizer/gradients/conv2/add_grad/Sum_1"
  input: "adam_optimizer/gradients/conv2/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adam_optimizer/gradients/conv2/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^adam_optimizer/gradients/conv2/add_grad/Reshape"
  input: "^adam_optimizer/gradients/conv2/add_grad/Reshape_1"
}
node {
  name: "adam_optimizer/gradients/conv2/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "adam_optimizer/gradients/conv2/add_grad/Reshape"
  input: "^adam_optimizer/gradients/conv2/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adam_optimizer/gradients/conv2/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "adam_optimizer/gradients/conv2/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "adam_optimizer/gradients/conv2/add_grad/Reshape_1"
  input: "^adam_optimizer/gradients/conv2/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adam_optimizer/gradients/conv2/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "adam_optimizer/gradients/conv2/conv2d_grad/Shape"
  op: "Shape"
  input: "pool1/max_pool"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adam_optimizer/gradients/conv2/conv2d_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "adam_optimizer/gradients/conv2/conv2d_grad/Shape"
  input: "conv2/weight/read"
  input: "adam_optimizer/gradients/conv2/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "adam_optimizer/gradients/conv2/conv2d_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000 \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "adam_optimizer/gradients/conv2/conv2d_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "pool1/max_pool"
  input: "adam_optimizer/gradients/conv2/conv2d_grad/Shape_1"
  input: "adam_optimizer/gradients/conv2/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "adam_optimizer/gradients/conv2/conv2d_grad/tuple/group_deps"
  op: "NoOp"
  input: "^adam_optimizer/gradients/conv2/conv2d_grad/Conv2DBackpropInput"
  input: "^adam_optimizer/gradients/conv2/conv2d_grad/Conv2DBackpropFilter"
}
node {
  name: "adam_optimizer/gradients/conv2/conv2d_grad/tuple/control_dependency"
  op: "Identity"
  input: "adam_optimizer/gradients/conv2/conv2d_grad/Conv2DBackpropInput"
  input: "^adam_optimizer/gradients/conv2/conv2d_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adam_optimizer/gradients/conv2/conv2d_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "adam_optimizer/gradients/conv2/conv2d_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "adam_optimizer/gradients/conv2/conv2d_grad/Conv2DBackpropFilter"
  input: "^adam_optimizer/gradients/conv2/conv2d_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adam_optimizer/gradients/conv2/conv2d_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "adam_optimizer/gradients/pool1/max_pool_grad/MaxPoolGrad"
  op: "MaxPoolGrad"
  input: "conv1/conv_relu"
  input: "pool1/max_pool"
  input: "adam_optimizer/gradients/conv2/conv2d_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "adam_optimizer/gradients/conv1/conv_relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "adam_optimizer/gradients/pool1/max_pool_grad/MaxPoolGrad"
  input: "conv1/conv_relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adam_optimizer/gradients/conv1/add_grad/Shape"
  op: "Shape"
  input: "conv1/conv2d"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adam_optimizer/gradients/conv1/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "adam_optimizer/gradients/conv1/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "adam_optimizer/gradients/conv1/add_grad/Shape"
  input: "adam_optimizer/gradients/conv1/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adam_optimizer/gradients/conv1/add_grad/Sum"
  op: "Sum"
  input: "adam_optimizer/gradients/conv1/conv_relu_grad/ReluGrad"
  input: "adam_optimizer/gradients/conv1/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adam_optimizer/gradients/conv1/add_grad/Reshape"
  op: "Reshape"
  input: "adam_optimizer/gradients/conv1/add_grad/Sum"
  input: "adam_optimizer/gradients/conv1/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adam_optimizer/gradients/conv1/add_grad/Sum_1"
  op: "Sum"
  input: "adam_optimizer/gradients/conv1/conv_relu_grad/ReluGrad"
  input: "adam_optimizer/gradients/conv1/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adam_optimizer/gradients/conv1/add_grad/Reshape_1"
  op: "Reshape"
  input: "adam_optimizer/gradients/conv1/add_grad/Sum_1"
  input: "adam_optimizer/gradients/conv1/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adam_optimizer/gradients/conv1/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^adam_optimizer/gradients/conv1/add_grad/Reshape"
  input: "^adam_optimizer/gradients/conv1/add_grad/Reshape_1"
}
node {
  name: "adam_optimizer/gradients/conv1/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "adam_optimizer/gradients/conv1/add_grad/Reshape"
  input: "^adam_optimizer/gradients/conv1/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adam_optimizer/gradients/conv1/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "adam_optimizer/gradients/conv1/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "adam_optimizer/gradients/conv1/add_grad/Reshape_1"
  input: "^adam_optimizer/gradients/conv1/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adam_optimizer/gradients/conv1/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "adam_optimizer/gradients/conv1/conv2d_grad/Shape"
  op: "Shape"
  input: "Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adam_optimizer/gradients/conv1/conv2d_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "adam_optimizer/gradients/conv1/conv2d_grad/Shape"
  input: "conv1/weight/read"
  input: "adam_optimizer/gradients/conv1/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "adam_optimizer/gradients/conv1/conv2d_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000\003\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "adam_optimizer/gradients/conv1/conv2d_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Reshape"
  input: "adam_optimizer/gradients/conv1/conv2d_grad/Shape_1"
  input: "adam_optimizer/gradients/conv1/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "adam_optimizer/gradients/conv1/conv2d_grad/tuple/group_deps"
  op: "NoOp"
  input: "^adam_optimizer/gradients/conv1/conv2d_grad/Conv2DBackpropInput"
  input: "^adam_optimizer/gradients/conv1/conv2d_grad/Conv2DBackpropFilter"
}
node {
  name: "adam_optimizer/gradients/conv1/conv2d_grad/tuple/control_dependency"
  op: "Identity"
  input: "adam_optimizer/gradients/conv1/conv2d_grad/Conv2DBackpropInput"
  input: "^adam_optimizer/gradients/conv1/conv2d_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adam_optimizer/gradients/conv1/conv2d_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "adam_optimizer/gradients/conv1/conv2d_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "adam_optimizer/gradients/conv1/conv2d_grad/Conv2DBackpropFilter"
  input: "^adam_optimizer/gradients/conv1/conv2d_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adam_optimizer/gradients/conv1/conv2d_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "adam_optimizer/beta1_power/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "adam_optimizer/beta1_power"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/weight"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "adam_optimizer/beta1_power/Assign"
  op: "Assign"
  input: "adam_optimizer/beta1_power"
  input: "adam_optimizer/beta1_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "adam_optimizer/beta1_power/read"
  op: "Identity"
  input: "adam_optimizer/beta1_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/weight"
      }
    }
  }
}
node {
  name: "adam_optimizer/beta2_power/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "adam_optimizer/beta2_power"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/weight"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "adam_optimizer/beta2_power/Assign"
  op: "Assign"
  input: "adam_optimizer/beta2_power"
  input: "adam_optimizer/beta2_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "adam_optimizer/beta2_power/read"
  op: "Identity"
  input: "adam_optimizer/beta2_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/weight"
      }
    }
  }
}
node {
  name: "conv1/weight/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv1/weight/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/weight"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 5
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1/weight/Adam/Assign"
  op: "Assign"
  input: "conv1/weight/Adam"
  input: "conv1/weight/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1/weight/Adam/read"
  op: "Identity"
  input: "conv1/weight/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/weight"
      }
    }
  }
}
node {
  name: "conv1/weight/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv1/weight/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/weight"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 5
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1/weight/Adam_1/Assign"
  op: "Assign"
  input: "conv1/weight/Adam_1"
  input: "conv1/weight/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1/weight/Adam_1/read"
  op: "Identity"
  input: "conv1/weight/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/weight"
      }
    }
  }
}
node {
  name: "conv1/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv1/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1/bias/Adam/Assign"
  op: "Assign"
  input: "conv1/bias/Adam"
  input: "conv1/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1/bias/Adam/read"
  op: "Identity"
  input: "conv1/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bias"
      }
    }
  }
}
node {
  name: "conv1/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv1/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1/bias/Adam_1/Assign"
  op: "Assign"
  input: "conv1/bias/Adam_1"
  input: "conv1/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1/bias/Adam_1/read"
  op: "Identity"
  input: "conv1/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bias"
      }
    }
  }
}
node {
  name: "conv2/weight/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2/weight/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/weight"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 5
        }
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2/weight/Adam/Assign"
  op: "Assign"
  input: "conv2/weight/Adam"
  input: "conv2/weight/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2/weight/Adam/read"
  op: "Identity"
  input: "conv2/weight/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/weight"
      }
    }
  }
}
node {
  name: "conv2/weight/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2/weight/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/weight"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 5
        }
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2/weight/Adam_1/Assign"
  op: "Assign"
  input: "conv2/weight/Adam_1"
  input: "conv2/weight/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2/weight/Adam_1/read"
  op: "Identity"
  input: "conv2/weight/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/weight"
      }
    }
  }
}
node {
  name: "conv2/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2/bias/Adam/Assign"
  op: "Assign"
  input: "conv2/bias/Adam"
  input: "conv2/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2/bias/Adam/read"
  op: "Identity"
  input: "conv2/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bias"
      }
    }
  }
}
node {
  name: "conv2/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2/bias/Adam_1/Assign"
  op: "Assign"
  input: "conv2/bias/Adam_1"
  input: "conv2/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2/bias/Adam_1/read"
  op: "Identity"
  input: "conv2/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bias"
      }
    }
  }
}
node {
  name: "dense/weight/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 5760
          }
          dim {
            size: 1024
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense/weight/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/weight"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5760
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dense/weight/Adam/Assign"
  op: "Assign"
  input: "dense/weight/Adam"
  input: "dense/weight/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dense/weight/Adam/read"
  op: "Identity"
  input: "dense/weight/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/weight"
      }
    }
  }
}
node {
  name: "dense/weight/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 5760
          }
          dim {
            size: 1024
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense/weight/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/weight"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5760
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dense/weight/Adam_1/Assign"
  op: "Assign"
  input: "dense/weight/Adam_1"
  input: "dense/weight/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dense/weight/Adam_1/read"
  op: "Identity"
  input: "dense/weight/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/weight"
      }
    }
  }
}
node {
  name: "dense/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dense/bias/Adam/Assign"
  op: "Assign"
  input: "dense/bias/Adam"
  input: "dense/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dense/bias/Adam/read"
  op: "Identity"
  input: "dense/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
}
node {
  name: "dense/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dense/bias/Adam_1/Assign"
  op: "Assign"
  input: "dense/bias/Adam_1"
  input: "dense/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dense/bias/Adam_1/read"
  op: "Identity"
  input: "dense/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
}
node {
  name: "output/weight/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output/weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
          dim {
            size: 2
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "output/weight/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output/weight"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
        dim {
          size: 2
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "output/weight/Adam/Assign"
  op: "Assign"
  input: "output/weight/Adam"
  input: "output/weight/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output/weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "output/weight/Adam/read"
  op: "Identity"
  input: "output/weight/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output/weight"
      }
    }
  }
}
node {
  name: "output/weight/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output/weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
          dim {
            size: 2
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "output/weight/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output/weight"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
        dim {
          size: 2
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "output/weight/Adam_1/Assign"
  op: "Assign"
  input: "output/weight/Adam_1"
  input: "output/weight/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output/weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "output/weight/Adam_1/read"
  op: "Identity"
  input: "output/weight/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output/weight"
      }
    }
  }
}
node {
  name: "output/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "output/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "output/bias/Adam/Assign"
  op: "Assign"
  input: "output/bias/Adam"
  input: "output/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "output/bias/Adam/read"
  op: "Identity"
  input: "output/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output/bias"
      }
    }
  }
}
node {
  name: "output/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "output/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "output/bias/Adam_1/Assign"
  op: "Assign"
  input: "output/bias/Adam_1"
  input: "output/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "output/bias/Adam_1/read"
  op: "Identity"
  input: "output/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output/bias"
      }
    }
  }
}
node {
  name: "adam_optimizer/Adam/learning_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "adam_optimizer/Adam/beta1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "adam_optimizer/Adam/beta2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "adam_optimizer/Adam/epsilon"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "adam_optimizer/Adam/update_conv1/weight/ApplyAdam"
  op: "ApplyAdam"
  input: "conv1/weight"
  input: "conv1/weight/Adam"
  input: "conv1/weight/Adam_1"
  input: "adam_optimizer/beta1_power/read"
  input: "adam_optimizer/beta2_power/read"
  input: "adam_optimizer/Adam/learning_rate"
  input: "adam_optimizer/Adam/beta1"
  input: "adam_optimizer/Adam/beta2"
  input: "adam_optimizer/Adam/epsilon"
  input: "adam_optimizer/gradients/conv1/conv2d_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "adam_optimizer/Adam/update_conv1/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "conv1/bias"
  input: "conv1/bias/Adam"
  input: "conv1/bias/Adam_1"
  input: "adam_optimizer/beta1_power/read"
  input: "adam_optimizer/beta2_power/read"
  input: "adam_optimizer/Adam/learning_rate"
  input: "adam_optimizer/Adam/beta1"
  input: "adam_optimizer/Adam/beta2"
  input: "adam_optimizer/Adam/epsilon"
  input: "adam_optimizer/gradients/conv1/add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "adam_optimizer/Adam/update_conv2/weight/ApplyAdam"
  op: "ApplyAdam"
  input: "conv2/weight"
  input: "conv2/weight/Adam"
  input: "conv2/weight/Adam_1"
  input: "adam_optimizer/beta1_power/read"
  input: "adam_optimizer/beta2_power/read"
  input: "adam_optimizer/Adam/learning_rate"
  input: "adam_optimizer/Adam/beta1"
  input: "adam_optimizer/Adam/beta2"
  input: "adam_optimizer/Adam/epsilon"
  input: "adam_optimizer/gradients/conv2/conv2d_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "adam_optimizer/Adam/update_conv2/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "conv2/bias"
  input: "conv2/bias/Adam"
  input: "conv2/bias/Adam_1"
  input: "adam_optimizer/beta1_power/read"
  input: "adam_optimizer/beta2_power/read"
  input: "adam_optimizer/Adam/learning_rate"
  input: "adam_optimizer/Adam/beta1"
  input: "adam_optimizer/Adam/beta2"
  input: "adam_optimizer/Adam/epsilon"
  input: "adam_optimizer/gradients/conv2/add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "adam_optimizer/Adam/update_dense/weight/ApplyAdam"
  op: "ApplyAdam"
  input: "dense/weight"
  input: "dense/weight/Adam"
  input: "dense/weight/Adam_1"
  input: "adam_optimizer/beta1_power/read"
  input: "adam_optimizer/beta2_power/read"
  input: "adam_optimizer/Adam/learning_rate"
  input: "adam_optimizer/Adam/beta1"
  input: "adam_optimizer/Adam/beta2"
  input: "adam_optimizer/Adam/epsilon"
  input: "adam_optimizer/gradients/dense/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "adam_optimizer/Adam/update_dense/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "dense/bias"
  input: "dense/bias/Adam"
  input: "dense/bias/Adam_1"
  input: "adam_optimizer/beta1_power/read"
  input: "adam_optimizer/beta2_power/read"
  input: "adam_optimizer/Adam/learning_rate"
  input: "adam_optimizer/Adam/beta1"
  input: "adam_optimizer/Adam/beta2"
  input: "adam_optimizer/Adam/epsilon"
  input: "adam_optimizer/gradients/dense/add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "adam_optimizer/Adam/update_output/weight/ApplyAdam"
  op: "ApplyAdam"
  input: "output/weight"
  input: "output/weight/Adam"
  input: "output/weight/Adam_1"
  input: "adam_optimizer/beta1_power/read"
  input: "adam_optimizer/beta2_power/read"
  input: "adam_optimizer/Adam/learning_rate"
  input: "adam_optimizer/Adam/beta1"
  input: "adam_optimizer/Adam/beta2"
  input: "adam_optimizer/Adam/epsilon"
  input: "adam_optimizer/gradients/output/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output/weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "adam_optimizer/Adam/update_output/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "output/bias"
  input: "output/bias/Adam"
  input: "output/bias/Adam_1"
  input: "adam_optimizer/beta1_power/read"
  input: "adam_optimizer/beta2_power/read"
  input: "adam_optimizer/Adam/learning_rate"
  input: "adam_optimizer/Adam/beta1"
  input: "adam_optimizer/Adam/beta2"
  input: "adam_optimizer/Adam/epsilon"
  input: "adam_optimizer/gradients/output/predict_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "adam_optimizer/Adam/mul"
  op: "Mul"
  input: "adam_optimizer/beta1_power/read"
  input: "adam_optimizer/Adam/beta1"
  input: "^adam_optimizer/Adam/update_conv1/weight/ApplyAdam"
  input: "^adam_optimizer/Adam/update_conv1/bias/ApplyAdam"
  input: "^adam_optimizer/Adam/update_conv2/weight/ApplyAdam"
  input: "^adam_optimizer/Adam/update_conv2/bias/ApplyAdam"
  input: "^adam_optimizer/Adam/update_dense/weight/ApplyAdam"
  input: "^adam_optimizer/Adam/update_dense/bias/ApplyAdam"
  input: "^adam_optimizer/Adam/update_output/weight/ApplyAdam"
  input: "^adam_optimizer/Adam/update_output/bias/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/weight"
      }
    }
  }
}
node {
  name: "adam_optimizer/Adam/Assign"
  op: "Assign"
  input: "adam_optimizer/beta1_power"
  input: "adam_optimizer/Adam/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "adam_optimizer/Adam/mul_1"
  op: "Mul"
  input: "adam_optimizer/beta2_power/read"
  input: "adam_optimizer/Adam/beta2"
  input: "^adam_optimizer/Adam/update_conv1/weight/ApplyAdam"
  input: "^adam_optimizer/Adam/update_conv1/bias/ApplyAdam"
  input: "^adam_optimizer/Adam/update_conv2/weight/ApplyAdam"
  input: "^adam_optimizer/Adam/update_conv2/bias/ApplyAdam"
  input: "^adam_optimizer/Adam/update_dense/weight/ApplyAdam"
  input: "^adam_optimizer/Adam/update_dense/bias/ApplyAdam"
  input: "^adam_optimizer/Adam/update_output/weight/ApplyAdam"
  input: "^adam_optimizer/Adam/update_output/bias/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/weight"
      }
    }
  }
}
node {
  name: "adam_optimizer/Adam/Assign_1"
  op: "Assign"
  input: "adam_optimizer/beta2_power"
  input: "adam_optimizer/Adam/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "adam_optimizer/Adam"
  op: "NoOp"
  input: "^adam_optimizer/Adam/update_conv1/weight/ApplyAdam"
  input: "^adam_optimizer/Adam/update_conv1/bias/ApplyAdam"
  input: "^adam_optimizer/Adam/update_conv2/weight/ApplyAdam"
  input: "^adam_optimizer/Adam/update_conv2/bias/ApplyAdam"
  input: "^adam_optimizer/Adam/update_dense/weight/ApplyAdam"
  input: "^adam_optimizer/Adam/update_dense/bias/ApplyAdam"
  input: "^adam_optimizer/Adam/update_output/weight/ApplyAdam"
  input: "^adam_optimizer/Adam/update_output/bias/ApplyAdam"
  input: "^adam_optimizer/Adam/Assign"
  input: "^adam_optimizer/Adam/Assign_1"
}
node {
  name: "accuracy/ArgMax/dimension"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "accuracy/ArgMax"
  op: "ArgMax"
  input: "output/predict"
  input: "accuracy/ArgMax/dimension"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "accuracy/ArgMax_1/dimension"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "accuracy/ArgMax_1"
  op: "ArgMax"
  input: "y_"
  input: "accuracy/ArgMax_1/dimension"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "accuracy/Equal"
  op: "Equal"
  input: "accuracy/ArgMax"
  input: "accuracy/ArgMax_1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "accuracy/Cast"
  op: "Cast"
  input: "accuracy/Equal"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "accuracy_1"
  op: "Mean"
  input: "accuracy/Cast"
  input: "Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "save/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/SaveV2/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 26
          }
        }
        string_val: "adam_optimizer/beta1_power"
        string_val: "adam_optimizer/beta2_power"
        string_val: "conv1/bias"
        string_val: "conv1/bias/Adam"
        string_val: "conv1/bias/Adam_1"
        string_val: "conv1/weight"
        string_val: "conv1/weight/Adam"
        string_val: "conv1/weight/Adam_1"
        string_val: "conv2/bias"
        string_val: "conv2/bias/Adam"
        string_val: "conv2/bias/Adam_1"
        string_val: "conv2/weight"
        string_val: "conv2/weight/Adam"
        string_val: "conv2/weight/Adam_1"
        string_val: "dense/bias"
        string_val: "dense/bias/Adam"
        string_val: "dense/bias/Adam_1"
        string_val: "dense/weight"
        string_val: "dense/weight/Adam"
        string_val: "dense/weight/Adam_1"
        string_val: "output/bias"
        string_val: "output/bias/Adam"
        string_val: "output/bias/Adam_1"
        string_val: "output/weight"
        string_val: "output/weight/Adam"
        string_val: "output/weight/Adam_1"
      }
    }
  }
}
node {
  name: "save/SaveV2/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 26
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/SaveV2"
  op: "SaveV2"
  input: "save/Const"
  input: "save/SaveV2/tensor_names"
  input: "save/SaveV2/shape_and_slices"
  input: "adam_optimizer/beta1_power"
  input: "adam_optimizer/beta2_power"
  input: "conv1/bias"
  input: "conv1/bias/Adam"
  input: "conv1/bias/Adam_1"
  input: "conv1/weight"
  input: "conv1/weight/Adam"
  input: "conv1/weight/Adam_1"
  input: "conv2/bias"
  input: "conv2/bias/Adam"
  input: "conv2/bias/Adam_1"
  input: "conv2/weight"
  input: "conv2/weight/Adam"
  input: "conv2/weight/Adam_1"
  input: "dense/bias"
  input: "dense/bias/Adam"
  input: "dense/bias/Adam_1"
  input: "dense/weight"
  input: "dense/weight/Adam"
  input: "dense/weight/Adam_1"
  input: "output/bias"
  input: "output/bias/Adam"
  input: "output/bias/Adam_1"
  input: "output/weight"
  input: "output/weight/Adam"
  input: "output/weight/Adam_1"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/Const"
  input: "^save/SaveV2"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save/Const"
      }
    }
  }
}
node {
  name: "save/RestoreV2/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "adam_optimizer/beta1_power"
      }
    }
  }
}
node {
  name: "save/RestoreV2/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2/tensor_names"
  input: "save/RestoreV2/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign"
  op: "Assign"
  input: "adam_optimizer/beta1_power"
  input: "save/RestoreV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_1/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "adam_optimizer/beta2_power"
      }
    }
  }
}
node {
  name: "save/RestoreV2_1/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_1"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_1/tensor_names"
  input: "save/RestoreV2_1/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_1"
  op: "Assign"
  input: "adam_optimizer/beta2_power"
  input: "save/RestoreV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_2/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "conv1/bias"
      }
    }
  }
}
node {
  name: "save/RestoreV2_2/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_2/tensor_names"
  input: "save/RestoreV2_2/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_2"
  op: "Assign"
  input: "conv1/bias"
  input: "save/RestoreV2_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_3/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "conv1/bias/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_3/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_3"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_3/tensor_names"
  input: "save/RestoreV2_3/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_3"
  op: "Assign"
  input: "conv1/bias/Adam"
  input: "save/RestoreV2_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_4/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "conv1/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_4/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_4"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_4/tensor_names"
  input: "save/RestoreV2_4/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_4"
  op: "Assign"
  input: "conv1/bias/Adam_1"
  input: "save/RestoreV2_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_5/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "conv1/weight"
      }
    }
  }
}
node {
  name: "save/RestoreV2_5/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_5"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_5/tensor_names"
  input: "save/RestoreV2_5/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_5"
  op: "Assign"
  input: "conv1/weight"
  input: "save/RestoreV2_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_6/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "conv1/weight/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_6/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_6"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_6/tensor_names"
  input: "save/RestoreV2_6/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_6"
  op: "Assign"
  input: "conv1/weight/Adam"
  input: "save/RestoreV2_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_7/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "conv1/weight/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_7/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_7"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_7/tensor_names"
  input: "save/RestoreV2_7/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_7"
  op: "Assign"
  input: "conv1/weight/Adam_1"
  input: "save/RestoreV2_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_8/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "conv2/bias"
      }
    }
  }
}
node {
  name: "save/RestoreV2_8/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_8"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_8/tensor_names"
  input: "save/RestoreV2_8/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_8"
  op: "Assign"
  input: "conv2/bias"
  input: "save/RestoreV2_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_9/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "conv2/bias/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_9/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_9"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_9/tensor_names"
  input: "save/RestoreV2_9/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_9"
  op: "Assign"
  input: "conv2/bias/Adam"
  input: "save/RestoreV2_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_10/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "conv2/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_10/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_10"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_10/tensor_names"
  input: "save/RestoreV2_10/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_10"
  op: "Assign"
  input: "conv2/bias/Adam_1"
  input: "save/RestoreV2_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_11/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "conv2/weight"
      }
    }
  }
}
node {
  name: "save/RestoreV2_11/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_11"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_11/tensor_names"
  input: "save/RestoreV2_11/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_11"
  op: "Assign"
  input: "conv2/weight"
  input: "save/RestoreV2_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_12/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "conv2/weight/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_12/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_12"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_12/tensor_names"
  input: "save/RestoreV2_12/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_12"
  op: "Assign"
  input: "conv2/weight/Adam"
  input: "save/RestoreV2_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_13/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "conv2/weight/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_13/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_13"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_13/tensor_names"
  input: "save/RestoreV2_13/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_13"
  op: "Assign"
  input: "conv2/weight/Adam_1"
  input: "save/RestoreV2_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_14/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "dense/bias"
      }
    }
  }
}
node {
  name: "save/RestoreV2_14/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_14"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_14/tensor_names"
  input: "save/RestoreV2_14/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_14"
  op: "Assign"
  input: "dense/bias"
  input: "save/RestoreV2_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_15/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "dense/bias/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_15/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_15"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_15/tensor_names"
  input: "save/RestoreV2_15/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_15"
  op: "Assign"
  input: "dense/bias/Adam"
  input: "save/RestoreV2_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_16/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "dense/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_16/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_16"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_16/tensor_names"
  input: "save/RestoreV2_16/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_16"
  op: "Assign"
  input: "dense/bias/Adam_1"
  input: "save/RestoreV2_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_17/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "dense/weight"
      }
    }
  }
}
node {
  name: "save/RestoreV2_17/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_17"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_17/tensor_names"
  input: "save/RestoreV2_17/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_17"
  op: "Assign"
  input: "dense/weight"
  input: "save/RestoreV2_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_18/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "dense/weight/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_18/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_18"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_18/tensor_names"
  input: "save/RestoreV2_18/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_18"
  op: "Assign"
  input: "dense/weight/Adam"
  input: "save/RestoreV2_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_19/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "dense/weight/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_19/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_19"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_19/tensor_names"
  input: "save/RestoreV2_19/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_19"
  op: "Assign"
  input: "dense/weight/Adam_1"
  input: "save/RestoreV2_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_20/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "output/bias"
      }
    }
  }
}
node {
  name: "save/RestoreV2_20/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_20"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_20/tensor_names"
  input: "save/RestoreV2_20/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_20"
  op: "Assign"
  input: "output/bias"
  input: "save/RestoreV2_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_21/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "output/bias/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_21/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_21"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_21/tensor_names"
  input: "save/RestoreV2_21/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_21"
  op: "Assign"
  input: "output/bias/Adam"
  input: "save/RestoreV2_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_22/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "output/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_22/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_22"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_22/tensor_names"
  input: "save/RestoreV2_22/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_22"
  op: "Assign"
  input: "output/bias/Adam_1"
  input: "save/RestoreV2_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_23/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "output/weight"
      }
    }
  }
}
node {
  name: "save/RestoreV2_23/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_23"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_23/tensor_names"
  input: "save/RestoreV2_23/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_23"
  op: "Assign"
  input: "output/weight"
  input: "save/RestoreV2_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output/weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_24/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "output/weight/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_24/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_24"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_24/tensor_names"
  input: "save/RestoreV2_24/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_24"
  op: "Assign"
  input: "output/weight/Adam"
  input: "save/RestoreV2_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output/weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_25/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "output/weight/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_25/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_25"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_25/tensor_names"
  input: "save/RestoreV2_25/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_25"
  op: "Assign"
  input: "output/weight/Adam_1"
  input: "save/RestoreV2_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output/weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/Assign"
  input: "^save/Assign_1"
  input: "^save/Assign_2"
  input: "^save/Assign_3"
  input: "^save/Assign_4"
  input: "^save/Assign_5"
  input: "^save/Assign_6"
  input: "^save/Assign_7"
  input: "^save/Assign_8"
  input: "^save/Assign_9"
  input: "^save/Assign_10"
  input: "^save/Assign_11"
  input: "^save/Assign_12"
  input: "^save/Assign_13"
  input: "^save/Assign_14"
  input: "^save/Assign_15"
  input: "^save/Assign_16"
  input: "^save/Assign_17"
  input: "^save/Assign_18"
  input: "^save/Assign_19"
  input: "^save/Assign_20"
  input: "^save/Assign_21"
  input: "^save/Assign_22"
  input: "^save/Assign_23"
  input: "^save/Assign_24"
  input: "^save/Assign_25"
}
node {
  name: "init"
  op: "NoOp"
}
node {
  name: "init_1"
  op: "NoOp"
  input: "^conv1/weight/Assign"
  input: "^conv1/bias/Assign"
  input: "^conv2/weight/Assign"
  input: "^conv2/bias/Assign"
  input: "^dense/weight/Assign"
  input: "^dense/bias/Assign"
  input: "^output/weight/Assign"
  input: "^output/bias/Assign"
  input: "^adam_optimizer/beta1_power/Assign"
  input: "^adam_optimizer/beta2_power/Assign"
  input: "^conv1/weight/Adam/Assign"
  input: "^conv1/weight/Adam_1/Assign"
  input: "^conv1/bias/Adam/Assign"
  input: "^conv1/bias/Adam_1/Assign"
  input: "^conv2/weight/Adam/Assign"
  input: "^conv2/weight/Adam_1/Assign"
  input: "^conv2/bias/Adam/Assign"
  input: "^conv2/bias/Adam_1/Assign"
  input: "^dense/weight/Adam/Assign"
  input: "^dense/weight/Adam_1/Assign"
  input: "^dense/bias/Adam/Assign"
  input: "^dense/bias/Adam_1/Assign"
  input: "^output/weight/Adam/Assign"
  input: "^output/weight/Adam_1/Assign"
  input: "^output/bias/Adam/Assign"
  input: "^output/bias/Adam_1/Assign"
}
node {
  name: "group_deps"
  op: "NoOp"
  input: "^init"
  input: "^init_1"
}
node {
  name: "filenames"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
      }
    }
  }
}
node {
  name: "compression_type"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "buffer_size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 10000
      }
    }
  }
}
node {
  name: "seed"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "seed2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "count"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "OneShotIterator"
  op: "OneShotIterator"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dataset_factory"
    value {
      func {
        name: "_make_dataset_73321b54"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "IteratorGetNext"
  op: "IteratorGetNext"
  input: "OneShotIterator"
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
}
node {
  name: "init_2"
  op: "NoOp"
  input: "^conv1/weight/Assign"
  input: "^conv1/bias/Assign"
  input: "^conv2/weight/Assign"
  input: "^conv2/bias/Assign"
  input: "^dense/weight/Assign"
  input: "^dense/bias/Assign"
  input: "^output/weight/Assign"
  input: "^output/bias/Assign"
  input: "^adam_optimizer/beta1_power/Assign"
  input: "^adam_optimizer/beta2_power/Assign"
  input: "^conv1/weight/Adam/Assign"
  input: "^conv1/weight/Adam_1/Assign"
  input: "^conv1/bias/Adam/Assign"
  input: "^conv1/bias/Adam_1/Assign"
  input: "^conv2/weight/Adam/Assign"
  input: "^conv2/weight/Adam_1/Assign"
  input: "^conv2/bias/Adam/Assign"
  input: "^conv2/bias/Adam_1/Assign"
  input: "^dense/weight/Adam/Assign"
  input: "^dense/weight/Adam_1/Assign"
  input: "^dense/bias/Adam/Assign"
  input: "^dense/bias/Adam_1/Assign"
  input: "^output/weight/Adam/Assign"
  input: "^output/weight/Adam_1/Assign"
  input: "^output/bias/Adam/Assign"
  input: "^output/bias/Adam_1/Assign"
}
node {
  name: "init_3"
  op: "NoOp"
}
node {
  name: "group_deps_1"
  op: "NoOp"
  input: "^init_2"
  input: "^init_3"
}
node {
  name: "filenames_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
      }
    }
  }
}
node {
  name: "compression_type_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "buffer_size_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 10000
      }
    }
  }
}
node {
  name: "seed_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "seed2_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "count_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "OneShotIterator_1"
  op: "OneShotIterator"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dataset_factory"
    value {
      func {
        name: "_make_dataset_25fe4941"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "IteratorGetNext_1"
  op: "IteratorGetNext"
  input: "OneShotIterator_1"
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
}
node {
  name: "init_4"
  op: "NoOp"
  input: "^conv1/weight/Assign"
  input: "^conv1/bias/Assign"
  input: "^conv2/weight/Assign"
  input: "^conv2/bias/Assign"
  input: "^dense/weight/Assign"
  input: "^dense/bias/Assign"
  input: "^output/weight/Assign"
  input: "^output/bias/Assign"
  input: "^adam_optimizer/beta1_power/Assign"
  input: "^adam_optimizer/beta2_power/Assign"
  input: "^conv1/weight/Adam/Assign"
  input: "^conv1/weight/Adam_1/Assign"
  input: "^conv1/bias/Adam/Assign"
  input: "^conv1/bias/Adam_1/Assign"
  input: "^conv2/weight/Adam/Assign"
  input: "^conv2/weight/Adam_1/Assign"
  input: "^conv2/bias/Adam/Assign"
  input: "^conv2/bias/Adam_1/Assign"
  input: "^dense/weight/Adam/Assign"
  input: "^dense/weight/Adam_1/Assign"
  input: "^dense/bias/Adam/Assign"
  input: "^dense/bias/Adam_1/Assign"
  input: "^output/weight/Adam/Assign"
  input: "^output/weight/Adam_1/Assign"
  input: "^output/bias/Adam/Assign"
  input: "^output/bias/Adam_1/Assign"
}
node {
  name: "init_5"
  op: "NoOp"
}
node {
  name: "group_deps_2"
  op: "NoOp"
  input: "^init_4"
  input: "^init_5"
}
node {
  name: "filenames_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
      }
    }
  }
}
node {
  name: "compression_type_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "buffer_size_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 10000
      }
    }
  }
}
node {
  name: "seed_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "seed2_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "count_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "OneShotIterator_2"
  op: "OneShotIterator"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dataset_factory"
    value {
      func {
        name: "_make_dataset_5df3c43f"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "IteratorGetNext_2"
  op: "IteratorGetNext"
  input: "OneShotIterator_2"
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
}
node {
  name: "init_6"
  op: "NoOp"
  input: "^conv1/weight/Assign"
  input: "^conv1/bias/Assign"
  input: "^conv2/weight/Assign"
  input: "^conv2/bias/Assign"
  input: "^dense/weight/Assign"
  input: "^dense/bias/Assign"
  input: "^output/weight/Assign"
  input: "^output/bias/Assign"
  input: "^adam_optimizer/beta1_power/Assign"
  input: "^adam_optimizer/beta2_power/Assign"
  input: "^conv1/weight/Adam/Assign"
  input: "^conv1/weight/Adam_1/Assign"
  input: "^conv1/bias/Adam/Assign"
  input: "^conv1/bias/Adam_1/Assign"
  input: "^conv2/weight/Adam/Assign"
  input: "^conv2/weight/Adam_1/Assign"
  input: "^conv2/bias/Adam/Assign"
  input: "^conv2/bias/Adam_1/Assign"
  input: "^dense/weight/Adam/Assign"
  input: "^dense/weight/Adam_1/Assign"
  input: "^dense/bias/Adam/Assign"
  input: "^dense/bias/Adam_1/Assign"
  input: "^output/weight/Adam/Assign"
  input: "^output/weight/Adam_1/Assign"
  input: "^output/bias/Adam/Assign"
  input: "^output/bias/Adam_1/Assign"
}
node {
  name: "init_7"
  op: "NoOp"
}
node {
  name: "group_deps_3"
  op: "NoOp"
  input: "^init_6"
  input: "^init_7"
}
node {
  name: "filenames_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
      }
    }
  }
}
node {
  name: "compression_type_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "buffer_size_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 10000
      }
    }
  }
}
node {
  name: "seed_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "seed2_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "count_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "OneShotIterator_3"
  op: "OneShotIterator"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dataset_factory"
    value {
      func {
        name: "_make_dataset_c93cb149"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "IteratorGetNext_3"
  op: "IteratorGetNext"
  input: "OneShotIterator_3"
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
}
node {
  name: "init_8"
  op: "NoOp"
  input: "^conv1/weight/Assign"
  input: "^conv1/bias/Assign"
  input: "^conv2/weight/Assign"
  input: "^conv2/bias/Assign"
  input: "^dense/weight/Assign"
  input: "^dense/bias/Assign"
  input: "^output/weight/Assign"
  input: "^output/bias/Assign"
  input: "^adam_optimizer/beta1_power/Assign"
  input: "^adam_optimizer/beta2_power/Assign"
  input: "^conv1/weight/Adam/Assign"
  input: "^conv1/weight/Adam_1/Assign"
  input: "^conv1/bias/Adam/Assign"
  input: "^conv1/bias/Adam_1/Assign"
  input: "^conv2/weight/Adam/Assign"
  input: "^conv2/weight/Adam_1/Assign"
  input: "^conv2/bias/Adam/Assign"
  input: "^conv2/bias/Adam_1/Assign"
  input: "^dense/weight/Adam/Assign"
  input: "^dense/weight/Adam_1/Assign"
  input: "^dense/bias/Adam/Assign"
  input: "^dense/bias/Adam_1/Assign"
  input: "^output/weight/Adam/Assign"
  input: "^output/weight/Adam_1/Assign"
  input: "^output/bias/Adam/Assign"
  input: "^output/bias/Adam_1/Assign"
}
node {
  name: "init_9"
  op: "NoOp"
}
node {
  name: "group_deps_4"
  op: "NoOp"
  input: "^init_8"
  input: "^init_9"
}
node {
  name: "filenames_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
      }
    }
  }
}
node {
  name: "compression_type_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "buffer_size_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 10000
      }
    }
  }
}
node {
  name: "seed_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "seed2_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "count_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "OneShotIterator_4"
  op: "OneShotIterator"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dataset_factory"
    value {
      func {
        name: "_make_dataset_15282579"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "IteratorGetNext_4"
  op: "IteratorGetNext"
  input: "OneShotIterator_4"
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
}
node {
  name: "init_10"
  op: "NoOp"
  input: "^conv1/weight/Assign"
  input: "^conv1/bias/Assign"
  input: "^conv2/weight/Assign"
  input: "^conv2/bias/Assign"
  input: "^dense/weight/Assign"
  input: "^dense/bias/Assign"
  input: "^output/weight/Assign"
  input: "^output/bias/Assign"
  input: "^adam_optimizer/beta1_power/Assign"
  input: "^adam_optimizer/beta2_power/Assign"
  input: "^conv1/weight/Adam/Assign"
  input: "^conv1/weight/Adam_1/Assign"
  input: "^conv1/bias/Adam/Assign"
  input: "^conv1/bias/Adam_1/Assign"
  input: "^conv2/weight/Adam/Assign"
  input: "^conv2/weight/Adam_1/Assign"
  input: "^conv2/bias/Adam/Assign"
  input: "^conv2/bias/Adam_1/Assign"
  input: "^dense/weight/Adam/Assign"
  input: "^dense/weight/Adam_1/Assign"
  input: "^dense/bias/Adam/Assign"
  input: "^dense/bias/Adam_1/Assign"
  input: "^output/weight/Adam/Assign"
  input: "^output/weight/Adam_1/Assign"
  input: "^output/bias/Adam/Assign"
  input: "^output/bias/Adam_1/Assign"
}
node {
  name: "init_11"
  op: "NoOp"
}
node {
  name: "group_deps_5"
  op: "NoOp"
  input: "^init_10"
  input: "^init_11"
}
node {
  name: "filenames_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
      }
    }
  }
}
node {
  name: "compression_type_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "buffer_size_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 10000
      }
    }
  }
}
node {
  name: "seed_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "seed2_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "count_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "OneShotIterator_5"
  op: "OneShotIterator"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dataset_factory"
    value {
      func {
        name: "_make_dataset_da51847f"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "IteratorGetNext_5"
  op: "IteratorGetNext"
  input: "OneShotIterator_5"
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
}
node {
  name: "init_12"
  op: "NoOp"
  input: "^conv1/weight/Assign"
  input: "^conv1/bias/Assign"
  input: "^conv2/weight/Assign"
  input: "^conv2/bias/Assign"
  input: "^dense/weight/Assign"
  input: "^dense/bias/Assign"
  input: "^output/weight/Assign"
  input: "^output/bias/Assign"
  input: "^adam_optimizer/beta1_power/Assign"
  input: "^adam_optimizer/beta2_power/Assign"
  input: "^conv1/weight/Adam/Assign"
  input: "^conv1/weight/Adam_1/Assign"
  input: "^conv1/bias/Adam/Assign"
  input: "^conv1/bias/Adam_1/Assign"
  input: "^conv2/weight/Adam/Assign"
  input: "^conv2/weight/Adam_1/Assign"
  input: "^conv2/bias/Adam/Assign"
  input: "^conv2/bias/Adam_1/Assign"
  input: "^dense/weight/Adam/Assign"
  input: "^dense/weight/Adam_1/Assign"
  input: "^dense/bias/Adam/Assign"
  input: "^dense/bias/Adam_1/Assign"
  input: "^output/weight/Adam/Assign"
  input: "^output/weight/Adam_1/Assign"
  input: "^output/bias/Adam/Assign"
  input: "^output/bias/Adam_1/Assign"
}
node {
  name: "init_13"
  op: "NoOp"
}
node {
  name: "group_deps_6"
  op: "NoOp"
  input: "^init_12"
  input: "^init_13"
}
node {
  name: "filenames_6"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
      }
    }
  }
}
node {
  name: "compression_type_6"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "buffer_size_6"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 10000
      }
    }
  }
}
node {
  name: "seed_6"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "seed2_6"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "count_6"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "OneShotIterator_6"
  op: "OneShotIterator"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dataset_factory"
    value {
      func {
        name: "_make_dataset_a121f78a"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "IteratorGetNext_6"
  op: "IteratorGetNext"
  input: "OneShotIterator_6"
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
}
node {
  name: "init_14"
  op: "NoOp"
  input: "^conv1/weight/Assign"
  input: "^conv1/bias/Assign"
  input: "^conv2/weight/Assign"
  input: "^conv2/bias/Assign"
  input: "^dense/weight/Assign"
  input: "^dense/bias/Assign"
  input: "^output/weight/Assign"
  input: "^output/bias/Assign"
  input: "^adam_optimizer/beta1_power/Assign"
  input: "^adam_optimizer/beta2_power/Assign"
  input: "^conv1/weight/Adam/Assign"
  input: "^conv1/weight/Adam_1/Assign"
  input: "^conv1/bias/Adam/Assign"
  input: "^conv1/bias/Adam_1/Assign"
  input: "^conv2/weight/Adam/Assign"
  input: "^conv2/weight/Adam_1/Assign"
  input: "^conv2/bias/Adam/Assign"
  input: "^conv2/bias/Adam_1/Assign"
  input: "^dense/weight/Adam/Assign"
  input: "^dense/weight/Adam_1/Assign"
  input: "^dense/bias/Adam/Assign"
  input: "^dense/bias/Adam_1/Assign"
  input: "^output/weight/Adam/Assign"
  input: "^output/weight/Adam_1/Assign"
  input: "^output/bias/Adam/Assign"
  input: "^output/bias/Adam_1/Assign"
}
node {
  name: "init_15"
  op: "NoOp"
}
node {
  name: "group_deps_7"
  op: "NoOp"
  input: "^init_14"
  input: "^init_15"
}
node {
  name: "filenames_7"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
      }
    }
  }
}
node {
  name: "compression_type_7"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "buffer_size_7"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 10000
      }
    }
  }
}
node {
  name: "seed_7"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "seed2_7"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "count_7"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "OneShotIterator_7"
  op: "OneShotIterator"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dataset_factory"
    value {
      func {
        name: "_make_dataset_1e24b8dc"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "IteratorGetNext_7"
  op: "IteratorGetNext"
  input: "OneShotIterator_7"
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
}
node {
  name: "init_16"
  op: "NoOp"
  input: "^conv1/weight/Assign"
  input: "^conv1/bias/Assign"
  input: "^conv2/weight/Assign"
  input: "^conv2/bias/Assign"
  input: "^dense/weight/Assign"
  input: "^dense/bias/Assign"
  input: "^output/weight/Assign"
  input: "^output/bias/Assign"
  input: "^adam_optimizer/beta1_power/Assign"
  input: "^adam_optimizer/beta2_power/Assign"
  input: "^conv1/weight/Adam/Assign"
  input: "^conv1/weight/Adam_1/Assign"
  input: "^conv1/bias/Adam/Assign"
  input: "^conv1/bias/Adam_1/Assign"
  input: "^conv2/weight/Adam/Assign"
  input: "^conv2/weight/Adam_1/Assign"
  input: "^conv2/bias/Adam/Assign"
  input: "^conv2/bias/Adam_1/Assign"
  input: "^dense/weight/Adam/Assign"
  input: "^dense/weight/Adam_1/Assign"
  input: "^dense/bias/Adam/Assign"
  input: "^dense/bias/Adam_1/Assign"
  input: "^output/weight/Adam/Assign"
  input: "^output/weight/Adam_1/Assign"
  input: "^output/bias/Adam/Assign"
  input: "^output/bias/Adam_1/Assign"
}
node {
  name: "init_17"
  op: "NoOp"
}
node {
  name: "group_deps_8"
  op: "NoOp"
  input: "^init_16"
  input: "^init_17"
}
node {
  name: "filenames_8"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
      }
    }
  }
}
node {
  name: "compression_type_8"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "buffer_size_8"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 10000
      }
    }
  }
}
node {
  name: "seed_8"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "seed2_8"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "count_8"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "OneShotIterator_8"
  op: "OneShotIterator"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dataset_factory"
    value {
      func {
        name: "_make_dataset_e2eb9688"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "IteratorGetNext_8"
  op: "IteratorGetNext"
  input: "OneShotIterator_8"
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
}
node {
  name: "init_18"
  op: "NoOp"
  input: "^conv1/weight/Assign"
  input: "^conv1/bias/Assign"
  input: "^conv2/weight/Assign"
  input: "^conv2/bias/Assign"
  input: "^dense/weight/Assign"
  input: "^dense/bias/Assign"
  input: "^output/weight/Assign"
  input: "^output/bias/Assign"
  input: "^adam_optimizer/beta1_power/Assign"
  input: "^adam_optimizer/beta2_power/Assign"
  input: "^conv1/weight/Adam/Assign"
  input: "^conv1/weight/Adam_1/Assign"
  input: "^conv1/bias/Adam/Assign"
  input: "^conv1/bias/Adam_1/Assign"
  input: "^conv2/weight/Adam/Assign"
  input: "^conv2/weight/Adam_1/Assign"
  input: "^conv2/bias/Adam/Assign"
  input: "^conv2/bias/Adam_1/Assign"
  input: "^dense/weight/Adam/Assign"
  input: "^dense/weight/Adam_1/Assign"
  input: "^dense/bias/Adam/Assign"
  input: "^dense/bias/Adam_1/Assign"
  input: "^output/weight/Adam/Assign"
  input: "^output/weight/Adam_1/Assign"
  input: "^output/bias/Adam/Assign"
  input: "^output/bias/Adam_1/Assign"
}
node {
  name: "init_19"
  op: "NoOp"
}
node {
  name: "group_deps_9"
  op: "NoOp"
  input: "^init_18"
  input: "^init_19"
}
node {
  name: "filenames_9"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
      }
    }
  }
}
node {
  name: "compression_type_9"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "buffer_size_9"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 10000
      }
    }
  }
}
node {
  name: "seed_9"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "seed2_9"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "count_9"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "OneShotIterator_9"
  op: "OneShotIterator"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dataset_factory"
    value {
      func {
        name: "_make_dataset_50d25e02"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "IteratorGetNext_9"
  op: "IteratorGetNext"
  input: "OneShotIterator_9"
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
}
node {
  name: "init_20"
  op: "NoOp"
  input: "^conv1/weight/Assign"
  input: "^conv1/bias/Assign"
  input: "^conv2/weight/Assign"
  input: "^conv2/bias/Assign"
  input: "^dense/weight/Assign"
  input: "^dense/bias/Assign"
  input: "^output/weight/Assign"
  input: "^output/bias/Assign"
  input: "^adam_optimizer/beta1_power/Assign"
  input: "^adam_optimizer/beta2_power/Assign"
  input: "^conv1/weight/Adam/Assign"
  input: "^conv1/weight/Adam_1/Assign"
  input: "^conv1/bias/Adam/Assign"
  input: "^conv1/bias/Adam_1/Assign"
  input: "^conv2/weight/Adam/Assign"
  input: "^conv2/weight/Adam_1/Assign"
  input: "^conv2/bias/Adam/Assign"
  input: "^conv2/bias/Adam_1/Assign"
  input: "^dense/weight/Adam/Assign"
  input: "^dense/weight/Adam_1/Assign"
  input: "^dense/bias/Adam/Assign"
  input: "^dense/bias/Adam_1/Assign"
  input: "^output/weight/Adam/Assign"
  input: "^output/weight/Adam_1/Assign"
  input: "^output/bias/Adam/Assign"
  input: "^output/bias/Adam_1/Assign"
}
node {
  name: "init_21"
  op: "NoOp"
}
node {
  name: "group_deps_10"
  op: "NoOp"
  input: "^init_20"
  input: "^init_21"
}
node {
  name: "filenames_10"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
      }
    }
  }
}
node {
  name: "compression_type_10"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "buffer_size_10"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 10000
      }
    }
  }
}
node {
  name: "seed_10"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "seed2_10"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "count_10"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "OneShotIterator_10"
  op: "OneShotIterator"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dataset_factory"
    value {
      func {
        name: "_make_dataset_7482019a"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "IteratorGetNext_10"
  op: "IteratorGetNext"
  input: "OneShotIterator_10"
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
}
node {
  name: "init_22"
  op: "NoOp"
  input: "^conv1/weight/Assign"
  input: "^conv1/bias/Assign"
  input: "^conv2/weight/Assign"
  input: "^conv2/bias/Assign"
  input: "^dense/weight/Assign"
  input: "^dense/bias/Assign"
  input: "^output/weight/Assign"
  input: "^output/bias/Assign"
  input: "^adam_optimizer/beta1_power/Assign"
  input: "^adam_optimizer/beta2_power/Assign"
  input: "^conv1/weight/Adam/Assign"
  input: "^conv1/weight/Adam_1/Assign"
  input: "^conv1/bias/Adam/Assign"
  input: "^conv1/bias/Adam_1/Assign"
  input: "^conv2/weight/Adam/Assign"
  input: "^conv2/weight/Adam_1/Assign"
  input: "^conv2/bias/Adam/Assign"
  input: "^conv2/bias/Adam_1/Assign"
  input: "^dense/weight/Adam/Assign"
  input: "^dense/weight/Adam_1/Assign"
  input: "^dense/bias/Adam/Assign"
  input: "^dense/bias/Adam_1/Assign"
  input: "^output/weight/Adam/Assign"
  input: "^output/weight/Adam_1/Assign"
  input: "^output/bias/Adam/Assign"
  input: "^output/bias/Adam_1/Assign"
}
node {
  name: "init_23"
  op: "NoOp"
}
node {
  name: "group_deps_11"
  op: "NoOp"
  input: "^init_22"
  input: "^init_23"
}
node {
  name: "filenames_11"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
      }
    }
  }
}
node {
  name: "compression_type_11"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "buffer_size_11"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 10000
      }
    }
  }
}
node {
  name: "seed_11"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "seed2_11"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "count_11"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "OneShotIterator_11"
  op: "OneShotIterator"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dataset_factory"
    value {
      func {
        name: "_make_dataset_adaad4e5"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "IteratorGetNext_11"
  op: "IteratorGetNext"
  input: "OneShotIterator_11"
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
}
node {
  name: "init_24"
  op: "NoOp"
  input: "^conv1/weight/Assign"
  input: "^conv1/bias/Assign"
  input: "^conv2/weight/Assign"
  input: "^conv2/bias/Assign"
  input: "^dense/weight/Assign"
  input: "^dense/bias/Assign"
  input: "^output/weight/Assign"
  input: "^output/bias/Assign"
  input: "^adam_optimizer/beta1_power/Assign"
  input: "^adam_optimizer/beta2_power/Assign"
  input: "^conv1/weight/Adam/Assign"
  input: "^conv1/weight/Adam_1/Assign"
  input: "^conv1/bias/Adam/Assign"
  input: "^conv1/bias/Adam_1/Assign"
  input: "^conv2/weight/Adam/Assign"
  input: "^conv2/weight/Adam_1/Assign"
  input: "^conv2/bias/Adam/Assign"
  input: "^conv2/bias/Adam_1/Assign"
  input: "^dense/weight/Adam/Assign"
  input: "^dense/weight/Adam_1/Assign"
  input: "^dense/bias/Adam/Assign"
  input: "^dense/bias/Adam_1/Assign"
  input: "^output/weight/Adam/Assign"
  input: "^output/weight/Adam_1/Assign"
  input: "^output/bias/Adam/Assign"
  input: "^output/bias/Adam_1/Assign"
}
node {
  name: "init_25"
  op: "NoOp"
}
node {
  name: "group_deps_12"
  op: "NoOp"
  input: "^init_24"
  input: "^init_25"
}
node {
  name: "filenames_12"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
      }
    }
  }
}
node {
  name: "compression_type_12"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "buffer_size_12"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 10000
      }
    }
  }
}
node {
  name: "seed_12"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "seed2_12"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "count_12"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "OneShotIterator_12"
  op: "OneShotIterator"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dataset_factory"
    value {
      func {
        name: "_make_dataset_b5cadf40"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "IteratorGetNext_12"
  op: "IteratorGetNext"
  input: "OneShotIterator_12"
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
}
node {
  name: "init_26"
  op: "NoOp"
  input: "^conv1/weight/Assign"
  input: "^conv1/bias/Assign"
  input: "^conv2/weight/Assign"
  input: "^conv2/bias/Assign"
  input: "^dense/weight/Assign"
  input: "^dense/bias/Assign"
  input: "^output/weight/Assign"
  input: "^output/bias/Assign"
  input: "^adam_optimizer/beta1_power/Assign"
  input: "^adam_optimizer/beta2_power/Assign"
  input: "^conv1/weight/Adam/Assign"
  input: "^conv1/weight/Adam_1/Assign"
  input: "^conv1/bias/Adam/Assign"
  input: "^conv1/bias/Adam_1/Assign"
  input: "^conv2/weight/Adam/Assign"
  input: "^conv2/weight/Adam_1/Assign"
  input: "^conv2/bias/Adam/Assign"
  input: "^conv2/bias/Adam_1/Assign"
  input: "^dense/weight/Adam/Assign"
  input: "^dense/weight/Adam_1/Assign"
  input: "^dense/bias/Adam/Assign"
  input: "^dense/bias/Adam_1/Assign"
  input: "^output/weight/Adam/Assign"
  input: "^output/weight/Adam_1/Assign"
  input: "^output/bias/Adam/Assign"
  input: "^output/bias/Adam_1/Assign"
}
node {
  name: "init_27"
  op: "NoOp"
}
node {
  name: "group_deps_13"
  op: "NoOp"
  input: "^init_26"
  input: "^init_27"
}
node {
  name: "filenames_13"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
      }
    }
  }
}
node {
  name: "compression_type_13"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "buffer_size_13"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 10000
      }
    }
  }
}
node {
  name: "seed_13"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "seed2_13"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "count_13"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "OneShotIterator_13"
  op: "OneShotIterator"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dataset_factory"
    value {
      func {
        name: "_make_dataset_10e7a901"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "IteratorGetNext_13"
  op: "IteratorGetNext"
  input: "OneShotIterator_13"
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
}
node {
  name: "init_28"
  op: "NoOp"
  input: "^conv1/weight/Assign"
  input: "^conv1/bias/Assign"
  input: "^conv2/weight/Assign"
  input: "^conv2/bias/Assign"
  input: "^dense/weight/Assign"
  input: "^dense/bias/Assign"
  input: "^output/weight/Assign"
  input: "^output/bias/Assign"
  input: "^adam_optimizer/beta1_power/Assign"
  input: "^adam_optimizer/beta2_power/Assign"
  input: "^conv1/weight/Adam/Assign"
  input: "^conv1/weight/Adam_1/Assign"
  input: "^conv1/bias/Adam/Assign"
  input: "^conv1/bias/Adam_1/Assign"
  input: "^conv2/weight/Adam/Assign"
  input: "^conv2/weight/Adam_1/Assign"
  input: "^conv2/bias/Adam/Assign"
  input: "^conv2/bias/Adam_1/Assign"
  input: "^dense/weight/Adam/Assign"
  input: "^dense/weight/Adam_1/Assign"
  input: "^dense/bias/Adam/Assign"
  input: "^dense/bias/Adam_1/Assign"
  input: "^output/weight/Adam/Assign"
  input: "^output/weight/Adam_1/Assign"
  input: "^output/bias/Adam/Assign"
  input: "^output/bias/Adam_1/Assign"
}
node {
  name: "init_29"
  op: "NoOp"
}
node {
  name: "group_deps_14"
  op: "NoOp"
  input: "^init_28"
  input: "^init_29"
}
node {
  name: "filenames_14"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
      }
    }
  }
}
node {
  name: "compression_type_14"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "buffer_size_14"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 10000
      }
    }
  }
}
node {
  name: "seed_14"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "seed2_14"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "count_14"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "OneShotIterator_14"
  op: "OneShotIterator"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dataset_factory"
    value {
      func {
        name: "_make_dataset_ddfb07b9"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "IteratorGetNext_14"
  op: "IteratorGetNext"
  input: "OneShotIterator_14"
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
}
node {
  name: "init_30"
  op: "NoOp"
  input: "^conv1/weight/Assign"
  input: "^conv1/bias/Assign"
  input: "^conv2/weight/Assign"
  input: "^conv2/bias/Assign"
  input: "^dense/weight/Assign"
  input: "^dense/bias/Assign"
  input: "^output/weight/Assign"
  input: "^output/bias/Assign"
  input: "^adam_optimizer/beta1_power/Assign"
  input: "^adam_optimizer/beta2_power/Assign"
  input: "^conv1/weight/Adam/Assign"
  input: "^conv1/weight/Adam_1/Assign"
  input: "^conv1/bias/Adam/Assign"
  input: "^conv1/bias/Adam_1/Assign"
  input: "^conv2/weight/Adam/Assign"
  input: "^conv2/weight/Adam_1/Assign"
  input: "^conv2/bias/Adam/Assign"
  input: "^conv2/bias/Adam_1/Assign"
  input: "^dense/weight/Adam/Assign"
  input: "^dense/weight/Adam_1/Assign"
  input: "^dense/bias/Adam/Assign"
  input: "^dense/bias/Adam_1/Assign"
  input: "^output/weight/Adam/Assign"
  input: "^output/weight/Adam_1/Assign"
  input: "^output/bias/Adam/Assign"
  input: "^output/bias/Adam_1/Assign"
}
node {
  name: "init_31"
  op: "NoOp"
}
node {
  name: "group_deps_15"
  op: "NoOp"
  input: "^init_30"
  input: "^init_31"
}
node {
  name: "filenames_15"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
      }
    }
  }
}
node {
  name: "compression_type_15"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "buffer_size_15"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 10000
      }
    }
  }
}
node {
  name: "seed_15"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "seed2_15"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "count_15"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "OneShotIterator_15"
  op: "OneShotIterator"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dataset_factory"
    value {
      func {
        name: "_make_dataset_0b93173e"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "IteratorGetNext_15"
  op: "IteratorGetNext"
  input: "OneShotIterator_15"
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
}
node {
  name: "init_32"
  op: "NoOp"
  input: "^conv1/weight/Assign"
  input: "^conv1/bias/Assign"
  input: "^conv2/weight/Assign"
  input: "^conv2/bias/Assign"
  input: "^dense/weight/Assign"
  input: "^dense/bias/Assign"
  input: "^output/weight/Assign"
  input: "^output/bias/Assign"
  input: "^adam_optimizer/beta1_power/Assign"
  input: "^adam_optimizer/beta2_power/Assign"
  input: "^conv1/weight/Adam/Assign"
  input: "^conv1/weight/Adam_1/Assign"
  input: "^conv1/bias/Adam/Assign"
  input: "^conv1/bias/Adam_1/Assign"
  input: "^conv2/weight/Adam/Assign"
  input: "^conv2/weight/Adam_1/Assign"
  input: "^conv2/bias/Adam/Assign"
  input: "^conv2/bias/Adam_1/Assign"
  input: "^dense/weight/Adam/Assign"
  input: "^dense/weight/Adam_1/Assign"
  input: "^dense/bias/Adam/Assign"
  input: "^dense/bias/Adam_1/Assign"
  input: "^output/weight/Adam/Assign"
  input: "^output/weight/Adam_1/Assign"
  input: "^output/bias/Adam/Assign"
  input: "^output/bias/Adam_1/Assign"
}
node {
  name: "init_33"
  op: "NoOp"
}
node {
  name: "group_deps_16"
  op: "NoOp"
  input: "^init_32"
  input: "^init_33"
}
node {
  name: "filenames_16"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
      }
    }
  }
}
node {
  name: "compression_type_16"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "buffer_size_16"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 10000
      }
    }
  }
}
node {
  name: "seed_16"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "seed2_16"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "count_16"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "OneShotIterator_16"
  op: "OneShotIterator"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dataset_factory"
    value {
      func {
        name: "_make_dataset_20ee02c1"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "IteratorGetNext_16"
  op: "IteratorGetNext"
  input: "OneShotIterator_16"
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
}
node {
  name: "init_34"
  op: "NoOp"
  input: "^conv1/weight/Assign"
  input: "^conv1/bias/Assign"
  input: "^conv2/weight/Assign"
  input: "^conv2/bias/Assign"
  input: "^dense/weight/Assign"
  input: "^dense/bias/Assign"
  input: "^output/weight/Assign"
  input: "^output/bias/Assign"
  input: "^adam_optimizer/beta1_power/Assign"
  input: "^adam_optimizer/beta2_power/Assign"
  input: "^conv1/weight/Adam/Assign"
  input: "^conv1/weight/Adam_1/Assign"
  input: "^conv1/bias/Adam/Assign"
  input: "^conv1/bias/Adam_1/Assign"
  input: "^conv2/weight/Adam/Assign"
  input: "^conv2/weight/Adam_1/Assign"
  input: "^conv2/bias/Adam/Assign"
  input: "^conv2/bias/Adam_1/Assign"
  input: "^dense/weight/Adam/Assign"
  input: "^dense/weight/Adam_1/Assign"
  input: "^dense/bias/Adam/Assign"
  input: "^dense/bias/Adam_1/Assign"
  input: "^output/weight/Adam/Assign"
  input: "^output/weight/Adam_1/Assign"
  input: "^output/bias/Adam/Assign"
  input: "^output/bias/Adam_1/Assign"
}
node {
  name: "init_35"
  op: "NoOp"
}
node {
  name: "group_deps_17"
  op: "NoOp"
  input: "^init_34"
  input: "^init_35"
}
node {
  name: "filenames_17"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
      }
    }
  }
}
node {
  name: "compression_type_17"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "buffer_size_17"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 10000
      }
    }
  }
}
node {
  name: "seed_17"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "seed2_17"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "count_17"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "OneShotIterator_17"
  op: "OneShotIterator"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dataset_factory"
    value {
      func {
        name: "_make_dataset_d27c5142"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "IteratorGetNext_17"
  op: "IteratorGetNext"
  input: "OneShotIterator_17"
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
}
node {
  name: "init_36"
  op: "NoOp"
  input: "^conv1/weight/Assign"
  input: "^conv1/bias/Assign"
  input: "^conv2/weight/Assign"
  input: "^conv2/bias/Assign"
  input: "^dense/weight/Assign"
  input: "^dense/bias/Assign"
  input: "^output/weight/Assign"
  input: "^output/bias/Assign"
  input: "^adam_optimizer/beta1_power/Assign"
  input: "^adam_optimizer/beta2_power/Assign"
  input: "^conv1/weight/Adam/Assign"
  input: "^conv1/weight/Adam_1/Assign"
  input: "^conv1/bias/Adam/Assign"
  input: "^conv1/bias/Adam_1/Assign"
  input: "^conv2/weight/Adam/Assign"
  input: "^conv2/weight/Adam_1/Assign"
  input: "^conv2/bias/Adam/Assign"
  input: "^conv2/bias/Adam_1/Assign"
  input: "^dense/weight/Adam/Assign"
  input: "^dense/weight/Adam_1/Assign"
  input: "^dense/bias/Adam/Assign"
  input: "^dense/bias/Adam_1/Assign"
  input: "^output/weight/Adam/Assign"
  input: "^output/weight/Adam_1/Assign"
  input: "^output/bias/Adam/Assign"
  input: "^output/bias/Adam_1/Assign"
}
node {
  name: "init_37"
  op: "NoOp"
}
node {
  name: "group_deps_18"
  op: "NoOp"
  input: "^init_36"
  input: "^init_37"
}
node {
  name: "filenames_18"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
      }
    }
  }
}
node {
  name: "compression_type_18"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "buffer_size_18"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 10000
      }
    }
  }
}
node {
  name: "seed_18"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "seed2_18"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "count_18"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "OneShotIterator_18"
  op: "OneShotIterator"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dataset_factory"
    value {
      func {
        name: "_make_dataset_8f84aee2"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "IteratorGetNext_18"
  op: "IteratorGetNext"
  input: "OneShotIterator_18"
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
}
node {
  name: "init_38"
  op: "NoOp"
  input: "^conv1/weight/Assign"
  input: "^conv1/bias/Assign"
  input: "^conv2/weight/Assign"
  input: "^conv2/bias/Assign"
  input: "^dense/weight/Assign"
  input: "^dense/bias/Assign"
  input: "^output/weight/Assign"
  input: "^output/bias/Assign"
  input: "^adam_optimizer/beta1_power/Assign"
  input: "^adam_optimizer/beta2_power/Assign"
  input: "^conv1/weight/Adam/Assign"
  input: "^conv1/weight/Adam_1/Assign"
  input: "^conv1/bias/Adam/Assign"
  input: "^conv1/bias/Adam_1/Assign"
  input: "^conv2/weight/Adam/Assign"
  input: "^conv2/weight/Adam_1/Assign"
  input: "^conv2/bias/Adam/Assign"
  input: "^conv2/bias/Adam_1/Assign"
  input: "^dense/weight/Adam/Assign"
  input: "^dense/weight/Adam_1/Assign"
  input: "^dense/bias/Adam/Assign"
  input: "^dense/bias/Adam_1/Assign"
  input: "^output/weight/Adam/Assign"
  input: "^output/weight/Adam_1/Assign"
  input: "^output/bias/Adam/Assign"
  input: "^output/bias/Adam_1/Assign"
}
node {
  name: "init_39"
  op: "NoOp"
}
node {
  name: "group_deps_19"
  op: "NoOp"
  input: "^init_38"
  input: "^init_39"
}
node {
  name: "filenames_19"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
      }
    }
  }
}
node {
  name: "compression_type_19"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "buffer_size_19"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 10000
      }
    }
  }
}
node {
  name: "seed_19"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "seed2_19"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "count_19"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "OneShotIterator_19"
  op: "OneShotIterator"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dataset_factory"
    value {
      func {
        name: "_make_dataset_9e30cc42"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "IteratorGetNext_19"
  op: "IteratorGetNext"
  input: "OneShotIterator_19"
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
}
node {
  name: "init_40"
  op: "NoOp"
  input: "^conv1/weight/Assign"
  input: "^conv1/bias/Assign"
  input: "^conv2/weight/Assign"
  input: "^conv2/bias/Assign"
  input: "^dense/weight/Assign"
  input: "^dense/bias/Assign"
  input: "^output/weight/Assign"
  input: "^output/bias/Assign"
  input: "^adam_optimizer/beta1_power/Assign"
  input: "^adam_optimizer/beta2_power/Assign"
  input: "^conv1/weight/Adam/Assign"
  input: "^conv1/weight/Adam_1/Assign"
  input: "^conv1/bias/Adam/Assign"
  input: "^conv1/bias/Adam_1/Assign"
  input: "^conv2/weight/Adam/Assign"
  input: "^conv2/weight/Adam_1/Assign"
  input: "^conv2/bias/Adam/Assign"
  input: "^conv2/bias/Adam_1/Assign"
  input: "^dense/weight/Adam/Assign"
  input: "^dense/weight/Adam_1/Assign"
  input: "^dense/bias/Adam/Assign"
  input: "^dense/bias/Adam_1/Assign"
  input: "^output/weight/Adam/Assign"
  input: "^output/weight/Adam_1/Assign"
  input: "^output/bias/Adam/Assign"
  input: "^output/bias/Adam_1/Assign"
}
node {
  name: "init_41"
  op: "NoOp"
}
node {
  name: "group_deps_20"
  op: "NoOp"
  input: "^init_40"
  input: "^init_41"
}
node {
  name: "filenames_20"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
      }
    }
  }
}
node {
  name: "compression_type_20"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "buffer_size_20"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 10000
      }
    }
  }
}
node {
  name: "seed_20"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "seed2_20"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "count_20"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "OneShotIterator_20"
  op: "OneShotIterator"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dataset_factory"
    value {
      func {
        name: "_make_dataset_08ab466c"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "IteratorGetNext_20"
  op: "IteratorGetNext"
  input: "OneShotIterator_20"
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
}
node {
  name: "init_42"
  op: "NoOp"
  input: "^conv1/weight/Assign"
  input: "^conv1/bias/Assign"
  input: "^conv2/weight/Assign"
  input: "^conv2/bias/Assign"
  input: "^dense/weight/Assign"
  input: "^dense/bias/Assign"
  input: "^output/weight/Assign"
  input: "^output/bias/Assign"
  input: "^adam_optimizer/beta1_power/Assign"
  input: "^adam_optimizer/beta2_power/Assign"
  input: "^conv1/weight/Adam/Assign"
  input: "^conv1/weight/Adam_1/Assign"
  input: "^conv1/bias/Adam/Assign"
  input: "^conv1/bias/Adam_1/Assign"
  input: "^conv2/weight/Adam/Assign"
  input: "^conv2/weight/Adam_1/Assign"
  input: "^conv2/bias/Adam/Assign"
  input: "^conv2/bias/Adam_1/Assign"
  input: "^dense/weight/Adam/Assign"
  input: "^dense/weight/Adam_1/Assign"
  input: "^dense/bias/Adam/Assign"
  input: "^dense/bias/Adam_1/Assign"
  input: "^output/weight/Adam/Assign"
  input: "^output/weight/Adam_1/Assign"
  input: "^output/bias/Adam/Assign"
  input: "^output/bias/Adam_1/Assign"
}
node {
  name: "init_43"
  op: "NoOp"
}
node {
  name: "group_deps_21"
  op: "NoOp"
  input: "^init_42"
  input: "^init_43"
}
node {
  name: "filenames_21"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
      }
    }
  }
}
node {
  name: "compression_type_21"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "buffer_size_21"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 10000
      }
    }
  }
}
node {
  name: "seed_21"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "seed2_21"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "count_21"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "OneShotIterator_21"
  op: "OneShotIterator"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dataset_factory"
    value {
      func {
        name: "_make_dataset_a7dab47c"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "IteratorGetNext_21"
  op: "IteratorGetNext"
  input: "OneShotIterator_21"
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
}
node {
  name: "init_44"
  op: "NoOp"
  input: "^conv1/weight/Assign"
  input: "^conv1/bias/Assign"
  input: "^conv2/weight/Assign"
  input: "^conv2/bias/Assign"
  input: "^dense/weight/Assign"
  input: "^dense/bias/Assign"
  input: "^output/weight/Assign"
  input: "^output/bias/Assign"
  input: "^adam_optimizer/beta1_power/Assign"
  input: "^adam_optimizer/beta2_power/Assign"
  input: "^conv1/weight/Adam/Assign"
  input: "^conv1/weight/Adam_1/Assign"
  input: "^conv1/bias/Adam/Assign"
  input: "^conv1/bias/Adam_1/Assign"
  input: "^conv2/weight/Adam/Assign"
  input: "^conv2/weight/Adam_1/Assign"
  input: "^conv2/bias/Adam/Assign"
  input: "^conv2/bias/Adam_1/Assign"
  input: "^dense/weight/Adam/Assign"
  input: "^dense/weight/Adam_1/Assign"
  input: "^dense/bias/Adam/Assign"
  input: "^dense/bias/Adam_1/Assign"
  input: "^output/weight/Adam/Assign"
  input: "^output/weight/Adam_1/Assign"
  input: "^output/bias/Adam/Assign"
  input: "^output/bias/Adam_1/Assign"
}
node {
  name: "init_45"
  op: "NoOp"
}
node {
  name: "group_deps_22"
  op: "NoOp"
  input: "^init_44"
  input: "^init_45"
}
node {
  name: "filenames_22"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
      }
    }
  }
}
node {
  name: "compression_type_22"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "buffer_size_22"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 10000
      }
    }
  }
}
node {
  name: "seed_22"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "seed2_22"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "count_22"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "OneShotIterator_22"
  op: "OneShotIterator"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dataset_factory"
    value {
      func {
        name: "_make_dataset_bbd58a07"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "IteratorGetNext_22"
  op: "IteratorGetNext"
  input: "OneShotIterator_22"
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
}
node {
  name: "init_46"
  op: "NoOp"
  input: "^conv1/weight/Assign"
  input: "^conv1/bias/Assign"
  input: "^conv2/weight/Assign"
  input: "^conv2/bias/Assign"
  input: "^dense/weight/Assign"
  input: "^dense/bias/Assign"
  input: "^output/weight/Assign"
  input: "^output/bias/Assign"
  input: "^adam_optimizer/beta1_power/Assign"
  input: "^adam_optimizer/beta2_power/Assign"
  input: "^conv1/weight/Adam/Assign"
  input: "^conv1/weight/Adam_1/Assign"
  input: "^conv1/bias/Adam/Assign"
  input: "^conv1/bias/Adam_1/Assign"
  input: "^conv2/weight/Adam/Assign"
  input: "^conv2/weight/Adam_1/Assign"
  input: "^conv2/bias/Adam/Assign"
  input: "^conv2/bias/Adam_1/Assign"
  input: "^dense/weight/Adam/Assign"
  input: "^dense/weight/Adam_1/Assign"
  input: "^dense/bias/Adam/Assign"
  input: "^dense/bias/Adam_1/Assign"
  input: "^output/weight/Adam/Assign"
  input: "^output/weight/Adam_1/Assign"
  input: "^output/bias/Adam/Assign"
  input: "^output/bias/Adam_1/Assign"
}
node {
  name: "init_47"
  op: "NoOp"
}
node {
  name: "group_deps_23"
  op: "NoOp"
  input: "^init_46"
  input: "^init_47"
}
node {
  name: "filenames_23"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
      }
    }
  }
}
node {
  name: "compression_type_23"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "buffer_size_23"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 10000
      }
    }
  }
}
node {
  name: "seed_23"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "seed2_23"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "count_23"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "OneShotIterator_23"
  op: "OneShotIterator"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dataset_factory"
    value {
      func {
        name: "_make_dataset_a0e2d541"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "IteratorGetNext_23"
  op: "IteratorGetNext"
  input: "OneShotIterator_23"
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
}
node {
  name: "init_48"
  op: "NoOp"
  input: "^conv1/weight/Assign"
  input: "^conv1/bias/Assign"
  input: "^conv2/weight/Assign"
  input: "^conv2/bias/Assign"
  input: "^dense/weight/Assign"
  input: "^dense/bias/Assign"
  input: "^output/weight/Assign"
  input: "^output/bias/Assign"
  input: "^adam_optimizer/beta1_power/Assign"
  input: "^adam_optimizer/beta2_power/Assign"
  input: "^conv1/weight/Adam/Assign"
  input: "^conv1/weight/Adam_1/Assign"
  input: "^conv1/bias/Adam/Assign"
  input: "^conv1/bias/Adam_1/Assign"
  input: "^conv2/weight/Adam/Assign"
  input: "^conv2/weight/Adam_1/Assign"
  input: "^conv2/bias/Adam/Assign"
  input: "^conv2/bias/Adam_1/Assign"
  input: "^dense/weight/Adam/Assign"
  input: "^dense/weight/Adam_1/Assign"
  input: "^dense/bias/Adam/Assign"
  input: "^dense/bias/Adam_1/Assign"
  input: "^output/weight/Adam/Assign"
  input: "^output/weight/Adam_1/Assign"
  input: "^output/bias/Adam/Assign"
  input: "^output/bias/Adam_1/Assign"
}
node {
  name: "init_49"
  op: "NoOp"
}
node {
  name: "group_deps_24"
  op: "NoOp"
  input: "^init_48"
  input: "^init_49"
}
node {
  name: "filenames_24"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
      }
    }
  }
}
node {
  name: "compression_type_24"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "buffer_size_24"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 10000
      }
    }
  }
}
node {
  name: "seed_24"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "seed2_24"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "count_24"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "OneShotIterator_24"
  op: "OneShotIterator"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dataset_factory"
    value {
      func {
        name: "_make_dataset_02f6c029"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "IteratorGetNext_24"
  op: "IteratorGetNext"
  input: "OneShotIterator_24"
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
}
node {
  name: "init_50"
  op: "NoOp"
  input: "^conv1/weight/Assign"
  input: "^conv1/bias/Assign"
  input: "^conv2/weight/Assign"
  input: "^conv2/bias/Assign"
  input: "^dense/weight/Assign"
  input: "^dense/bias/Assign"
  input: "^output/weight/Assign"
  input: "^output/bias/Assign"
  input: "^adam_optimizer/beta1_power/Assign"
  input: "^adam_optimizer/beta2_power/Assign"
  input: "^conv1/weight/Adam/Assign"
  input: "^conv1/weight/Adam_1/Assign"
  input: "^conv1/bias/Adam/Assign"
  input: "^conv1/bias/Adam_1/Assign"
  input: "^conv2/weight/Adam/Assign"
  input: "^conv2/weight/Adam_1/Assign"
  input: "^conv2/bias/Adam/Assign"
  input: "^conv2/bias/Adam_1/Assign"
  input: "^dense/weight/Adam/Assign"
  input: "^dense/weight/Adam_1/Assign"
  input: "^dense/bias/Adam/Assign"
  input: "^dense/bias/Adam_1/Assign"
  input: "^output/weight/Adam/Assign"
  input: "^output/weight/Adam_1/Assign"
  input: "^output/bias/Adam/Assign"
  input: "^output/bias/Adam_1/Assign"
}
node {
  name: "init_51"
  op: "NoOp"
}
node {
  name: "group_deps_25"
  op: "NoOp"
  input: "^init_50"
  input: "^init_51"
}
node {
  name: "filenames_25"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
      }
    }
  }
}
node {
  name: "compression_type_25"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "buffer_size_25"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 10000
      }
    }
  }
}
node {
  name: "seed_25"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "seed2_25"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "count_25"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "OneShotIterator_25"
  op: "OneShotIterator"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dataset_factory"
    value {
      func {
        name: "_make_dataset_be888d2a"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "IteratorGetNext_25"
  op: "IteratorGetNext"
  input: "OneShotIterator_25"
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
}
node {
  name: "init_52"
  op: "NoOp"
  input: "^conv1/weight/Assign"
  input: "^conv1/bias/Assign"
  input: "^conv2/weight/Assign"
  input: "^conv2/bias/Assign"
  input: "^dense/weight/Assign"
  input: "^dense/bias/Assign"
  input: "^output/weight/Assign"
  input: "^output/bias/Assign"
  input: "^adam_optimizer/beta1_power/Assign"
  input: "^adam_optimizer/beta2_power/Assign"
  input: "^conv1/weight/Adam/Assign"
  input: "^conv1/weight/Adam_1/Assign"
  input: "^conv1/bias/Adam/Assign"
  input: "^conv1/bias/Adam_1/Assign"
  input: "^conv2/weight/Adam/Assign"
  input: "^conv2/weight/Adam_1/Assign"
  input: "^conv2/bias/Adam/Assign"
  input: "^conv2/bias/Adam_1/Assign"
  input: "^dense/weight/Adam/Assign"
  input: "^dense/weight/Adam_1/Assign"
  input: "^dense/bias/Adam/Assign"
  input: "^dense/bias/Adam_1/Assign"
  input: "^output/weight/Adam/Assign"
  input: "^output/weight/Adam_1/Assign"
  input: "^output/bias/Adam/Assign"
  input: "^output/bias/Adam_1/Assign"
}
node {
  name: "init_53"
  op: "NoOp"
}
node {
  name: "group_deps_26"
  op: "NoOp"
  input: "^init_52"
  input: "^init_53"
}
node {
  name: "filenames_26"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
      }
    }
  }
}
node {
  name: "compression_type_26"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "buffer_size_26"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 10000
      }
    }
  }
}
node {
  name: "seed_26"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "seed2_26"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "count_26"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "OneShotIterator_26"
  op: "OneShotIterator"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dataset_factory"
    value {
      func {
        name: "_make_dataset_5ad50476"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "IteratorGetNext_26"
  op: "IteratorGetNext"
  input: "OneShotIterator_26"
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
}
node {
  name: "init_54"
  op: "NoOp"
  input: "^conv1/weight/Assign"
  input: "^conv1/bias/Assign"
  input: "^conv2/weight/Assign"
  input: "^conv2/bias/Assign"
  input: "^dense/weight/Assign"
  input: "^dense/bias/Assign"
  input: "^output/weight/Assign"
  input: "^output/bias/Assign"
  input: "^adam_optimizer/beta1_power/Assign"
  input: "^adam_optimizer/beta2_power/Assign"
  input: "^conv1/weight/Adam/Assign"
  input: "^conv1/weight/Adam_1/Assign"
  input: "^conv1/bias/Adam/Assign"
  input: "^conv1/bias/Adam_1/Assign"
  input: "^conv2/weight/Adam/Assign"
  input: "^conv2/weight/Adam_1/Assign"
  input: "^conv2/bias/Adam/Assign"
  input: "^conv2/bias/Adam_1/Assign"
  input: "^dense/weight/Adam/Assign"
  input: "^dense/weight/Adam_1/Assign"
  input: "^dense/bias/Adam/Assign"
  input: "^dense/bias/Adam_1/Assign"
  input: "^output/weight/Adam/Assign"
  input: "^output/weight/Adam_1/Assign"
  input: "^output/bias/Adam/Assign"
  input: "^output/bias/Adam_1/Assign"
}
node {
  name: "init_55"
  op: "NoOp"
}
node {
  name: "group_deps_27"
  op: "NoOp"
  input: "^init_54"
  input: "^init_55"
}
node {
  name: "filenames_27"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
      }
    }
  }
}
node {
  name: "compression_type_27"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "buffer_size_27"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 10000
      }
    }
  }
}
node {
  name: "seed_27"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "seed2_27"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "count_27"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "OneShotIterator_27"
  op: "OneShotIterator"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dataset_factory"
    value {
      func {
        name: "_make_dataset_c48ab57b"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "IteratorGetNext_27"
  op: "IteratorGetNext"
  input: "OneShotIterator_27"
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
}
node {
  name: "init_56"
  op: "NoOp"
  input: "^conv1/weight/Assign"
  input: "^conv1/bias/Assign"
  input: "^conv2/weight/Assign"
  input: "^conv2/bias/Assign"
  input: "^dense/weight/Assign"
  input: "^dense/bias/Assign"
  input: "^output/weight/Assign"
  input: "^output/bias/Assign"
  input: "^adam_optimizer/beta1_power/Assign"
  input: "^adam_optimizer/beta2_power/Assign"
  input: "^conv1/weight/Adam/Assign"
  input: "^conv1/weight/Adam_1/Assign"
  input: "^conv1/bias/Adam/Assign"
  input: "^conv1/bias/Adam_1/Assign"
  input: "^conv2/weight/Adam/Assign"
  input: "^conv2/weight/Adam_1/Assign"
  input: "^conv2/bias/Adam/Assign"
  input: "^conv2/bias/Adam_1/Assign"
  input: "^dense/weight/Adam/Assign"
  input: "^dense/weight/Adam_1/Assign"
  input: "^dense/bias/Adam/Assign"
  input: "^dense/bias/Adam_1/Assign"
  input: "^output/weight/Adam/Assign"
  input: "^output/weight/Adam_1/Assign"
  input: "^output/bias/Adam/Assign"
  input: "^output/bias/Adam_1/Assign"
}
node {
  name: "init_57"
  op: "NoOp"
}
node {
  name: "group_deps_28"
  op: "NoOp"
  input: "^init_56"
  input: "^init_57"
}
node {
  name: "filenames_28"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
      }
    }
  }
}
node {
  name: "compression_type_28"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "buffer_size_28"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 10000
      }
    }
  }
}
node {
  name: "seed_28"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "seed2_28"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "count_28"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "OneShotIterator_28"
  op: "OneShotIterator"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dataset_factory"
    value {
      func {
        name: "_make_dataset_8917fddd"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "IteratorGetNext_28"
  op: "IteratorGetNext"
  input: "OneShotIterator_28"
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
}
node {
  name: "init_58"
  op: "NoOp"
  input: "^conv1/weight/Assign"
  input: "^conv1/bias/Assign"
  input: "^conv2/weight/Assign"
  input: "^conv2/bias/Assign"
  input: "^dense/weight/Assign"
  input: "^dense/bias/Assign"
  input: "^output/weight/Assign"
  input: "^output/bias/Assign"
  input: "^adam_optimizer/beta1_power/Assign"
  input: "^adam_optimizer/beta2_power/Assign"
  input: "^conv1/weight/Adam/Assign"
  input: "^conv1/weight/Adam_1/Assign"
  input: "^conv1/bias/Adam/Assign"
  input: "^conv1/bias/Adam_1/Assign"
  input: "^conv2/weight/Adam/Assign"
  input: "^conv2/weight/Adam_1/Assign"
  input: "^conv2/bias/Adam/Assign"
  input: "^conv2/bias/Adam_1/Assign"
  input: "^dense/weight/Adam/Assign"
  input: "^dense/weight/Adam_1/Assign"
  input: "^dense/bias/Adam/Assign"
  input: "^dense/bias/Adam_1/Assign"
  input: "^output/weight/Adam/Assign"
  input: "^output/weight/Adam_1/Assign"
  input: "^output/bias/Adam/Assign"
  input: "^output/bias/Adam_1/Assign"
}
node {
  name: "init_59"
  op: "NoOp"
}
node {
  name: "group_deps_29"
  op: "NoOp"
  input: "^init_58"
  input: "^init_59"
}
node {
  name: "filenames_29"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
      }
    }
  }
}
node {
  name: "compression_type_29"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "buffer_size_29"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 10000
      }
    }
  }
}
node {
  name: "seed_29"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "seed2_29"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "count_29"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "OneShotIterator_29"
  op: "OneShotIterator"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dataset_factory"
    value {
      func {
        name: "_make_dataset_6afdf9ca"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "IteratorGetNext_29"
  op: "IteratorGetNext"
  input: "OneShotIterator_29"
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
}
node {
  name: "init_60"
  op: "NoOp"
  input: "^conv1/weight/Assign"
  input: "^conv1/bias/Assign"
  input: "^conv2/weight/Assign"
  input: "^conv2/bias/Assign"
  input: "^dense/weight/Assign"
  input: "^dense/bias/Assign"
  input: "^output/weight/Assign"
  input: "^output/bias/Assign"
  input: "^adam_optimizer/beta1_power/Assign"
  input: "^adam_optimizer/beta2_power/Assign"
  input: "^conv1/weight/Adam/Assign"
  input: "^conv1/weight/Adam_1/Assign"
  input: "^conv1/bias/Adam/Assign"
  input: "^conv1/bias/Adam_1/Assign"
  input: "^conv2/weight/Adam/Assign"
  input: "^conv2/weight/Adam_1/Assign"
  input: "^conv2/bias/Adam/Assign"
  input: "^conv2/bias/Adam_1/Assign"
  input: "^dense/weight/Adam/Assign"
  input: "^dense/weight/Adam_1/Assign"
  input: "^dense/bias/Adam/Assign"
  input: "^dense/bias/Adam_1/Assign"
  input: "^output/weight/Adam/Assign"
  input: "^output/weight/Adam_1/Assign"
  input: "^output/bias/Adam/Assign"
  input: "^output/bias/Adam_1/Assign"
}
node {
  name: "init_61"
  op: "NoOp"
}
node {
  name: "group_deps_30"
  op: "NoOp"
  input: "^init_60"
  input: "^init_61"
}
node {
  name: "filenames_30"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
      }
    }
  }
}
node {
  name: "compression_type_30"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "buffer_size_30"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 10000
      }
    }
  }
}
node {
  name: "seed_30"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "seed2_30"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "count_30"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "OneShotIterator_30"
  op: "OneShotIterator"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dataset_factory"
    value {
      func {
        name: "_make_dataset_3b8774cf"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "IteratorGetNext_30"
  op: "IteratorGetNext"
  input: "OneShotIterator_30"
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
}
node {
  name: "init_62"
  op: "NoOp"
  input: "^conv1/weight/Assign"
  input: "^conv1/bias/Assign"
  input: "^conv2/weight/Assign"
  input: "^conv2/bias/Assign"
  input: "^dense/weight/Assign"
  input: "^dense/bias/Assign"
  input: "^output/weight/Assign"
  input: "^output/bias/Assign"
  input: "^adam_optimizer/beta1_power/Assign"
  input: "^adam_optimizer/beta2_power/Assign"
  input: "^conv1/weight/Adam/Assign"
  input: "^conv1/weight/Adam_1/Assign"
  input: "^conv1/bias/Adam/Assign"
  input: "^conv1/bias/Adam_1/Assign"
  input: "^conv2/weight/Adam/Assign"
  input: "^conv2/weight/Adam_1/Assign"
  input: "^conv2/bias/Adam/Assign"
  input: "^conv2/bias/Adam_1/Assign"
  input: "^dense/weight/Adam/Assign"
  input: "^dense/weight/Adam_1/Assign"
  input: "^dense/bias/Adam/Assign"
  input: "^dense/bias/Adam_1/Assign"
  input: "^output/weight/Adam/Assign"
  input: "^output/weight/Adam_1/Assign"
  input: "^output/bias/Adam/Assign"
  input: "^output/bias/Adam_1/Assign"
}
node {
  name: "init_63"
  op: "NoOp"
}
node {
  name: "group_deps_31"
  op: "NoOp"
  input: "^init_62"
  input: "^init_63"
}
node {
  name: "filenames_31"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
      }
    }
  }
}
node {
  name: "compression_type_31"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "buffer_size_31"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 10000
      }
    }
  }
}
node {
  name: "seed_31"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "seed2_31"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "count_31"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "OneShotIterator_31"
  op: "OneShotIterator"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dataset_factory"
    value {
      func {
        name: "_make_dataset_76800637"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "IteratorGetNext_31"
  op: "IteratorGetNext"
  input: "OneShotIterator_31"
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
}
node {
  name: "init_64"
  op: "NoOp"
  input: "^conv1/weight/Assign"
  input: "^conv1/bias/Assign"
  input: "^conv2/weight/Assign"
  input: "^conv2/bias/Assign"
  input: "^dense/weight/Assign"
  input: "^dense/bias/Assign"
  input: "^output/weight/Assign"
  input: "^output/bias/Assign"
  input: "^adam_optimizer/beta1_power/Assign"
  input: "^adam_optimizer/beta2_power/Assign"
  input: "^conv1/weight/Adam/Assign"
  input: "^conv1/weight/Adam_1/Assign"
  input: "^conv1/bias/Adam/Assign"
  input: "^conv1/bias/Adam_1/Assign"
  input: "^conv2/weight/Adam/Assign"
  input: "^conv2/weight/Adam_1/Assign"
  input: "^conv2/bias/Adam/Assign"
  input: "^conv2/bias/Adam_1/Assign"
  input: "^dense/weight/Adam/Assign"
  input: "^dense/weight/Adam_1/Assign"
  input: "^dense/bias/Adam/Assign"
  input: "^dense/bias/Adam_1/Assign"
  input: "^output/weight/Adam/Assign"
  input: "^output/weight/Adam_1/Assign"
  input: "^output/bias/Adam/Assign"
  input: "^output/bias/Adam_1/Assign"
}
node {
  name: "init_65"
  op: "NoOp"
}
node {
  name: "group_deps_32"
  op: "NoOp"
  input: "^init_64"
  input: "^init_65"
}
node {
  name: "filenames_32"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
      }
    }
  }
}
node {
  name: "compression_type_32"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "buffer_size_32"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 10000
      }
    }
  }
}
node {
  name: "seed_32"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "seed2_32"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "count_32"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "OneShotIterator_32"
  op: "OneShotIterator"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dataset_factory"
    value {
      func {
        name: "_make_dataset_0e7e60c6"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "IteratorGetNext_32"
  op: "IteratorGetNext"
  input: "OneShotIterator_32"
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
}
node {
  name: "init_66"
  op: "NoOp"
  input: "^conv1/weight/Assign"
  input: "^conv1/bias/Assign"
  input: "^conv2/weight/Assign"
  input: "^conv2/bias/Assign"
  input: "^dense/weight/Assign"
  input: "^dense/bias/Assign"
  input: "^output/weight/Assign"
  input: "^output/bias/Assign"
  input: "^adam_optimizer/beta1_power/Assign"
  input: "^adam_optimizer/beta2_power/Assign"
  input: "^conv1/weight/Adam/Assign"
  input: "^conv1/weight/Adam_1/Assign"
  input: "^conv1/bias/Adam/Assign"
  input: "^conv1/bias/Adam_1/Assign"
  input: "^conv2/weight/Adam/Assign"
  input: "^conv2/weight/Adam_1/Assign"
  input: "^conv2/bias/Adam/Assign"
  input: "^conv2/bias/Adam_1/Assign"
  input: "^dense/weight/Adam/Assign"
  input: "^dense/weight/Adam_1/Assign"
  input: "^dense/bias/Adam/Assign"
  input: "^dense/bias/Adam_1/Assign"
  input: "^output/weight/Adam/Assign"
  input: "^output/weight/Adam_1/Assign"
  input: "^output/bias/Adam/Assign"
  input: "^output/bias/Adam_1/Assign"
}
node {
  name: "init_67"
  op: "NoOp"
}
node {
  name: "group_deps_33"
  op: "NoOp"
  input: "^init_66"
  input: "^init_67"
}
node {
  name: "filenames_33"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
      }
    }
  }
}
node {
  name: "compression_type_33"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "buffer_size_33"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 10000
      }
    }
  }
}
node {
  name: "seed_33"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "seed2_33"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "count_33"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "OneShotIterator_33"
  op: "OneShotIterator"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dataset_factory"
    value {
      func {
        name: "_make_dataset_5b725d9b"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "IteratorGetNext_33"
  op: "IteratorGetNext"
  input: "OneShotIterator_33"
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
}
node {
  name: "init_68"
  op: "NoOp"
  input: "^conv1/weight/Assign"
  input: "^conv1/bias/Assign"
  input: "^conv2/weight/Assign"
  input: "^conv2/bias/Assign"
  input: "^dense/weight/Assign"
  input: "^dense/bias/Assign"
  input: "^output/weight/Assign"
  input: "^output/bias/Assign"
  input: "^adam_optimizer/beta1_power/Assign"
  input: "^adam_optimizer/beta2_power/Assign"
  input: "^conv1/weight/Adam/Assign"
  input: "^conv1/weight/Adam_1/Assign"
  input: "^conv1/bias/Adam/Assign"
  input: "^conv1/bias/Adam_1/Assign"
  input: "^conv2/weight/Adam/Assign"
  input: "^conv2/weight/Adam_1/Assign"
  input: "^conv2/bias/Adam/Assign"
  input: "^conv2/bias/Adam_1/Assign"
  input: "^dense/weight/Adam/Assign"
  input: "^dense/weight/Adam_1/Assign"
  input: "^dense/bias/Adam/Assign"
  input: "^dense/bias/Adam_1/Assign"
  input: "^output/weight/Adam/Assign"
  input: "^output/weight/Adam_1/Assign"
  input: "^output/bias/Adam/Assign"
  input: "^output/bias/Adam_1/Assign"
}
node {
  name: "init_69"
  op: "NoOp"
}
node {
  name: "group_deps_34"
  op: "NoOp"
  input: "^init_68"
  input: "^init_69"
}
node {
  name: "filenames_34"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
      }
    }
  }
}
node {
  name: "compression_type_34"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "buffer_size_34"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 10000
      }
    }
  }
}
node {
  name: "seed_34"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "seed2_34"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "count_34"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "OneShotIterator_34"
  op: "OneShotIterator"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dataset_factory"
    value {
      func {
        name: "_make_dataset_d163ac24"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "IteratorGetNext_34"
  op: "IteratorGetNext"
  input: "OneShotIterator_34"
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
}
node {
  name: "init_70"
  op: "NoOp"
  input: "^conv1/weight/Assign"
  input: "^conv1/bias/Assign"
  input: "^conv2/weight/Assign"
  input: "^conv2/bias/Assign"
  input: "^dense/weight/Assign"
  input: "^dense/bias/Assign"
  input: "^output/weight/Assign"
  input: "^output/bias/Assign"
  input: "^adam_optimizer/beta1_power/Assign"
  input: "^adam_optimizer/beta2_power/Assign"
  input: "^conv1/weight/Adam/Assign"
  input: "^conv1/weight/Adam_1/Assign"
  input: "^conv1/bias/Adam/Assign"
  input: "^conv1/bias/Adam_1/Assign"
  input: "^conv2/weight/Adam/Assign"
  input: "^conv2/weight/Adam_1/Assign"
  input: "^conv2/bias/Adam/Assign"
  input: "^conv2/bias/Adam_1/Assign"
  input: "^dense/weight/Adam/Assign"
  input: "^dense/weight/Adam_1/Assign"
  input: "^dense/bias/Adam/Assign"
  input: "^dense/bias/Adam_1/Assign"
  input: "^output/weight/Adam/Assign"
  input: "^output/weight/Adam_1/Assign"
  input: "^output/bias/Adam/Assign"
  input: "^output/bias/Adam_1/Assign"
}
node {
  name: "init_71"
  op: "NoOp"
}
node {
  name: "group_deps_35"
  op: "NoOp"
  input: "^init_70"
  input: "^init_71"
}
node {
  name: "filenames_35"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
      }
    }
  }
}
node {
  name: "compression_type_35"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "buffer_size_35"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 10000
      }
    }
  }
}
node {
  name: "seed_35"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "seed2_35"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "count_35"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "OneShotIterator_35"
  op: "OneShotIterator"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dataset_factory"
    value {
      func {
        name: "_make_dataset_3d6ea077"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "IteratorGetNext_35"
  op: "IteratorGetNext"
  input: "OneShotIterator_35"
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
}
node {
  name: "init_72"
  op: "NoOp"
  input: "^conv1/weight/Assign"
  input: "^conv1/bias/Assign"
  input: "^conv2/weight/Assign"
  input: "^conv2/bias/Assign"
  input: "^dense/weight/Assign"
  input: "^dense/bias/Assign"
  input: "^output/weight/Assign"
  input: "^output/bias/Assign"
  input: "^adam_optimizer/beta1_power/Assign"
  input: "^adam_optimizer/beta2_power/Assign"
  input: "^conv1/weight/Adam/Assign"
  input: "^conv1/weight/Adam_1/Assign"
  input: "^conv1/bias/Adam/Assign"
  input: "^conv1/bias/Adam_1/Assign"
  input: "^conv2/weight/Adam/Assign"
  input: "^conv2/weight/Adam_1/Assign"
  input: "^conv2/bias/Adam/Assign"
  input: "^conv2/bias/Adam_1/Assign"
  input: "^dense/weight/Adam/Assign"
  input: "^dense/weight/Adam_1/Assign"
  input: "^dense/bias/Adam/Assign"
  input: "^dense/bias/Adam_1/Assign"
  input: "^output/weight/Adam/Assign"
  input: "^output/weight/Adam_1/Assign"
  input: "^output/bias/Adam/Assign"
  input: "^output/bias/Adam_1/Assign"
}
node {
  name: "init_73"
  op: "NoOp"
}
node {
  name: "group_deps_36"
  op: "NoOp"
  input: "^init_72"
  input: "^init_73"
}
node {
  name: "filenames_36"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
      }
    }
  }
}
node {
  name: "compression_type_36"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "buffer_size_36"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 10000
      }
    }
  }
}
node {
  name: "seed_36"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "seed2_36"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "count_36"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "OneShotIterator_36"
  op: "OneShotIterator"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dataset_factory"
    value {
      func {
        name: "_make_dataset_bd7c878b"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "IteratorGetNext_36"
  op: "IteratorGetNext"
  input: "OneShotIterator_36"
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
}
node {
  name: "init_74"
  op: "NoOp"
  input: "^conv1/weight/Assign"
  input: "^conv1/bias/Assign"
  input: "^conv2/weight/Assign"
  input: "^conv2/bias/Assign"
  input: "^dense/weight/Assign"
  input: "^dense/bias/Assign"
  input: "^output/weight/Assign"
  input: "^output/bias/Assign"
  input: "^adam_optimizer/beta1_power/Assign"
  input: "^adam_optimizer/beta2_power/Assign"
  input: "^conv1/weight/Adam/Assign"
  input: "^conv1/weight/Adam_1/Assign"
  input: "^conv1/bias/Adam/Assign"
  input: "^conv1/bias/Adam_1/Assign"
  input: "^conv2/weight/Adam/Assign"
  input: "^conv2/weight/Adam_1/Assign"
  input: "^conv2/bias/Adam/Assign"
  input: "^conv2/bias/Adam_1/Assign"
  input: "^dense/weight/Adam/Assign"
  input: "^dense/weight/Adam_1/Assign"
  input: "^dense/bias/Adam/Assign"
  input: "^dense/bias/Adam_1/Assign"
  input: "^output/weight/Adam/Assign"
  input: "^output/weight/Adam_1/Assign"
  input: "^output/bias/Adam/Assign"
  input: "^output/bias/Adam_1/Assign"
}
node {
  name: "init_75"
  op: "NoOp"
}
node {
  name: "group_deps_37"
  op: "NoOp"
  input: "^init_74"
  input: "^init_75"
}
node {
  name: "filenames_37"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
      }
    }
  }
}
node {
  name: "compression_type_37"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "buffer_size_37"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 10000
      }
    }
  }
}
node {
  name: "seed_37"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "seed2_37"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "count_37"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "OneShotIterator_37"
  op: "OneShotIterator"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dataset_factory"
    value {
      func {
        name: "_make_dataset_dc7837c5"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "IteratorGetNext_37"
  op: "IteratorGetNext"
  input: "OneShotIterator_37"
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
}
node {
  name: "init_76"
  op: "NoOp"
  input: "^conv1/weight/Assign"
  input: "^conv1/bias/Assign"
  input: "^conv2/weight/Assign"
  input: "^conv2/bias/Assign"
  input: "^dense/weight/Assign"
  input: "^dense/bias/Assign"
  input: "^output/weight/Assign"
  input: "^output/bias/Assign"
  input: "^adam_optimizer/beta1_power/Assign"
  input: "^adam_optimizer/beta2_power/Assign"
  input: "^conv1/weight/Adam/Assign"
  input: "^conv1/weight/Adam_1/Assign"
  input: "^conv1/bias/Adam/Assign"
  input: "^conv1/bias/Adam_1/Assign"
  input: "^conv2/weight/Adam/Assign"
  input: "^conv2/weight/Adam_1/Assign"
  input: "^conv2/bias/Adam/Assign"
  input: "^conv2/bias/Adam_1/Assign"
  input: "^dense/weight/Adam/Assign"
  input: "^dense/weight/Adam_1/Assign"
  input: "^dense/bias/Adam/Assign"
  input: "^dense/bias/Adam_1/Assign"
  input: "^output/weight/Adam/Assign"
  input: "^output/weight/Adam_1/Assign"
  input: "^output/bias/Adam/Assign"
  input: "^output/bias/Adam_1/Assign"
}
node {
  name: "init_77"
  op: "NoOp"
}
node {
  name: "group_deps_38"
  op: "NoOp"
  input: "^init_76"
  input: "^init_77"
}
node {
  name: "filenames_38"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
      }
    }
  }
}
node {
  name: "compression_type_38"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "buffer_size_38"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 10000
      }
    }
  }
}
node {
  name: "seed_38"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "seed2_38"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "count_38"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "OneShotIterator_38"
  op: "OneShotIterator"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dataset_factory"
    value {
      func {
        name: "_make_dataset_968812d7"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "IteratorGetNext_38"
  op: "IteratorGetNext"
  input: "OneShotIterator_38"
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
}
node {
  name: "init_78"
  op: "NoOp"
  input: "^conv1/weight/Assign"
  input: "^conv1/bias/Assign"
  input: "^conv2/weight/Assign"
  input: "^conv2/bias/Assign"
  input: "^dense/weight/Assign"
  input: "^dense/bias/Assign"
  input: "^output/weight/Assign"
  input: "^output/bias/Assign"
  input: "^adam_optimizer/beta1_power/Assign"
  input: "^adam_optimizer/beta2_power/Assign"
  input: "^conv1/weight/Adam/Assign"
  input: "^conv1/weight/Adam_1/Assign"
  input: "^conv1/bias/Adam/Assign"
  input: "^conv1/bias/Adam_1/Assign"
  input: "^conv2/weight/Adam/Assign"
  input: "^conv2/weight/Adam_1/Assign"
  input: "^conv2/bias/Adam/Assign"
  input: "^conv2/bias/Adam_1/Assign"
  input: "^dense/weight/Adam/Assign"
  input: "^dense/weight/Adam_1/Assign"
  input: "^dense/bias/Adam/Assign"
  input: "^dense/bias/Adam_1/Assign"
  input: "^output/weight/Adam/Assign"
  input: "^output/weight/Adam_1/Assign"
  input: "^output/bias/Adam/Assign"
  input: "^output/bias/Adam_1/Assign"
}
node {
  name: "init_79"
  op: "NoOp"
}
node {
  name: "group_deps_39"
  op: "NoOp"
  input: "^init_78"
  input: "^init_79"
}
node {
  name: "filenames_39"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
      }
    }
  }
}
node {
  name: "compression_type_39"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "buffer_size_39"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 10000
      }
    }
  }
}
node {
  name: "seed_39"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "seed2_39"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "count_39"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "OneShotIterator_39"
  op: "OneShotIterator"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dataset_factory"
    value {
      func {
        name: "_make_dataset_96c799d7"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "IteratorGetNext_39"
  op: "IteratorGetNext"
  input: "OneShotIterator_39"
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
}
node {
  name: "init_80"
  op: "NoOp"
  input: "^conv1/weight/Assign"
  input: "^conv1/bias/Assign"
  input: "^conv2/weight/Assign"
  input: "^conv2/bias/Assign"
  input: "^dense/weight/Assign"
  input: "^dense/bias/Assign"
  input: "^output/weight/Assign"
  input: "^output/bias/Assign"
  input: "^adam_optimizer/beta1_power/Assign"
  input: "^adam_optimizer/beta2_power/Assign"
  input: "^conv1/weight/Adam/Assign"
  input: "^conv1/weight/Adam_1/Assign"
  input: "^conv1/bias/Adam/Assign"
  input: "^conv1/bias/Adam_1/Assign"
  input: "^conv2/weight/Adam/Assign"
  input: "^conv2/weight/Adam_1/Assign"
  input: "^conv2/bias/Adam/Assign"
  input: "^conv2/bias/Adam_1/Assign"
  input: "^dense/weight/Adam/Assign"
  input: "^dense/weight/Adam_1/Assign"
  input: "^dense/bias/Adam/Assign"
  input: "^dense/bias/Adam_1/Assign"
  input: "^output/weight/Adam/Assign"
  input: "^output/weight/Adam_1/Assign"
  input: "^output/bias/Adam/Assign"
  input: "^output/bias/Adam_1/Assign"
}
node {
  name: "init_81"
  op: "NoOp"
}
node {
  name: "group_deps_40"
  op: "NoOp"
  input: "^init_80"
  input: "^init_81"
}
node {
  name: "filenames_40"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
      }
    }
  }
}
node {
  name: "compression_type_40"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "buffer_size_40"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 10000
      }
    }
  }
}
node {
  name: "seed_40"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "seed2_40"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "count_40"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "OneShotIterator_40"
  op: "OneShotIterator"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dataset_factory"
    value {
      func {
        name: "_make_dataset_fe0a0ebb"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "IteratorGetNext_40"
  op: "IteratorGetNext"
  input: "OneShotIterator_40"
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
}
node {
  name: "init_82"
  op: "NoOp"
  input: "^conv1/weight/Assign"
  input: "^conv1/bias/Assign"
  input: "^conv2/weight/Assign"
  input: "^conv2/bias/Assign"
  input: "^dense/weight/Assign"
  input: "^dense/bias/Assign"
  input: "^output/weight/Assign"
  input: "^output/bias/Assign"
  input: "^adam_optimizer/beta1_power/Assign"
  input: "^adam_optimizer/beta2_power/Assign"
  input: "^conv1/weight/Adam/Assign"
  input: "^conv1/weight/Adam_1/Assign"
  input: "^conv1/bias/Adam/Assign"
  input: "^conv1/bias/Adam_1/Assign"
  input: "^conv2/weight/Adam/Assign"
  input: "^conv2/weight/Adam_1/Assign"
  input: "^conv2/bias/Adam/Assign"
  input: "^conv2/bias/Adam_1/Assign"
  input: "^dense/weight/Adam/Assign"
  input: "^dense/weight/Adam_1/Assign"
  input: "^dense/bias/Adam/Assign"
  input: "^dense/bias/Adam_1/Assign"
  input: "^output/weight/Adam/Assign"
  input: "^output/weight/Adam_1/Assign"
  input: "^output/bias/Adam/Assign"
  input: "^output/bias/Adam_1/Assign"
}
node {
  name: "init_83"
  op: "NoOp"
}
node {
  name: "group_deps_41"
  op: "NoOp"
  input: "^init_82"
  input: "^init_83"
}
node {
  name: "filenames_41"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
      }
    }
  }
}
node {
  name: "compression_type_41"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "buffer_size_41"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 10000
      }
    }
  }
}
node {
  name: "seed_41"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "seed2_41"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "count_41"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "OneShotIterator_41"
  op: "OneShotIterator"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dataset_factory"
    value {
      func {
        name: "_make_dataset_6466fdba"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "IteratorGetNext_41"
  op: "IteratorGetNext"
  input: "OneShotIterator_41"
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
}
node {
  name: "init_84"
  op: "NoOp"
  input: "^conv1/weight/Assign"
  input: "^conv1/bias/Assign"
  input: "^conv2/weight/Assign"
  input: "^conv2/bias/Assign"
  input: "^dense/weight/Assign"
  input: "^dense/bias/Assign"
  input: "^output/weight/Assign"
  input: "^output/bias/Assign"
  input: "^adam_optimizer/beta1_power/Assign"
  input: "^adam_optimizer/beta2_power/Assign"
  input: "^conv1/weight/Adam/Assign"
  input: "^conv1/weight/Adam_1/Assign"
  input: "^conv1/bias/Adam/Assign"
  input: "^conv1/bias/Adam_1/Assign"
  input: "^conv2/weight/Adam/Assign"
  input: "^conv2/weight/Adam_1/Assign"
  input: "^conv2/bias/Adam/Assign"
  input: "^conv2/bias/Adam_1/Assign"
  input: "^dense/weight/Adam/Assign"
  input: "^dense/weight/Adam_1/Assign"
  input: "^dense/bias/Adam/Assign"
  input: "^dense/bias/Adam_1/Assign"
  input: "^output/weight/Adam/Assign"
  input: "^output/weight/Adam_1/Assign"
  input: "^output/bias/Adam/Assign"
  input: "^output/bias/Adam_1/Assign"
}
node {
  name: "init_85"
  op: "NoOp"
}
node {
  name: "group_deps_42"
  op: "NoOp"
  input: "^init_84"
  input: "^init_85"
}
node {
  name: "filenames_42"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
      }
    }
  }
}
node {
  name: "compression_type_42"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "buffer_size_42"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 10000
      }
    }
  }
}
node {
  name: "seed_42"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "seed2_42"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "count_42"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "OneShotIterator_42"
  op: "OneShotIterator"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dataset_factory"
    value {
      func {
        name: "_make_dataset_464637a7"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "IteratorGetNext_42"
  op: "IteratorGetNext"
  input: "OneShotIterator_42"
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
}
node {
  name: "init_86"
  op: "NoOp"
  input: "^conv1/weight/Assign"
  input: "^conv1/bias/Assign"
  input: "^conv2/weight/Assign"
  input: "^conv2/bias/Assign"
  input: "^dense/weight/Assign"
  input: "^dense/bias/Assign"
  input: "^output/weight/Assign"
  input: "^output/bias/Assign"
  input: "^adam_optimizer/beta1_power/Assign"
  input: "^adam_optimizer/beta2_power/Assign"
  input: "^conv1/weight/Adam/Assign"
  input: "^conv1/weight/Adam_1/Assign"
  input: "^conv1/bias/Adam/Assign"
  input: "^conv1/bias/Adam_1/Assign"
  input: "^conv2/weight/Adam/Assign"
  input: "^conv2/weight/Adam_1/Assign"
  input: "^conv2/bias/Adam/Assign"
  input: "^conv2/bias/Adam_1/Assign"
  input: "^dense/weight/Adam/Assign"
  input: "^dense/weight/Adam_1/Assign"
  input: "^dense/bias/Adam/Assign"
  input: "^dense/bias/Adam_1/Assign"
  input: "^output/weight/Adam/Assign"
  input: "^output/weight/Adam_1/Assign"
  input: "^output/bias/Adam/Assign"
  input: "^output/bias/Adam_1/Assign"
}
node {
  name: "init_87"
  op: "NoOp"
}
node {
  name: "group_deps_43"
  op: "NoOp"
  input: "^init_86"
  input: "^init_87"
}
node {
  name: "filenames_43"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
      }
    }
  }
}
node {
  name: "compression_type_43"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "buffer_size_43"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 10000
      }
    }
  }
}
node {
  name: "seed_43"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "seed2_43"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "count_43"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "OneShotIterator_43"
  op: "OneShotIterator"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dataset_factory"
    value {
      func {
        name: "_make_dataset_bac733e5"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "IteratorGetNext_43"
  op: "IteratorGetNext"
  input: "OneShotIterator_43"
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
}
node {
  name: "init_88"
  op: "NoOp"
  input: "^conv1/weight/Assign"
  input: "^conv1/bias/Assign"
  input: "^conv2/weight/Assign"
  input: "^conv2/bias/Assign"
  input: "^dense/weight/Assign"
  input: "^dense/bias/Assign"
  input: "^output/weight/Assign"
  input: "^output/bias/Assign"
  input: "^adam_optimizer/beta1_power/Assign"
  input: "^adam_optimizer/beta2_power/Assign"
  input: "^conv1/weight/Adam/Assign"
  input: "^conv1/weight/Adam_1/Assign"
  input: "^conv1/bias/Adam/Assign"
  input: "^conv1/bias/Adam_1/Assign"
  input: "^conv2/weight/Adam/Assign"
  input: "^conv2/weight/Adam_1/Assign"
  input: "^conv2/bias/Adam/Assign"
  input: "^conv2/bias/Adam_1/Assign"
  input: "^dense/weight/Adam/Assign"
  input: "^dense/weight/Adam_1/Assign"
  input: "^dense/bias/Adam/Assign"
  input: "^dense/bias/Adam_1/Assign"
  input: "^output/weight/Adam/Assign"
  input: "^output/weight/Adam_1/Assign"
  input: "^output/bias/Adam/Assign"
  input: "^output/bias/Adam_1/Assign"
}
node {
  name: "init_89"
  op: "NoOp"
}
node {
  name: "group_deps_44"
  op: "NoOp"
  input: "^init_88"
  input: "^init_89"
}
node {
  name: "filenames_44"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
      }
    }
  }
}
node {
  name: "compression_type_44"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "buffer_size_44"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 10000
      }
    }
  }
}
node {
  name: "seed_44"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "seed2_44"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "count_44"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "OneShotIterator_44"
  op: "OneShotIterator"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dataset_factory"
    value {
      func {
        name: "_make_dataset_df21f516"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "IteratorGetNext_44"
  op: "IteratorGetNext"
  input: "OneShotIterator_44"
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
}
node {
  name: "init_90"
  op: "NoOp"
  input: "^conv1/weight/Assign"
  input: "^conv1/bias/Assign"
  input: "^conv2/weight/Assign"
  input: "^conv2/bias/Assign"
  input: "^dense/weight/Assign"
  input: "^dense/bias/Assign"
  input: "^output/weight/Assign"
  input: "^output/bias/Assign"
  input: "^adam_optimizer/beta1_power/Assign"
  input: "^adam_optimizer/beta2_power/Assign"
  input: "^conv1/weight/Adam/Assign"
  input: "^conv1/weight/Adam_1/Assign"
  input: "^conv1/bias/Adam/Assign"
  input: "^conv1/bias/Adam_1/Assign"
  input: "^conv2/weight/Adam/Assign"
  input: "^conv2/weight/Adam_1/Assign"
  input: "^conv2/bias/Adam/Assign"
  input: "^conv2/bias/Adam_1/Assign"
  input: "^dense/weight/Adam/Assign"
  input: "^dense/weight/Adam_1/Assign"
  input: "^dense/bias/Adam/Assign"
  input: "^dense/bias/Adam_1/Assign"
  input: "^output/weight/Adam/Assign"
  input: "^output/weight/Adam_1/Assign"
  input: "^output/bias/Adam/Assign"
  input: "^output/bias/Adam_1/Assign"
}
node {
  name: "init_91"
  op: "NoOp"
}
node {
  name: "group_deps_45"
  op: "NoOp"
  input: "^init_90"
  input: "^init_91"
}
node {
  name: "filenames_45"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
      }
    }
  }
}
node {
  name: "compression_type_45"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "buffer_size_45"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 10000
      }
    }
  }
}
node {
  name: "seed_45"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "seed2_45"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "count_45"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "OneShotIterator_45"
  op: "OneShotIterator"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dataset_factory"
    value {
      func {
        name: "_make_dataset_d1fa266f"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "IteratorGetNext_45"
  op: "IteratorGetNext"
  input: "OneShotIterator_45"
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
}
node {
  name: "init_92"
  op: "NoOp"
  input: "^conv1/weight/Assign"
  input: "^conv1/bias/Assign"
  input: "^conv2/weight/Assign"
  input: "^conv2/bias/Assign"
  input: "^dense/weight/Assign"
  input: "^dense/bias/Assign"
  input: "^output/weight/Assign"
  input: "^output/bias/Assign"
  input: "^adam_optimizer/beta1_power/Assign"
  input: "^adam_optimizer/beta2_power/Assign"
  input: "^conv1/weight/Adam/Assign"
  input: "^conv1/weight/Adam_1/Assign"
  input: "^conv1/bias/Adam/Assign"
  input: "^conv1/bias/Adam_1/Assign"
  input: "^conv2/weight/Adam/Assign"
  input: "^conv2/weight/Adam_1/Assign"
  input: "^conv2/bias/Adam/Assign"
  input: "^conv2/bias/Adam_1/Assign"
  input: "^dense/weight/Adam/Assign"
  input: "^dense/weight/Adam_1/Assign"
  input: "^dense/bias/Adam/Assign"
  input: "^dense/bias/Adam_1/Assign"
  input: "^output/weight/Adam/Assign"
  input: "^output/weight/Adam_1/Assign"
  input: "^output/bias/Adam/Assign"
  input: "^output/bias/Adam_1/Assign"
}
node {
  name: "init_93"
  op: "NoOp"
}
node {
  name: "group_deps_46"
  op: "NoOp"
  input: "^init_92"
  input: "^init_93"
}
node {
  name: "filenames_46"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
      }
    }
  }
}
node {
  name: "compression_type_46"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "buffer_size_46"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 10000
      }
    }
  }
}
node {
  name: "seed_46"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "seed2_46"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "count_46"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "OneShotIterator_46"
  op: "OneShotIterator"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dataset_factory"
    value {
      func {
        name: "_make_dataset_43233022"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "IteratorGetNext_46"
  op: "IteratorGetNext"
  input: "OneShotIterator_46"
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
}
node {
  name: "init_94"
  op: "NoOp"
  input: "^conv1/weight/Assign"
  input: "^conv1/bias/Assign"
  input: "^conv2/weight/Assign"
  input: "^conv2/bias/Assign"
  input: "^dense/weight/Assign"
  input: "^dense/bias/Assign"
  input: "^output/weight/Assign"
  input: "^output/bias/Assign"
  input: "^adam_optimizer/beta1_power/Assign"
  input: "^adam_optimizer/beta2_power/Assign"
  input: "^conv1/weight/Adam/Assign"
  input: "^conv1/weight/Adam_1/Assign"
  input: "^conv1/bias/Adam/Assign"
  input: "^conv1/bias/Adam_1/Assign"
  input: "^conv2/weight/Adam/Assign"
  input: "^conv2/weight/Adam_1/Assign"
  input: "^conv2/bias/Adam/Assign"
  input: "^conv2/bias/Adam_1/Assign"
  input: "^dense/weight/Adam/Assign"
  input: "^dense/weight/Adam_1/Assign"
  input: "^dense/bias/Adam/Assign"
  input: "^dense/bias/Adam_1/Assign"
  input: "^output/weight/Adam/Assign"
  input: "^output/weight/Adam_1/Assign"
  input: "^output/bias/Adam/Assign"
  input: "^output/bias/Adam_1/Assign"
}
node {
  name: "init_95"
  op: "NoOp"
}
node {
  name: "group_deps_47"
  op: "NoOp"
  input: "^init_94"
  input: "^init_95"
}
node {
  name: "filenames_47"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
      }
    }
  }
}
node {
  name: "compression_type_47"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "buffer_size_47"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 10000
      }
    }
  }
}
node {
  name: "seed_47"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "seed2_47"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "count_47"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "OneShotIterator_47"
  op: "OneShotIterator"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dataset_factory"
    value {
      func {
        name: "_make_dataset_136a545c"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "IteratorGetNext_47"
  op: "IteratorGetNext"
  input: "OneShotIterator_47"
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
}
node {
  name: "init_96"
  op: "NoOp"
  input: "^conv1/weight/Assign"
  input: "^conv1/bias/Assign"
  input: "^conv2/weight/Assign"
  input: "^conv2/bias/Assign"
  input: "^dense/weight/Assign"
  input: "^dense/bias/Assign"
  input: "^output/weight/Assign"
  input: "^output/bias/Assign"
  input: "^adam_optimizer/beta1_power/Assign"
  input: "^adam_optimizer/beta2_power/Assign"
  input: "^conv1/weight/Adam/Assign"
  input: "^conv1/weight/Adam_1/Assign"
  input: "^conv1/bias/Adam/Assign"
  input: "^conv1/bias/Adam_1/Assign"
  input: "^conv2/weight/Adam/Assign"
  input: "^conv2/weight/Adam_1/Assign"
  input: "^conv2/bias/Adam/Assign"
  input: "^conv2/bias/Adam_1/Assign"
  input: "^dense/weight/Adam/Assign"
  input: "^dense/weight/Adam_1/Assign"
  input: "^dense/bias/Adam/Assign"
  input: "^dense/bias/Adam_1/Assign"
  input: "^output/weight/Adam/Assign"
  input: "^output/weight/Adam_1/Assign"
  input: "^output/bias/Adam/Assign"
  input: "^output/bias/Adam_1/Assign"
}
node {
  name: "init_97"
  op: "NoOp"
}
node {
  name: "group_deps_48"
  op: "NoOp"
  input: "^init_96"
  input: "^init_97"
}
node {
  name: "filenames_48"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
      }
    }
  }
}
node {
  name: "compression_type_48"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "buffer_size_48"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 10000
      }
    }
  }
}
node {
  name: "seed_48"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "seed2_48"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "count_48"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "OneShotIterator_48"
  op: "OneShotIterator"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dataset_factory"
    value {
      func {
        name: "_make_dataset_17047d1a"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "IteratorGetNext_48"
  op: "IteratorGetNext"
  input: "OneShotIterator_48"
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
}
node {
  name: "init_98"
  op: "NoOp"
  input: "^conv1/weight/Assign"
  input: "^conv1/bias/Assign"
  input: "^conv2/weight/Assign"
  input: "^conv2/bias/Assign"
  input: "^dense/weight/Assign"
  input: "^dense/bias/Assign"
  input: "^output/weight/Assign"
  input: "^output/bias/Assign"
  input: "^adam_optimizer/beta1_power/Assign"
  input: "^adam_optimizer/beta2_power/Assign"
  input: "^conv1/weight/Adam/Assign"
  input: "^conv1/weight/Adam_1/Assign"
  input: "^conv1/bias/Adam/Assign"
  input: "^conv1/bias/Adam_1/Assign"
  input: "^conv2/weight/Adam/Assign"
  input: "^conv2/weight/Adam_1/Assign"
  input: "^conv2/bias/Adam/Assign"
  input: "^conv2/bias/Adam_1/Assign"
  input: "^dense/weight/Adam/Assign"
  input: "^dense/weight/Adam_1/Assign"
  input: "^dense/bias/Adam/Assign"
  input: "^dense/bias/Adam_1/Assign"
  input: "^output/weight/Adam/Assign"
  input: "^output/weight/Adam_1/Assign"
  input: "^output/bias/Adam/Assign"
  input: "^output/bias/Adam_1/Assign"
}
node {
  name: "init_99"
  op: "NoOp"
}
node {
  name: "group_deps_49"
  op: "NoOp"
  input: "^init_98"
  input: "^init_99"
}
node {
  name: "filenames_49"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
      }
    }
  }
}
node {
  name: "compression_type_49"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "buffer_size_49"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 10000
      }
    }
  }
}
node {
  name: "seed_49"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "seed2_49"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "count_49"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "OneShotIterator_49"
  op: "OneShotIterator"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dataset_factory"
    value {
      func {
        name: "_make_dataset_375450ea"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "IteratorGetNext_49"
  op: "IteratorGetNext"
  input: "OneShotIterator_49"
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
}
node {
  name: "init_100"
  op: "NoOp"
  input: "^conv1/weight/Assign"
  input: "^conv1/bias/Assign"
  input: "^conv2/weight/Assign"
  input: "^conv2/bias/Assign"
  input: "^dense/weight/Assign"
  input: "^dense/bias/Assign"
  input: "^output/weight/Assign"
  input: "^output/bias/Assign"
  input: "^adam_optimizer/beta1_power/Assign"
  input: "^adam_optimizer/beta2_power/Assign"
  input: "^conv1/weight/Adam/Assign"
  input: "^conv1/weight/Adam_1/Assign"
  input: "^conv1/bias/Adam/Assign"
  input: "^conv1/bias/Adam_1/Assign"
  input: "^conv2/weight/Adam/Assign"
  input: "^conv2/weight/Adam_1/Assign"
  input: "^conv2/bias/Adam/Assign"
  input: "^conv2/bias/Adam_1/Assign"
  input: "^dense/weight/Adam/Assign"
  input: "^dense/weight/Adam_1/Assign"
  input: "^dense/bias/Adam/Assign"
  input: "^dense/bias/Adam_1/Assign"
  input: "^output/weight/Adam/Assign"
  input: "^output/weight/Adam_1/Assign"
  input: "^output/bias/Adam/Assign"
  input: "^output/bias/Adam_1/Assign"
}
node {
  name: "init_101"
  op: "NoOp"
}
node {
  name: "group_deps_50"
  op: "NoOp"
  input: "^init_100"
  input: "^init_101"
}
node {
  name: "filenames_50"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
      }
    }
  }
}
node {
  name: "compression_type_50"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "buffer_size_50"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 10000
      }
    }
  }
}
node {
  name: "seed_50"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "seed2_50"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "count_50"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "OneShotIterator_50"
  op: "OneShotIterator"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dataset_factory"
    value {
      func {
        name: "_make_dataset_f7d61085"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "IteratorGetNext_50"
  op: "IteratorGetNext"
  input: "OneShotIterator_50"
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
}
node {
  name: "init_102"
  op: "NoOp"
  input: "^conv1/weight/Assign"
  input: "^conv1/bias/Assign"
  input: "^conv2/weight/Assign"
  input: "^conv2/bias/Assign"
  input: "^dense/weight/Assign"
  input: "^dense/bias/Assign"
  input: "^output/weight/Assign"
  input: "^output/bias/Assign"
  input: "^adam_optimizer/beta1_power/Assign"
  input: "^adam_optimizer/beta2_power/Assign"
  input: "^conv1/weight/Adam/Assign"
  input: "^conv1/weight/Adam_1/Assign"
  input: "^conv1/bias/Adam/Assign"
  input: "^conv1/bias/Adam_1/Assign"
  input: "^conv2/weight/Adam/Assign"
  input: "^conv2/weight/Adam_1/Assign"
  input: "^conv2/bias/Adam/Assign"
  input: "^conv2/bias/Adam_1/Assign"
  input: "^dense/weight/Adam/Assign"
  input: "^dense/weight/Adam_1/Assign"
  input: "^dense/bias/Adam/Assign"
  input: "^dense/bias/Adam_1/Assign"
  input: "^output/weight/Adam/Assign"
  input: "^output/weight/Adam_1/Assign"
  input: "^output/bias/Adam/Assign"
  input: "^output/bias/Adam_1/Assign"
}
node {
  name: "init_103"
  op: "NoOp"
}
node {
  name: "group_deps_51"
  op: "NoOp"
  input: "^init_102"
  input: "^init_103"
}
node {
  name: "filenames_51"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
      }
    }
  }
}
node {
  name: "compression_type_51"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "buffer_size_51"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 10000
      }
    }
  }
}
node {
  name: "seed_51"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "seed2_51"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "count_51"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "OneShotIterator_51"
  op: "OneShotIterator"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dataset_factory"
    value {
      func {
        name: "_make_dataset_fcb8bb92"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "IteratorGetNext_51"
  op: "IteratorGetNext"
  input: "OneShotIterator_51"
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
}
node {
  name: "init_104"
  op: "NoOp"
  input: "^conv1/weight/Assign"
  input: "^conv1/bias/Assign"
  input: "^conv2/weight/Assign"
  input: "^conv2/bias/Assign"
  input: "^dense/weight/Assign"
  input: "^dense/bias/Assign"
  input: "^output/weight/Assign"
  input: "^output/bias/Assign"
  input: "^adam_optimizer/beta1_power/Assign"
  input: "^adam_optimizer/beta2_power/Assign"
  input: "^conv1/weight/Adam/Assign"
  input: "^conv1/weight/Adam_1/Assign"
  input: "^conv1/bias/Adam/Assign"
  input: "^conv1/bias/Adam_1/Assign"
  input: "^conv2/weight/Adam/Assign"
  input: "^conv2/weight/Adam_1/Assign"
  input: "^conv2/bias/Adam/Assign"
  input: "^conv2/bias/Adam_1/Assign"
  input: "^dense/weight/Adam/Assign"
  input: "^dense/weight/Adam_1/Assign"
  input: "^dense/bias/Adam/Assign"
  input: "^dense/bias/Adam_1/Assign"
  input: "^output/weight/Adam/Assign"
  input: "^output/weight/Adam_1/Assign"
  input: "^output/bias/Adam/Assign"
  input: "^output/bias/Adam_1/Assign"
}
node {
  name: "init_105"
  op: "NoOp"
}
node {
  name: "group_deps_52"
  op: "NoOp"
  input: "^init_104"
  input: "^init_105"
}
node {
  name: "filenames_52"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
      }
    }
  }
}
node {
  name: "compression_type_52"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "buffer_size_52"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 10000
      }
    }
  }
}
node {
  name: "seed_52"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "seed2_52"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "count_52"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "OneShotIterator_52"
  op: "OneShotIterator"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dataset_factory"
    value {
      func {
        name: "_make_dataset_54129f92"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "IteratorGetNext_52"
  op: "IteratorGetNext"
  input: "OneShotIterator_52"
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
}
node {
  name: "init_106"
  op: "NoOp"
  input: "^conv1/weight/Assign"
  input: "^conv1/bias/Assign"
  input: "^conv2/weight/Assign"
  input: "^conv2/bias/Assign"
  input: "^dense/weight/Assign"
  input: "^dense/bias/Assign"
  input: "^output/weight/Assign"
  input: "^output/bias/Assign"
  input: "^adam_optimizer/beta1_power/Assign"
  input: "^adam_optimizer/beta2_power/Assign"
  input: "^conv1/weight/Adam/Assign"
  input: "^conv1/weight/Adam_1/Assign"
  input: "^conv1/bias/Adam/Assign"
  input: "^conv1/bias/Adam_1/Assign"
  input: "^conv2/weight/Adam/Assign"
  input: "^conv2/weight/Adam_1/Assign"
  input: "^conv2/bias/Adam/Assign"
  input: "^conv2/bias/Adam_1/Assign"
  input: "^dense/weight/Adam/Assign"
  input: "^dense/weight/Adam_1/Assign"
  input: "^dense/bias/Adam/Assign"
  input: "^dense/bias/Adam_1/Assign"
  input: "^output/weight/Adam/Assign"
  input: "^output/weight/Adam_1/Assign"
  input: "^output/bias/Adam/Assign"
  input: "^output/bias/Adam_1/Assign"
}
node {
  name: "init_107"
  op: "NoOp"
}
node {
  name: "group_deps_53"
  op: "NoOp"
  input: "^init_106"
  input: "^init_107"
}
node {
  name: "filenames_53"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
      }
    }
  }
}
node {
  name: "compression_type_53"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "buffer_size_53"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 10000
      }
    }
  }
}
node {
  name: "seed_53"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "seed2_53"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "count_53"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "OneShotIterator_53"
  op: "OneShotIterator"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dataset_factory"
    value {
      func {
        name: "_make_dataset_7c4ac3e4"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "IteratorGetNext_53"
  op: "IteratorGetNext"
  input: "OneShotIterator_53"
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
}
node {
  name: "init_108"
  op: "NoOp"
  input: "^conv1/weight/Assign"
  input: "^conv1/bias/Assign"
  input: "^conv2/weight/Assign"
  input: "^conv2/bias/Assign"
  input: "^dense/weight/Assign"
  input: "^dense/bias/Assign"
  input: "^output/weight/Assign"
  input: "^output/bias/Assign"
  input: "^adam_optimizer/beta1_power/Assign"
  input: "^adam_optimizer/beta2_power/Assign"
  input: "^conv1/weight/Adam/Assign"
  input: "^conv1/weight/Adam_1/Assign"
  input: "^conv1/bias/Adam/Assign"
  input: "^conv1/bias/Adam_1/Assign"
  input: "^conv2/weight/Adam/Assign"
  input: "^conv2/weight/Adam_1/Assign"
  input: "^conv2/bias/Adam/Assign"
  input: "^conv2/bias/Adam_1/Assign"
  input: "^dense/weight/Adam/Assign"
  input: "^dense/weight/Adam_1/Assign"
  input: "^dense/bias/Adam/Assign"
  input: "^dense/bias/Adam_1/Assign"
  input: "^output/weight/Adam/Assign"
  input: "^output/weight/Adam_1/Assign"
  input: "^output/bias/Adam/Assign"
  input: "^output/bias/Adam_1/Assign"
}
node {
  name: "init_109"
  op: "NoOp"
}
node {
  name: "group_deps_54"
  op: "NoOp"
  input: "^init_108"
  input: "^init_109"
}
node {
  name: "filenames_54"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
      }
    }
  }
}
node {
  name: "compression_type_54"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "buffer_size_54"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 10000
      }
    }
  }
}
node {
  name: "seed_54"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "seed2_54"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "count_54"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "OneShotIterator_54"
  op: "OneShotIterator"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dataset_factory"
    value {
      func {
        name: "_make_dataset_296cfc11"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "IteratorGetNext_54"
  op: "IteratorGetNext"
  input: "OneShotIterator_54"
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
}
node {
  name: "init_110"
  op: "NoOp"
  input: "^conv1/weight/Assign"
  input: "^conv1/bias/Assign"
  input: "^conv2/weight/Assign"
  input: "^conv2/bias/Assign"
  input: "^dense/weight/Assign"
  input: "^dense/bias/Assign"
  input: "^output/weight/Assign"
  input: "^output/bias/Assign"
  input: "^adam_optimizer/beta1_power/Assign"
  input: "^adam_optimizer/beta2_power/Assign"
  input: "^conv1/weight/Adam/Assign"
  input: "^conv1/weight/Adam_1/Assign"
  input: "^conv1/bias/Adam/Assign"
  input: "^conv1/bias/Adam_1/Assign"
  input: "^conv2/weight/Adam/Assign"
  input: "^conv2/weight/Adam_1/Assign"
  input: "^conv2/bias/Adam/Assign"
  input: "^conv2/bias/Adam_1/Assign"
  input: "^dense/weight/Adam/Assign"
  input: "^dense/weight/Adam_1/Assign"
  input: "^dense/bias/Adam/Assign"
  input: "^dense/bias/Adam_1/Assign"
  input: "^output/weight/Adam/Assign"
  input: "^output/weight/Adam_1/Assign"
  input: "^output/bias/Adam/Assign"
  input: "^output/bias/Adam_1/Assign"
}
node {
  name: "init_111"
  op: "NoOp"
}
node {
  name: "group_deps_55"
  op: "NoOp"
  input: "^init_110"
  input: "^init_111"
}
node {
  name: "filenames_55"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
      }
    }
  }
}
node {
  name: "compression_type_55"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "buffer_size_55"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 10000
      }
    }
  }
}
node {
  name: "seed_55"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "seed2_55"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "count_55"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "OneShotIterator_55"
  op: "OneShotIterator"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dataset_factory"
    value {
      func {
        name: "_make_dataset_a09faf70"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "IteratorGetNext_55"
  op: "IteratorGetNext"
  input: "OneShotIterator_55"
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
}
node {
  name: "init_112"
  op: "NoOp"
  input: "^conv1/weight/Assign"
  input: "^conv1/bias/Assign"
  input: "^conv2/weight/Assign"
  input: "^conv2/bias/Assign"
  input: "^dense/weight/Assign"
  input: "^dense/bias/Assign"
  input: "^output/weight/Assign"
  input: "^output/bias/Assign"
  input: "^adam_optimizer/beta1_power/Assign"
  input: "^adam_optimizer/beta2_power/Assign"
  input: "^conv1/weight/Adam/Assign"
  input: "^conv1/weight/Adam_1/Assign"
  input: "^conv1/bias/Adam/Assign"
  input: "^conv1/bias/Adam_1/Assign"
  input: "^conv2/weight/Adam/Assign"
  input: "^conv2/weight/Adam_1/Assign"
  input: "^conv2/bias/Adam/Assign"
  input: "^conv2/bias/Adam_1/Assign"
  input: "^dense/weight/Adam/Assign"
  input: "^dense/weight/Adam_1/Assign"
  input: "^dense/bias/Adam/Assign"
  input: "^dense/bias/Adam_1/Assign"
  input: "^output/weight/Adam/Assign"
  input: "^output/weight/Adam_1/Assign"
  input: "^output/bias/Adam/Assign"
  input: "^output/bias/Adam_1/Assign"
}
node {
  name: "init_113"
  op: "NoOp"
}
node {
  name: "group_deps_56"
  op: "NoOp"
  input: "^init_112"
  input: "^init_113"
}
node {
  name: "filenames_56"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
      }
    }
  }
}
node {
  name: "compression_type_56"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "buffer_size_56"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 10000
      }
    }
  }
}
node {
  name: "seed_56"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "seed2_56"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "count_56"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "OneShotIterator_56"
  op: "OneShotIterator"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dataset_factory"
    value {
      func {
        name: "_make_dataset_e60c3697"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "IteratorGetNext_56"
  op: "IteratorGetNext"
  input: "OneShotIterator_56"
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
}
node {
  name: "init_114"
  op: "NoOp"
  input: "^conv1/weight/Assign"
  input: "^conv1/bias/Assign"
  input: "^conv2/weight/Assign"
  input: "^conv2/bias/Assign"
  input: "^dense/weight/Assign"
  input: "^dense/bias/Assign"
  input: "^output/weight/Assign"
  input: "^output/bias/Assign"
  input: "^adam_optimizer/beta1_power/Assign"
  input: "^adam_optimizer/beta2_power/Assign"
  input: "^conv1/weight/Adam/Assign"
  input: "^conv1/weight/Adam_1/Assign"
  input: "^conv1/bias/Adam/Assign"
  input: "^conv1/bias/Adam_1/Assign"
  input: "^conv2/weight/Adam/Assign"
  input: "^conv2/weight/Adam_1/Assign"
  input: "^conv2/bias/Adam/Assign"
  input: "^conv2/bias/Adam_1/Assign"
  input: "^dense/weight/Adam/Assign"
  input: "^dense/weight/Adam_1/Assign"
  input: "^dense/bias/Adam/Assign"
  input: "^dense/bias/Adam_1/Assign"
  input: "^output/weight/Adam/Assign"
  input: "^output/weight/Adam_1/Assign"
  input: "^output/bias/Adam/Assign"
  input: "^output/bias/Adam_1/Assign"
}
node {
  name: "init_115"
  op: "NoOp"
}
node {
  name: "group_deps_57"
  op: "NoOp"
  input: "^init_114"
  input: "^init_115"
}
node {
  name: "filenames_57"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
      }
    }
  }
}
node {
  name: "compression_type_57"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "buffer_size_57"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 10000
      }
    }
  }
}
node {
  name: "seed_57"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "seed2_57"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "count_57"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "OneShotIterator_57"
  op: "OneShotIterator"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dataset_factory"
    value {
      func {
        name: "_make_dataset_65d8ed86"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "IteratorGetNext_57"
  op: "IteratorGetNext"
  input: "OneShotIterator_57"
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
}
node {
  name: "init_116"
  op: "NoOp"
  input: "^conv1/weight/Assign"
  input: "^conv1/bias/Assign"
  input: "^conv2/weight/Assign"
  input: "^conv2/bias/Assign"
  input: "^dense/weight/Assign"
  input: "^dense/bias/Assign"
  input: "^output/weight/Assign"
  input: "^output/bias/Assign"
  input: "^adam_optimizer/beta1_power/Assign"
  input: "^adam_optimizer/beta2_power/Assign"
  input: "^conv1/weight/Adam/Assign"
  input: "^conv1/weight/Adam_1/Assign"
  input: "^conv1/bias/Adam/Assign"
  input: "^conv1/bias/Adam_1/Assign"
  input: "^conv2/weight/Adam/Assign"
  input: "^conv2/weight/Adam_1/Assign"
  input: "^conv2/bias/Adam/Assign"
  input: "^conv2/bias/Adam_1/Assign"
  input: "^dense/weight/Adam/Assign"
  input: "^dense/weight/Adam_1/Assign"
  input: "^dense/bias/Adam/Assign"
  input: "^dense/bias/Adam_1/Assign"
  input: "^output/weight/Adam/Assign"
  input: "^output/weight/Adam_1/Assign"
  input: "^output/bias/Adam/Assign"
  input: "^output/bias/Adam_1/Assign"
}
node {
  name: "init_117"
  op: "NoOp"
}
node {
  name: "group_deps_58"
  op: "NoOp"
  input: "^init_116"
  input: "^init_117"
}
node {
  name: "filenames_58"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
      }
    }
  }
}
node {
  name: "compression_type_58"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "buffer_size_58"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 10000
      }
    }
  }
}
node {
  name: "seed_58"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "seed2_58"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "count_58"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "OneShotIterator_58"
  op: "OneShotIterator"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dataset_factory"
    value {
      func {
        name: "_make_dataset_260153e1"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "IteratorGetNext_58"
  op: "IteratorGetNext"
  input: "OneShotIterator_58"
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
}
node {
  name: "init_118"
  op: "NoOp"
  input: "^conv1/weight/Assign"
  input: "^conv1/bias/Assign"
  input: "^conv2/weight/Assign"
  input: "^conv2/bias/Assign"
  input: "^dense/weight/Assign"
  input: "^dense/bias/Assign"
  input: "^output/weight/Assign"
  input: "^output/bias/Assign"
  input: "^adam_optimizer/beta1_power/Assign"
  input: "^adam_optimizer/beta2_power/Assign"
  input: "^conv1/weight/Adam/Assign"
  input: "^conv1/weight/Adam_1/Assign"
  input: "^conv1/bias/Adam/Assign"
  input: "^conv1/bias/Adam_1/Assign"
  input: "^conv2/weight/Adam/Assign"
  input: "^conv2/weight/Adam_1/Assign"
  input: "^conv2/bias/Adam/Assign"
  input: "^conv2/bias/Adam_1/Assign"
  input: "^dense/weight/Adam/Assign"
  input: "^dense/weight/Adam_1/Assign"
  input: "^dense/bias/Adam/Assign"
  input: "^dense/bias/Adam_1/Assign"
  input: "^output/weight/Adam/Assign"
  input: "^output/weight/Adam_1/Assign"
  input: "^output/bias/Adam/Assign"
  input: "^output/bias/Adam_1/Assign"
}
node {
  name: "init_119"
  op: "NoOp"
}
node {
  name: "group_deps_59"
  op: "NoOp"
  input: "^init_118"
  input: "^init_119"
}
node {
  name: "filenames_59"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
      }
    }
  }
}
node {
  name: "compression_type_59"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "buffer_size_59"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 10000
      }
    }
  }
}
node {
  name: "seed_59"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "seed2_59"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "count_59"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "OneShotIterator_59"
  op: "OneShotIterator"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dataset_factory"
    value {
      func {
        name: "_make_dataset_f30ea204"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "IteratorGetNext_59"
  op: "IteratorGetNext"
  input: "OneShotIterator_59"
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
}
node {
  name: "init_120"
  op: "NoOp"
  input: "^conv1/weight/Assign"
  input: "^conv1/bias/Assign"
  input: "^conv2/weight/Assign"
  input: "^conv2/bias/Assign"
  input: "^dense/weight/Assign"
  input: "^dense/bias/Assign"
  input: "^output/weight/Assign"
  input: "^output/bias/Assign"
  input: "^adam_optimizer/beta1_power/Assign"
  input: "^adam_optimizer/beta2_power/Assign"
  input: "^conv1/weight/Adam/Assign"
  input: "^conv1/weight/Adam_1/Assign"
  input: "^conv1/bias/Adam/Assign"
  input: "^conv1/bias/Adam_1/Assign"
  input: "^conv2/weight/Adam/Assign"
  input: "^conv2/weight/Adam_1/Assign"
  input: "^conv2/bias/Adam/Assign"
  input: "^conv2/bias/Adam_1/Assign"
  input: "^dense/weight/Adam/Assign"
  input: "^dense/weight/Adam_1/Assign"
  input: "^dense/bias/Adam/Assign"
  input: "^dense/bias/Adam_1/Assign"
  input: "^output/weight/Adam/Assign"
  input: "^output/weight/Adam_1/Assign"
  input: "^output/bias/Adam/Assign"
  input: "^output/bias/Adam_1/Assign"
}
node {
  name: "init_121"
  op: "NoOp"
}
node {
  name: "group_deps_60"
  op: "NoOp"
  input: "^init_120"
  input: "^init_121"
}
node {
  name: "filenames_60"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
      }
    }
  }
}
node {
  name: "compression_type_60"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "buffer_size_60"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 10000
      }
    }
  }
}
node {
  name: "seed_60"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "seed2_60"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "count_60"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "OneShotIterator_60"
  op: "OneShotIterator"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dataset_factory"
    value {
      func {
        name: "_make_dataset_8e12433b"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "IteratorGetNext_60"
  op: "IteratorGetNext"
  input: "OneShotIterator_60"
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
}
node {
  name: "init_122"
  op: "NoOp"
  input: "^conv1/weight/Assign"
  input: "^conv1/bias/Assign"
  input: "^conv2/weight/Assign"
  input: "^conv2/bias/Assign"
  input: "^dense/weight/Assign"
  input: "^dense/bias/Assign"
  input: "^output/weight/Assign"
  input: "^output/bias/Assign"
  input: "^adam_optimizer/beta1_power/Assign"
  input: "^adam_optimizer/beta2_power/Assign"
  input: "^conv1/weight/Adam/Assign"
  input: "^conv1/weight/Adam_1/Assign"
  input: "^conv1/bias/Adam/Assign"
  input: "^conv1/bias/Adam_1/Assign"
  input: "^conv2/weight/Adam/Assign"
  input: "^conv2/weight/Adam_1/Assign"
  input: "^conv2/bias/Adam/Assign"
  input: "^conv2/bias/Adam_1/Assign"
  input: "^dense/weight/Adam/Assign"
  input: "^dense/weight/Adam_1/Assign"
  input: "^dense/bias/Adam/Assign"
  input: "^dense/bias/Adam_1/Assign"
  input: "^output/weight/Adam/Assign"
  input: "^output/weight/Adam_1/Assign"
  input: "^output/bias/Adam/Assign"
  input: "^output/bias/Adam_1/Assign"
}
node {
  name: "init_123"
  op: "NoOp"
}
node {
  name: "group_deps_61"
  op: "NoOp"
  input: "^init_122"
  input: "^init_123"
}
node {
  name: "filenames_61"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
      }
    }
  }
}
node {
  name: "compression_type_61"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "buffer_size_61"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 10000
      }
    }
  }
}
node {
  name: "seed_61"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "seed2_61"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "count_61"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "OneShotIterator_61"
  op: "OneShotIterator"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dataset_factory"
    value {
      func {
        name: "_make_dataset_49d1984c"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "IteratorGetNext_61"
  op: "IteratorGetNext"
  input: "OneShotIterator_61"
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
}
node {
  name: "init_124"
  op: "NoOp"
  input: "^conv1/weight/Assign"
  input: "^conv1/bias/Assign"
  input: "^conv2/weight/Assign"
  input: "^conv2/bias/Assign"
  input: "^dense/weight/Assign"
  input: "^dense/bias/Assign"
  input: "^output/weight/Assign"
  input: "^output/bias/Assign"
  input: "^adam_optimizer/beta1_power/Assign"
  input: "^adam_optimizer/beta2_power/Assign"
  input: "^conv1/weight/Adam/Assign"
  input: "^conv1/weight/Adam_1/Assign"
  input: "^conv1/bias/Adam/Assign"
  input: "^conv1/bias/Adam_1/Assign"
  input: "^conv2/weight/Adam/Assign"
  input: "^conv2/weight/Adam_1/Assign"
  input: "^conv2/bias/Adam/Assign"
  input: "^conv2/bias/Adam_1/Assign"
  input: "^dense/weight/Adam/Assign"
  input: "^dense/weight/Adam_1/Assign"
  input: "^dense/bias/Adam/Assign"
  input: "^dense/bias/Adam_1/Assign"
  input: "^output/weight/Adam/Assign"
  input: "^output/weight/Adam_1/Assign"
  input: "^output/bias/Adam/Assign"
  input: "^output/bias/Adam_1/Assign"
}
node {
  name: "init_125"
  op: "NoOp"
}
node {
  name: "group_deps_62"
  op: "NoOp"
  input: "^init_124"
  input: "^init_125"
}
node {
  name: "filenames_62"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
      }
    }
  }
}
node {
  name: "compression_type_62"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "buffer_size_62"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 10000
      }
    }
  }
}
node {
  name: "seed_62"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "seed2_62"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "count_62"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "OneShotIterator_62"
  op: "OneShotIterator"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dataset_factory"
    value {
      func {
        name: "_make_dataset_4a35a938"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "IteratorGetNext_62"
  op: "IteratorGetNext"
  input: "OneShotIterator_62"
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
}
node {
  name: "init_126"
  op: "NoOp"
  input: "^conv1/weight/Assign"
  input: "^conv1/bias/Assign"
  input: "^conv2/weight/Assign"
  input: "^conv2/bias/Assign"
  input: "^dense/weight/Assign"
  input: "^dense/bias/Assign"
  input: "^output/weight/Assign"
  input: "^output/bias/Assign"
  input: "^adam_optimizer/beta1_power/Assign"
  input: "^adam_optimizer/beta2_power/Assign"
  input: "^conv1/weight/Adam/Assign"
  input: "^conv1/weight/Adam_1/Assign"
  input: "^conv1/bias/Adam/Assign"
  input: "^conv1/bias/Adam_1/Assign"
  input: "^conv2/weight/Adam/Assign"
  input: "^conv2/weight/Adam_1/Assign"
  input: "^conv2/bias/Adam/Assign"
  input: "^conv2/bias/Adam_1/Assign"
  input: "^dense/weight/Adam/Assign"
  input: "^dense/weight/Adam_1/Assign"
  input: "^dense/bias/Adam/Assign"
  input: "^dense/bias/Adam_1/Assign"
  input: "^output/weight/Adam/Assign"
  input: "^output/weight/Adam_1/Assign"
  input: "^output/bias/Adam/Assign"
  input: "^output/bias/Adam_1/Assign"
}
node {
  name: "init_127"
  op: "NoOp"
}
node {
  name: "group_deps_63"
  op: "NoOp"
  input: "^init_126"
  input: "^init_127"
}
node {
  name: "filenames_63"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
      }
    }
  }
}
node {
  name: "compression_type_63"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "buffer_size_63"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 10000
      }
    }
  }
}
node {
  name: "seed_63"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "seed2_63"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "count_63"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "OneShotIterator_63"
  op: "OneShotIterator"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dataset_factory"
    value {
      func {
        name: "_make_dataset_30cffda9"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "IteratorGetNext_63"
  op: "IteratorGetNext"
  input: "OneShotIterator_63"
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
}
node {
  name: "init_128"
  op: "NoOp"
  input: "^conv1/weight/Assign"
  input: "^conv1/bias/Assign"
  input: "^conv2/weight/Assign"
  input: "^conv2/bias/Assign"
  input: "^dense/weight/Assign"
  input: "^dense/bias/Assign"
  input: "^output/weight/Assign"
  input: "^output/bias/Assign"
  input: "^adam_optimizer/beta1_power/Assign"
  input: "^adam_optimizer/beta2_power/Assign"
  input: "^conv1/weight/Adam/Assign"
  input: "^conv1/weight/Adam_1/Assign"
  input: "^conv1/bias/Adam/Assign"
  input: "^conv1/bias/Adam_1/Assign"
  input: "^conv2/weight/Adam/Assign"
  input: "^conv2/weight/Adam_1/Assign"
  input: "^conv2/bias/Adam/Assign"
  input: "^conv2/bias/Adam_1/Assign"
  input: "^dense/weight/Adam/Assign"
  input: "^dense/weight/Adam_1/Assign"
  input: "^dense/bias/Adam/Assign"
  input: "^dense/bias/Adam_1/Assign"
  input: "^output/weight/Adam/Assign"
  input: "^output/weight/Adam_1/Assign"
  input: "^output/bias/Adam/Assign"
  input: "^output/bias/Adam_1/Assign"
}
node {
  name: "init_129"
  op: "NoOp"
}
node {
  name: "group_deps_64"
  op: "NoOp"
  input: "^init_128"
  input: "^init_129"
}
node {
  name: "filenames_64"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
      }
    }
  }
}
node {
  name: "compression_type_64"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "buffer_size_64"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 10000
      }
    }
  }
}
node {
  name: "seed_64"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "seed2_64"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "count_64"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "OneShotIterator_64"
  op: "OneShotIterator"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dataset_factory"
    value {
      func {
        name: "_make_dataset_51fdfb70"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "IteratorGetNext_64"
  op: "IteratorGetNext"
  input: "OneShotIterator_64"
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
}
node {
  name: "init_130"
  op: "NoOp"
  input: "^conv1/weight/Assign"
  input: "^conv1/bias/Assign"
  input: "^conv2/weight/Assign"
  input: "^conv2/bias/Assign"
  input: "^dense/weight/Assign"
  input: "^dense/bias/Assign"
  input: "^output/weight/Assign"
  input: "^output/bias/Assign"
  input: "^adam_optimizer/beta1_power/Assign"
  input: "^adam_optimizer/beta2_power/Assign"
  input: "^conv1/weight/Adam/Assign"
  input: "^conv1/weight/Adam_1/Assign"
  input: "^conv1/bias/Adam/Assign"
  input: "^conv1/bias/Adam_1/Assign"
  input: "^conv2/weight/Adam/Assign"
  input: "^conv2/weight/Adam_1/Assign"
  input: "^conv2/bias/Adam/Assign"
  input: "^conv2/bias/Adam_1/Assign"
  input: "^dense/weight/Adam/Assign"
  input: "^dense/weight/Adam_1/Assign"
  input: "^dense/bias/Adam/Assign"
  input: "^dense/bias/Adam_1/Assign"
  input: "^output/weight/Adam/Assign"
  input: "^output/weight/Adam_1/Assign"
  input: "^output/bias/Adam/Assign"
  input: "^output/bias/Adam_1/Assign"
}
node {
  name: "init_131"
  op: "NoOp"
}
node {
  name: "group_deps_65"
  op: "NoOp"
  input: "^init_130"
  input: "^init_131"
}
node {
  name: "filenames_65"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
      }
    }
  }
}
node {
  name: "compression_type_65"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "buffer_size_65"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 10000
      }
    }
  }
}
node {
  name: "seed_65"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "seed2_65"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "count_65"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "OneShotIterator_65"
  op: "OneShotIterator"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dataset_factory"
    value {
      func {
        name: "_make_dataset_d038d0fe"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "IteratorGetNext_65"
  op: "IteratorGetNext"
  input: "OneShotIterator_65"
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
}
node {
  name: "init_132"
  op: "NoOp"
  input: "^conv1/weight/Assign"
  input: "^conv1/bias/Assign"
  input: "^conv2/weight/Assign"
  input: "^conv2/bias/Assign"
  input: "^dense/weight/Assign"
  input: "^dense/bias/Assign"
  input: "^output/weight/Assign"
  input: "^output/bias/Assign"
  input: "^adam_optimizer/beta1_power/Assign"
  input: "^adam_optimizer/beta2_power/Assign"
  input: "^conv1/weight/Adam/Assign"
  input: "^conv1/weight/Adam_1/Assign"
  input: "^conv1/bias/Adam/Assign"
  input: "^conv1/bias/Adam_1/Assign"
  input: "^conv2/weight/Adam/Assign"
  input: "^conv2/weight/Adam_1/Assign"
  input: "^conv2/bias/Adam/Assign"
  input: "^conv2/bias/Adam_1/Assign"
  input: "^dense/weight/Adam/Assign"
  input: "^dense/weight/Adam_1/Assign"
  input: "^dense/bias/Adam/Assign"
  input: "^dense/bias/Adam_1/Assign"
  input: "^output/weight/Adam/Assign"
  input: "^output/weight/Adam_1/Assign"
  input: "^output/bias/Adam/Assign"
  input: "^output/bias/Adam_1/Assign"
}
node {
  name: "init_133"
  op: "NoOp"
}
node {
  name: "group_deps_66"
  op: "NoOp"
  input: "^init_132"
  input: "^init_133"
}
node {
  name: "filenames_66"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
      }
    }
  }
}
node {
  name: "compression_type_66"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "buffer_size_66"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 10000
      }
    }
  }
}
node {
  name: "seed_66"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "seed2_66"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "count_66"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "OneShotIterator_66"
  op: "OneShotIterator"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dataset_factory"
    value {
      func {
        name: "_make_dataset_ed5cae73"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "IteratorGetNext_66"
  op: "IteratorGetNext"
  input: "OneShotIterator_66"
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
}
node {
  name: "init_134"
  op: "NoOp"
  input: "^conv1/weight/Assign"
  input: "^conv1/bias/Assign"
  input: "^conv2/weight/Assign"
  input: "^conv2/bias/Assign"
  input: "^dense/weight/Assign"
  input: "^dense/bias/Assign"
  input: "^output/weight/Assign"
  input: "^output/bias/Assign"
  input: "^adam_optimizer/beta1_power/Assign"
  input: "^adam_optimizer/beta2_power/Assign"
  input: "^conv1/weight/Adam/Assign"
  input: "^conv1/weight/Adam_1/Assign"
  input: "^conv1/bias/Adam/Assign"
  input: "^conv1/bias/Adam_1/Assign"
  input: "^conv2/weight/Adam/Assign"
  input: "^conv2/weight/Adam_1/Assign"
  input: "^conv2/bias/Adam/Assign"
  input: "^conv2/bias/Adam_1/Assign"
  input: "^dense/weight/Adam/Assign"
  input: "^dense/weight/Adam_1/Assign"
  input: "^dense/bias/Adam/Assign"
  input: "^dense/bias/Adam_1/Assign"
  input: "^output/weight/Adam/Assign"
  input: "^output/weight/Adam_1/Assign"
  input: "^output/bias/Adam/Assign"
  input: "^output/bias/Adam_1/Assign"
}
node {
  name: "init_135"
  op: "NoOp"
}
node {
  name: "group_deps_67"
  op: "NoOp"
  input: "^init_134"
  input: "^init_135"
}
node {
  name: "filenames_67"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
      }
    }
  }
}
node {
  name: "compression_type_67"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "buffer_size_67"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 10000
      }
    }
  }
}
node {
  name: "seed_67"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "seed2_67"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "count_67"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "OneShotIterator_67"
  op: "OneShotIterator"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dataset_factory"
    value {
      func {
        name: "_make_dataset_e09a2aad"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "IteratorGetNext_67"
  op: "IteratorGetNext"
  input: "OneShotIterator_67"
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
}
node {
  name: "init_136"
  op: "NoOp"
  input: "^conv1/weight/Assign"
  input: "^conv1/bias/Assign"
  input: "^conv2/weight/Assign"
  input: "^conv2/bias/Assign"
  input: "^dense/weight/Assign"
  input: "^dense/bias/Assign"
  input: "^output/weight/Assign"
  input: "^output/bias/Assign"
  input: "^adam_optimizer/beta1_power/Assign"
  input: "^adam_optimizer/beta2_power/Assign"
  input: "^conv1/weight/Adam/Assign"
  input: "^conv1/weight/Adam_1/Assign"
  input: "^conv1/bias/Adam/Assign"
  input: "^conv1/bias/Adam_1/Assign"
  input: "^conv2/weight/Adam/Assign"
  input: "^conv2/weight/Adam_1/Assign"
  input: "^conv2/bias/Adam/Assign"
  input: "^conv2/bias/Adam_1/Assign"
  input: "^dense/weight/Adam/Assign"
  input: "^dense/weight/Adam_1/Assign"
  input: "^dense/bias/Adam/Assign"
  input: "^dense/bias/Adam_1/Assign"
  input: "^output/weight/Adam/Assign"
  input: "^output/weight/Adam_1/Assign"
  input: "^output/bias/Adam/Assign"
  input: "^output/bias/Adam_1/Assign"
}
node {
  name: "init_137"
  op: "NoOp"
}
node {
  name: "group_deps_68"
  op: "NoOp"
  input: "^init_136"
  input: "^init_137"
}
node {
  name: "filenames_68"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
      }
    }
  }
}
node {
  name: "compression_type_68"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "buffer_size_68"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 10000
      }
    }
  }
}
node {
  name: "seed_68"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "seed2_68"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "count_68"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "OneShotIterator_68"
  op: "OneShotIterator"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dataset_factory"
    value {
      func {
        name: "_make_dataset_7b142ebc"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "IteratorGetNext_68"
  op: "IteratorGetNext"
  input: "OneShotIterator_68"
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
}
node {
  name: "init_138"
  op: "NoOp"
  input: "^conv1/weight/Assign"
  input: "^conv1/bias/Assign"
  input: "^conv2/weight/Assign"
  input: "^conv2/bias/Assign"
  input: "^dense/weight/Assign"
  input: "^dense/bias/Assign"
  input: "^output/weight/Assign"
  input: "^output/bias/Assign"
  input: "^adam_optimizer/beta1_power/Assign"
  input: "^adam_optimizer/beta2_power/Assign"
  input: "^conv1/weight/Adam/Assign"
  input: "^conv1/weight/Adam_1/Assign"
  input: "^conv1/bias/Adam/Assign"
  input: "^conv1/bias/Adam_1/Assign"
  input: "^conv2/weight/Adam/Assign"
  input: "^conv2/weight/Adam_1/Assign"
  input: "^conv2/bias/Adam/Assign"
  input: "^conv2/bias/Adam_1/Assign"
  input: "^dense/weight/Adam/Assign"
  input: "^dense/weight/Adam_1/Assign"
  input: "^dense/bias/Adam/Assign"
  input: "^dense/bias/Adam_1/Assign"
  input: "^output/weight/Adam/Assign"
  input: "^output/weight/Adam_1/Assign"
  input: "^output/bias/Adam/Assign"
  input: "^output/bias/Adam_1/Assign"
}
node {
  name: "init_139"
  op: "NoOp"
}
node {
  name: "group_deps_69"
  op: "NoOp"
  input: "^init_138"
  input: "^init_139"
}
node {
  name: "filenames_69"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
      }
    }
  }
}
node {
  name: "compression_type_69"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "buffer_size_69"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 10000
      }
    }
  }
}
node {
  name: "seed_69"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "seed2_69"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "count_69"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "OneShotIterator_69"
  op: "OneShotIterator"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dataset_factory"
    value {
      func {
        name: "_make_dataset_432ed112"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "IteratorGetNext_69"
  op: "IteratorGetNext"
  input: "OneShotIterator_69"
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
}
node {
  name: "init_140"
  op: "NoOp"
  input: "^conv1/weight/Assign"
  input: "^conv1/bias/Assign"
  input: "^conv2/weight/Assign"
  input: "^conv2/bias/Assign"
  input: "^dense/weight/Assign"
  input: "^dense/bias/Assign"
  input: "^output/weight/Assign"
  input: "^output/bias/Assign"
  input: "^adam_optimizer/beta1_power/Assign"
  input: "^adam_optimizer/beta2_power/Assign"
  input: "^conv1/weight/Adam/Assign"
  input: "^conv1/weight/Adam_1/Assign"
  input: "^conv1/bias/Adam/Assign"
  input: "^conv1/bias/Adam_1/Assign"
  input: "^conv2/weight/Adam/Assign"
  input: "^conv2/weight/Adam_1/Assign"
  input: "^conv2/bias/Adam/Assign"
  input: "^conv2/bias/Adam_1/Assign"
  input: "^dense/weight/Adam/Assign"
  input: "^dense/weight/Adam_1/Assign"
  input: "^dense/bias/Adam/Assign"
  input: "^dense/bias/Adam_1/Assign"
  input: "^output/weight/Adam/Assign"
  input: "^output/weight/Adam_1/Assign"
  input: "^output/bias/Adam/Assign"
  input: "^output/bias/Adam_1/Assign"
}
node {
  name: "init_141"
  op: "NoOp"
}
node {
  name: "group_deps_70"
  op: "NoOp"
  input: "^init_140"
  input: "^init_141"
}
node {
  name: "filenames_70"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
      }
    }
  }
}
node {
  name: "compression_type_70"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "buffer_size_70"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 10000
      }
    }
  }
}
node {
  name: "seed_70"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "seed2_70"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "count_70"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "OneShotIterator_70"
  op: "OneShotIterator"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dataset_factory"
    value {
      func {
        name: "_make_dataset_cc57a2fb"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "IteratorGetNext_70"
  op: "IteratorGetNext"
  input: "OneShotIterator_70"
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
}
node {
  name: "init_142"
  op: "NoOp"
  input: "^conv1/weight/Assign"
  input: "^conv1/bias/Assign"
  input: "^conv2/weight/Assign"
  input: "^conv2/bias/Assign"
  input: "^dense/weight/Assign"
  input: "^dense/bias/Assign"
  input: "^output/weight/Assign"
  input: "^output/bias/Assign"
  input: "^adam_optimizer/beta1_power/Assign"
  input: "^adam_optimizer/beta2_power/Assign"
  input: "^conv1/weight/Adam/Assign"
  input: "^conv1/weight/Adam_1/Assign"
  input: "^conv1/bias/Adam/Assign"
  input: "^conv1/bias/Adam_1/Assign"
  input: "^conv2/weight/Adam/Assign"
  input: "^conv2/weight/Adam_1/Assign"
  input: "^conv2/bias/Adam/Assign"
  input: "^conv2/bias/Adam_1/Assign"
  input: "^dense/weight/Adam/Assign"
  input: "^dense/weight/Adam_1/Assign"
  input: "^dense/bias/Adam/Assign"
  input: "^dense/bias/Adam_1/Assign"
  input: "^output/weight/Adam/Assign"
  input: "^output/weight/Adam_1/Assign"
  input: "^output/bias/Adam/Assign"
  input: "^output/bias/Adam_1/Assign"
}
node {
  name: "init_143"
  op: "NoOp"
}
node {
  name: "group_deps_71"
  op: "NoOp"
  input: "^init_142"
  input: "^init_143"
}
node {
  name: "filenames_71"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
      }
    }
  }
}
node {
  name: "compression_type_71"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "buffer_size_71"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 10000
      }
    }
  }
}
node {
  name: "seed_71"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "seed2_71"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "count_71"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "OneShotIterator_71"
  op: "OneShotIterator"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dataset_factory"
    value {
      func {
        name: "_make_dataset_fa002fc6"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "IteratorGetNext_71"
  op: "IteratorGetNext"
  input: "OneShotIterator_71"
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
}
node {
  name: "init_144"
  op: "NoOp"
  input: "^conv1/weight/Assign"
  input: "^conv1/bias/Assign"
  input: "^conv2/weight/Assign"
  input: "^conv2/bias/Assign"
  input: "^dense/weight/Assign"
  input: "^dense/bias/Assign"
  input: "^output/weight/Assign"
  input: "^output/bias/Assign"
  input: "^adam_optimizer/beta1_power/Assign"
  input: "^adam_optimizer/beta2_power/Assign"
  input: "^conv1/weight/Adam/Assign"
  input: "^conv1/weight/Adam_1/Assign"
  input: "^conv1/bias/Adam/Assign"
  input: "^conv1/bias/Adam_1/Assign"
  input: "^conv2/weight/Adam/Assign"
  input: "^conv2/weight/Adam_1/Assign"
  input: "^conv2/bias/Adam/Assign"
  input: "^conv2/bias/Adam_1/Assign"
  input: "^dense/weight/Adam/Assign"
  input: "^dense/weight/Adam_1/Assign"
  input: "^dense/bias/Adam/Assign"
  input: "^dense/bias/Adam_1/Assign"
  input: "^output/weight/Adam/Assign"
  input: "^output/weight/Adam_1/Assign"
  input: "^output/bias/Adam/Assign"
  input: "^output/bias/Adam_1/Assign"
}
node {
  name: "init_145"
  op: "NoOp"
}
node {
  name: "group_deps_72"
  op: "NoOp"
  input: "^init_144"
  input: "^init_145"
}
node {
  name: "filenames_72"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
      }
    }
  }
}
node {
  name: "compression_type_72"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "buffer_size_72"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 10000
      }
    }
  }
}
node {
  name: "seed_72"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "seed2_72"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "count_72"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "OneShotIterator_72"
  op: "OneShotIterator"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dataset_factory"
    value {
      func {
        name: "_make_dataset_60ad243e"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "IteratorGetNext_72"
  op: "IteratorGetNext"
  input: "OneShotIterator_72"
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
}
node {
  name: "init_146"
  op: "NoOp"
  input: "^conv1/weight/Assign"
  input: "^conv1/bias/Assign"
  input: "^conv2/weight/Assign"
  input: "^conv2/bias/Assign"
  input: "^dense/weight/Assign"
  input: "^dense/bias/Assign"
  input: "^output/weight/Assign"
  input: "^output/bias/Assign"
  input: "^adam_optimizer/beta1_power/Assign"
  input: "^adam_optimizer/beta2_power/Assign"
  input: "^conv1/weight/Adam/Assign"
  input: "^conv1/weight/Adam_1/Assign"
  input: "^conv1/bias/Adam/Assign"
  input: "^conv1/bias/Adam_1/Assign"
  input: "^conv2/weight/Adam/Assign"
  input: "^conv2/weight/Adam_1/Assign"
  input: "^conv2/bias/Adam/Assign"
  input: "^conv2/bias/Adam_1/Assign"
  input: "^dense/weight/Adam/Assign"
  input: "^dense/weight/Adam_1/Assign"
  input: "^dense/bias/Adam/Assign"
  input: "^dense/bias/Adam_1/Assign"
  input: "^output/weight/Adam/Assign"
  input: "^output/weight/Adam_1/Assign"
  input: "^output/bias/Adam/Assign"
  input: "^output/bias/Adam_1/Assign"
}
node {
  name: "init_147"
  op: "NoOp"
}
node {
  name: "group_deps_73"
  op: "NoOp"
  input: "^init_146"
  input: "^init_147"
}
node {
  name: "filenames_73"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
      }
    }
  }
}
node {
  name: "compression_type_73"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "buffer_size_73"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 10000
      }
    }
  }
}
node {
  name: "seed_73"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "seed2_73"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "count_73"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "OneShotIterator_73"
  op: "OneShotIterator"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dataset_factory"
    value {
      func {
        name: "_make_dataset_55b0acd8"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "IteratorGetNext_73"
  op: "IteratorGetNext"
  input: "OneShotIterator_73"
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
}
node {
  name: "init_148"
  op: "NoOp"
  input: "^conv1/weight/Assign"
  input: "^conv1/bias/Assign"
  input: "^conv2/weight/Assign"
  input: "^conv2/bias/Assign"
  input: "^dense/weight/Assign"
  input: "^dense/bias/Assign"
  input: "^output/weight/Assign"
  input: "^output/bias/Assign"
  input: "^adam_optimizer/beta1_power/Assign"
  input: "^adam_optimizer/beta2_power/Assign"
  input: "^conv1/weight/Adam/Assign"
  input: "^conv1/weight/Adam_1/Assign"
  input: "^conv1/bias/Adam/Assign"
  input: "^conv1/bias/Adam_1/Assign"
  input: "^conv2/weight/Adam/Assign"
  input: "^conv2/weight/Adam_1/Assign"
  input: "^conv2/bias/Adam/Assign"
  input: "^conv2/bias/Adam_1/Assign"
  input: "^dense/weight/Adam/Assign"
  input: "^dense/weight/Adam_1/Assign"
  input: "^dense/bias/Adam/Assign"
  input: "^dense/bias/Adam_1/Assign"
  input: "^output/weight/Adam/Assign"
  input: "^output/weight/Adam_1/Assign"
  input: "^output/bias/Adam/Assign"
  input: "^output/bias/Adam_1/Assign"
}
node {
  name: "init_149"
  op: "NoOp"
}
node {
  name: "group_deps_74"
  op: "NoOp"
  input: "^init_148"
  input: "^init_149"
}
node {
  name: "filenames_74"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
      }
    }
  }
}
node {
  name: "compression_type_74"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "buffer_size_74"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 10000
      }
    }
  }
}
node {
  name: "seed_74"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "seed2_74"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "count_74"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "OneShotIterator_74"
  op: "OneShotIterator"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dataset_factory"
    value {
      func {
        name: "_make_dataset_c4f399db"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "IteratorGetNext_74"
  op: "IteratorGetNext"
  input: "OneShotIterator_74"
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
}
node {
  name: "init_150"
  op: "NoOp"
  input: "^conv1/weight/Assign"
  input: "^conv1/bias/Assign"
  input: "^conv2/weight/Assign"
  input: "^conv2/bias/Assign"
  input: "^dense/weight/Assign"
  input: "^dense/bias/Assign"
  input: "^output/weight/Assign"
  input: "^output/bias/Assign"
  input: "^adam_optimizer/beta1_power/Assign"
  input: "^adam_optimizer/beta2_power/Assign"
  input: "^conv1/weight/Adam/Assign"
  input: "^conv1/weight/Adam_1/Assign"
  input: "^conv1/bias/Adam/Assign"
  input: "^conv1/bias/Adam_1/Assign"
  input: "^conv2/weight/Adam/Assign"
  input: "^conv2/weight/Adam_1/Assign"
  input: "^conv2/bias/Adam/Assign"
  input: "^conv2/bias/Adam_1/Assign"
  input: "^dense/weight/Adam/Assign"
  input: "^dense/weight/Adam_1/Assign"
  input: "^dense/bias/Adam/Assign"
  input: "^dense/bias/Adam_1/Assign"
  input: "^output/weight/Adam/Assign"
  input: "^output/weight/Adam_1/Assign"
  input: "^output/bias/Adam/Assign"
  input: "^output/bias/Adam_1/Assign"
}
node {
  name: "init_151"
  op: "NoOp"
}
node {
  name: "group_deps_75"
  op: "NoOp"
  input: "^init_150"
  input: "^init_151"
}
node {
  name: "filenames_75"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
      }
    }
  }
}
node {
  name: "compression_type_75"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "buffer_size_75"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 10000
      }
    }
  }
}
node {
  name: "seed_75"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "seed2_75"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "count_75"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "OneShotIterator_75"
  op: "OneShotIterator"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dataset_factory"
    value {
      func {
        name: "_make_dataset_daefaee5"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "IteratorGetNext_75"
  op: "IteratorGetNext"
  input: "OneShotIterator_75"
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
}
node {
  name: "init_152"
  op: "NoOp"
  input: "^conv1/weight/Assign"
  input: "^conv1/bias/Assign"
  input: "^conv2/weight/Assign"
  input: "^conv2/bias/Assign"
  input: "^dense/weight/Assign"
  input: "^dense/bias/Assign"
  input: "^output/weight/Assign"
  input: "^output/bias/Assign"
  input: "^adam_optimizer/beta1_power/Assign"
  input: "^adam_optimizer/beta2_power/Assign"
  input: "^conv1/weight/Adam/Assign"
  input: "^conv1/weight/Adam_1/Assign"
  input: "^conv1/bias/Adam/Assign"
  input: "^conv1/bias/Adam_1/Assign"
  input: "^conv2/weight/Adam/Assign"
  input: "^conv2/weight/Adam_1/Assign"
  input: "^conv2/bias/Adam/Assign"
  input: "^conv2/bias/Adam_1/Assign"
  input: "^dense/weight/Adam/Assign"
  input: "^dense/weight/Adam_1/Assign"
  input: "^dense/bias/Adam/Assign"
  input: "^dense/bias/Adam_1/Assign"
  input: "^output/weight/Adam/Assign"
  input: "^output/weight/Adam_1/Assign"
  input: "^output/bias/Adam/Assign"
  input: "^output/bias/Adam_1/Assign"
}
node {
  name: "init_153"
  op: "NoOp"
}
node {
  name: "group_deps_76"
  op: "NoOp"
  input: "^init_152"
  input: "^init_153"
}
node {
  name: "filenames_76"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
      }
    }
  }
}
node {
  name: "compression_type_76"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "buffer_size_76"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 10000
      }
    }
  }
}
node {
  name: "seed_76"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "seed2_76"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "count_76"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "OneShotIterator_76"
  op: "OneShotIterator"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dataset_factory"
    value {
      func {
        name: "_make_dataset_9871388b"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "IteratorGetNext_76"
  op: "IteratorGetNext"
  input: "OneShotIterator_76"
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
          dim {
            size: 70
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_INT32
      }
    }
  }
}
node {
  name: "init_154"
  op: "NoOp"
  input: "^conv1/weight/Assign"
  input: "^conv1/bias/Assign"
  input: "^conv2/weight/Assign"
  input: "^conv2/bias/Assign"
  input: "^dense/weight/Assign"
  input: "^dense/bias/Assign"
  input: "^output/weight/Assign"
  input: "^output/bias/Assign"
  input: "^adam_optimizer/beta1_power/Assign"
  input: "^adam_optimizer/beta2_power/Assign"
  input: "^conv1/weight/Adam/Assign"
  input: "^conv1/weight/Adam_1/Assign"
  input: "^conv1/bias/Adam/Assign"
  input: "^conv1/bias/Adam_1/Assign"
  input: "^conv2/weight/Adam/Assign"
  input: "^conv2/weight/Adam_1/Assign"
  input: "^conv2/bias/Adam/Assign"
  input: "^conv2/bias/Adam_1/Assign"
  input: "^dense/weight/Adam/Assign"
  input: "^dense/weight/Adam_1/Assign"
  input: "^dense/bias/Adam/Assign"
  input: "^dense/bias/Adam_1/Assign"
  input: "^output/weight/Adam/Assign"
  input: "^output/weight/Adam_1/Assign"
  input: "^output/bias/Adam/Assign"
  input: "^output/bias/Adam_1/Assign"
}
node {
  name: "init_155"
  op: "NoOp"
}
node {
  name: "group_deps_77"
  op: "NoOp"
  input: "^init_154"
  input: "^init_155"
}
library {
  function {
    signature {
      name: "_make_dataset_49d1984c"
      output_arg {
        name: "BatchDataset"
        type: DT_RESOURCE
      }
    }
    node_def {
      name: "TFRecordDataset/filenames_61"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset/compression_type_61"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: ""
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset"
      op: "TFRecordDataset"
      input: "TFRecordDataset/filenames_61:output:0"
      input: "TFRecordDataset/compression_type_61:output:0"
    }
    node_def {
      name: "MapDataset"
      op: "MapDataset"
      input: "TFRecordDataset:handle:0"
      attr {
        key: "Targuments"
        value {
          list {
          }
        }
      }
      attr {
        key: "f"
        value {
          func {
            name: "tf_map_func_1c539d92"
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/buffer_size_61"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 10000
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed_61"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed2_61"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset"
      op: "ShuffleDataset"
      input: "MapDataset:handle:0"
      input: "ShuffleDataset/buffer_size_61:output:0"
      input: "ShuffleDataset/seed_61:output:0"
      input: "ShuffleDataset/seed2_61:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset/count_61"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: -1
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset"
      op: "RepeatDataset"
      input: "ShuffleDataset:handle:0"
      input: "RepeatDataset/count_61:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "BatchDataset/batch_size"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 50
          }
        }
      }
    }
    node_def {
      name: "BatchDataset"
      op: "BatchDataset"
      input: "RepeatDataset:handle:0"
      input: "BatchDataset/batch_size:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    ret {
      key: "BatchDataset"
      value: "BatchDataset:handle:0"
    }
  }
  function {
    signature {
      name: "_make_dataset_7c4ac3e4"
      output_arg {
        name: "BatchDataset"
        type: DT_RESOURCE
      }
    }
    node_def {
      name: "TFRecordDataset/filenames_53"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset/compression_type_53"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: ""
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset"
      op: "TFRecordDataset"
      input: "TFRecordDataset/filenames_53:output:0"
      input: "TFRecordDataset/compression_type_53:output:0"
    }
    node_def {
      name: "MapDataset"
      op: "MapDataset"
      input: "TFRecordDataset:handle:0"
      attr {
        key: "Targuments"
        value {
          list {
          }
        }
      }
      attr {
        key: "f"
        value {
          func {
            name: "tf_map_func_1c539d92"
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/buffer_size_53"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 10000
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed_53"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed2_53"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset"
      op: "ShuffleDataset"
      input: "MapDataset:handle:0"
      input: "ShuffleDataset/buffer_size_53:output:0"
      input: "ShuffleDataset/seed_53:output:0"
      input: "ShuffleDataset/seed2_53:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset/count_53"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: -1
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset"
      op: "RepeatDataset"
      input: "ShuffleDataset:handle:0"
      input: "RepeatDataset/count_53:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "BatchDataset/batch_size"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 50
          }
        }
      }
    }
    node_def {
      name: "BatchDataset"
      op: "BatchDataset"
      input: "RepeatDataset:handle:0"
      input: "BatchDataset/batch_size:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    ret {
      key: "BatchDataset"
      value: "BatchDataset:handle:0"
    }
  }
  function {
    signature {
      name: "_make_dataset_50d25e02"
      output_arg {
        name: "BatchDataset"
        type: DT_RESOURCE
      }
    }
    node_def {
      name: "TFRecordDataset/filenames_9"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset/compression_type_9"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: ""
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset"
      op: "TFRecordDataset"
      input: "TFRecordDataset/filenames_9:output:0"
      input: "TFRecordDataset/compression_type_9:output:0"
    }
    node_def {
      name: "MapDataset"
      op: "MapDataset"
      input: "TFRecordDataset:handle:0"
      attr {
        key: "Targuments"
        value {
          list {
          }
        }
      }
      attr {
        key: "f"
        value {
          func {
            name: "tf_map_func_1c539d92"
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/buffer_size_9"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 10000
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed_9"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed2_9"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset"
      op: "ShuffleDataset"
      input: "MapDataset:handle:0"
      input: "ShuffleDataset/buffer_size_9:output:0"
      input: "ShuffleDataset/seed_9:output:0"
      input: "ShuffleDataset/seed2_9:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset/count_9"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: -1
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset"
      op: "RepeatDataset"
      input: "ShuffleDataset:handle:0"
      input: "RepeatDataset/count_9:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "BatchDataset/batch_size"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 50
          }
        }
      }
    }
    node_def {
      name: "BatchDataset"
      op: "BatchDataset"
      input: "RepeatDataset:handle:0"
      input: "BatchDataset/batch_size:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    ret {
      key: "BatchDataset"
      value: "BatchDataset:handle:0"
    }
  }
  function {
    signature {
      name: "_make_dataset_c4f399db"
      output_arg {
        name: "BatchDataset"
        type: DT_RESOURCE
      }
    }
    node_def {
      name: "TFRecordDataset/filenames_74"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset/compression_type_74"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: ""
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset"
      op: "TFRecordDataset"
      input: "TFRecordDataset/filenames_74:output:0"
      input: "TFRecordDataset/compression_type_74:output:0"
    }
    node_def {
      name: "MapDataset"
      op: "MapDataset"
      input: "TFRecordDataset:handle:0"
      attr {
        key: "Targuments"
        value {
          list {
          }
        }
      }
      attr {
        key: "f"
        value {
          func {
            name: "tf_map_func_1c539d92"
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/buffer_size_74"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 10000
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed_74"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed2_74"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset"
      op: "ShuffleDataset"
      input: "MapDataset:handle:0"
      input: "ShuffleDataset/buffer_size_74:output:0"
      input: "ShuffleDataset/seed_74:output:0"
      input: "ShuffleDataset/seed2_74:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset/count_74"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: -1
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset"
      op: "RepeatDataset"
      input: "ShuffleDataset:handle:0"
      input: "RepeatDataset/count_74:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "BatchDataset/batch_size"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 50
          }
        }
      }
    }
    node_def {
      name: "BatchDataset"
      op: "BatchDataset"
      input: "RepeatDataset:handle:0"
      input: "BatchDataset/batch_size:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    ret {
      key: "BatchDataset"
      value: "BatchDataset:handle:0"
    }
  }
  function {
    signature {
      name: "_make_dataset_9e30cc42"
      output_arg {
        name: "BatchDataset"
        type: DT_RESOURCE
      }
    }
    node_def {
      name: "TFRecordDataset/filenames_19"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset/compression_type_19"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: ""
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset"
      op: "TFRecordDataset"
      input: "TFRecordDataset/filenames_19:output:0"
      input: "TFRecordDataset/compression_type_19:output:0"
    }
    node_def {
      name: "MapDataset"
      op: "MapDataset"
      input: "TFRecordDataset:handle:0"
      attr {
        key: "Targuments"
        value {
          list {
          }
        }
      }
      attr {
        key: "f"
        value {
          func {
            name: "tf_map_func_1c539d92"
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/buffer_size_19"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 10000
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed_19"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed2_19"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset"
      op: "ShuffleDataset"
      input: "MapDataset:handle:0"
      input: "ShuffleDataset/buffer_size_19:output:0"
      input: "ShuffleDataset/seed_19:output:0"
      input: "ShuffleDataset/seed2_19:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset/count_19"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: -1
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset"
      op: "RepeatDataset"
      input: "ShuffleDataset:handle:0"
      input: "RepeatDataset/count_19:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "BatchDataset/batch_size"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 50
          }
        }
      }
    }
    node_def {
      name: "BatchDataset"
      op: "BatchDataset"
      input: "RepeatDataset:handle:0"
      input: "BatchDataset/batch_size:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    ret {
      key: "BatchDataset"
      value: "BatchDataset:handle:0"
    }
  }
  function {
    signature {
      name: "_make_dataset_d1fa266f"
      output_arg {
        name: "BatchDataset"
        type: DT_RESOURCE
      }
    }
    node_def {
      name: "TFRecordDataset/filenames_45"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset/compression_type_45"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: ""
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset"
      op: "TFRecordDataset"
      input: "TFRecordDataset/filenames_45:output:0"
      input: "TFRecordDataset/compression_type_45:output:0"
    }
    node_def {
      name: "MapDataset"
      op: "MapDataset"
      input: "TFRecordDataset:handle:0"
      attr {
        key: "Targuments"
        value {
          list {
          }
        }
      }
      attr {
        key: "f"
        value {
          func {
            name: "tf_map_func_1c539d92"
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/buffer_size_45"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 10000
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed_45"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed2_45"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset"
      op: "ShuffleDataset"
      input: "MapDataset:handle:0"
      input: "ShuffleDataset/buffer_size_45:output:0"
      input: "ShuffleDataset/seed_45:output:0"
      input: "ShuffleDataset/seed2_45:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset/count_45"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: -1
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset"
      op: "RepeatDataset"
      input: "ShuffleDataset:handle:0"
      input: "RepeatDataset/count_45:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "BatchDataset/batch_size"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 50
          }
        }
      }
    }
    node_def {
      name: "BatchDataset"
      op: "BatchDataset"
      input: "RepeatDataset:handle:0"
      input: "BatchDataset/batch_size:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    ret {
      key: "BatchDataset"
      value: "BatchDataset:handle:0"
    }
  }
  function {
    signature {
      name: "_make_dataset_5b725d9b"
      output_arg {
        name: "BatchDataset"
        type: DT_RESOURCE
      }
    }
    node_def {
      name: "TFRecordDataset/filenames_33"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset/compression_type_33"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: ""
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset"
      op: "TFRecordDataset"
      input: "TFRecordDataset/filenames_33:output:0"
      input: "TFRecordDataset/compression_type_33:output:0"
    }
    node_def {
      name: "MapDataset"
      op: "MapDataset"
      input: "TFRecordDataset:handle:0"
      attr {
        key: "Targuments"
        value {
          list {
          }
        }
      }
      attr {
        key: "f"
        value {
          func {
            name: "tf_map_func_1c539d92"
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/buffer_size_33"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 10000
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed_33"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed2_33"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset"
      op: "ShuffleDataset"
      input: "MapDataset:handle:0"
      input: "ShuffleDataset/buffer_size_33:output:0"
      input: "ShuffleDataset/seed_33:output:0"
      input: "ShuffleDataset/seed2_33:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset/count_33"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: -1
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset"
      op: "RepeatDataset"
      input: "ShuffleDataset:handle:0"
      input: "RepeatDataset/count_33:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "BatchDataset/batch_size"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 50
          }
        }
      }
    }
    node_def {
      name: "BatchDataset"
      op: "BatchDataset"
      input: "RepeatDataset:handle:0"
      input: "BatchDataset/batch_size:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    ret {
      key: "BatchDataset"
      value: "BatchDataset:handle:0"
    }
  }
  function {
    signature {
      name: "_make_dataset_f30ea204"
      output_arg {
        name: "BatchDataset"
        type: DT_RESOURCE
      }
    }
    node_def {
      name: "TFRecordDataset/filenames_59"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset/compression_type_59"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: ""
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset"
      op: "TFRecordDataset"
      input: "TFRecordDataset/filenames_59:output:0"
      input: "TFRecordDataset/compression_type_59:output:0"
    }
    node_def {
      name: "MapDataset"
      op: "MapDataset"
      input: "TFRecordDataset:handle:0"
      attr {
        key: "Targuments"
        value {
          list {
          }
        }
      }
      attr {
        key: "f"
        value {
          func {
            name: "tf_map_func_1c539d92"
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/buffer_size_59"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 10000
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed_59"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed2_59"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset"
      op: "ShuffleDataset"
      input: "MapDataset:handle:0"
      input: "ShuffleDataset/buffer_size_59:output:0"
      input: "ShuffleDataset/seed_59:output:0"
      input: "ShuffleDataset/seed2_59:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset/count_59"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: -1
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset"
      op: "RepeatDataset"
      input: "ShuffleDataset:handle:0"
      input: "RepeatDataset/count_59:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "BatchDataset/batch_size"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 50
          }
        }
      }
    }
    node_def {
      name: "BatchDataset"
      op: "BatchDataset"
      input: "RepeatDataset:handle:0"
      input: "BatchDataset/batch_size:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    ret {
      key: "BatchDataset"
      value: "BatchDataset:handle:0"
    }
  }
  function {
    signature {
      name: "_make_dataset_7b142ebc"
      output_arg {
        name: "BatchDataset"
        type: DT_RESOURCE
      }
    }
    node_def {
      name: "TFRecordDataset/filenames_68"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset/compression_type_68"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: ""
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset"
      op: "TFRecordDataset"
      input: "TFRecordDataset/filenames_68:output:0"
      input: "TFRecordDataset/compression_type_68:output:0"
    }
    node_def {
      name: "MapDataset"
      op: "MapDataset"
      input: "TFRecordDataset:handle:0"
      attr {
        key: "Targuments"
        value {
          list {
          }
        }
      }
      attr {
        key: "f"
        value {
          func {
            name: "tf_map_func_1c539d92"
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/buffer_size_68"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 10000
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed_68"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed2_68"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset"
      op: "ShuffleDataset"
      input: "MapDataset:handle:0"
      input: "ShuffleDataset/buffer_size_68:output:0"
      input: "ShuffleDataset/seed_68:output:0"
      input: "ShuffleDataset/seed2_68:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset/count_68"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: -1
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset"
      op: "RepeatDataset"
      input: "ShuffleDataset:handle:0"
      input: "RepeatDataset/count_68:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "BatchDataset/batch_size"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 50
          }
        }
      }
    }
    node_def {
      name: "BatchDataset"
      op: "BatchDataset"
      input: "RepeatDataset:handle:0"
      input: "BatchDataset/batch_size:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    ret {
      key: "BatchDataset"
      value: "BatchDataset:handle:0"
    }
  }
  function {
    signature {
      name: "_make_dataset_e09a2aad"
      output_arg {
        name: "BatchDataset"
        type: DT_RESOURCE
      }
    }
    node_def {
      name: "TFRecordDataset/filenames_67"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset/compression_type_67"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: ""
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset"
      op: "TFRecordDataset"
      input: "TFRecordDataset/filenames_67:output:0"
      input: "TFRecordDataset/compression_type_67:output:0"
    }
    node_def {
      name: "MapDataset"
      op: "MapDataset"
      input: "TFRecordDataset:handle:0"
      attr {
        key: "Targuments"
        value {
          list {
          }
        }
      }
      attr {
        key: "f"
        value {
          func {
            name: "tf_map_func_1c539d92"
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/buffer_size_67"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 10000
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed_67"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed2_67"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset"
      op: "ShuffleDataset"
      input: "MapDataset:handle:0"
      input: "ShuffleDataset/buffer_size_67:output:0"
      input: "ShuffleDataset/seed_67:output:0"
      input: "ShuffleDataset/seed2_67:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset/count_67"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: -1
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset"
      op: "RepeatDataset"
      input: "ShuffleDataset:handle:0"
      input: "RepeatDataset/count_67:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "BatchDataset/batch_size"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 50
          }
        }
      }
    }
    node_def {
      name: "BatchDataset"
      op: "BatchDataset"
      input: "RepeatDataset:handle:0"
      input: "BatchDataset/batch_size:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    ret {
      key: "BatchDataset"
      value: "BatchDataset:handle:0"
    }
  }
  function {
    signature {
      name: "_make_dataset_a121f78a"
      output_arg {
        name: "BatchDataset"
        type: DT_RESOURCE
      }
    }
    node_def {
      name: "TFRecordDataset/filenames_6"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset/compression_type_6"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: ""
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset"
      op: "TFRecordDataset"
      input: "TFRecordDataset/filenames_6:output:0"
      input: "TFRecordDataset/compression_type_6:output:0"
    }
    node_def {
      name: "MapDataset"
      op: "MapDataset"
      input: "TFRecordDataset:handle:0"
      attr {
        key: "Targuments"
        value {
          list {
          }
        }
      }
      attr {
        key: "f"
        value {
          func {
            name: "tf_map_func_1c539d92"
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/buffer_size_6"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 10000
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed_6"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed2_6"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset"
      op: "ShuffleDataset"
      input: "MapDataset:handle:0"
      input: "ShuffleDataset/buffer_size_6:output:0"
      input: "ShuffleDataset/seed_6:output:0"
      input: "ShuffleDataset/seed2_6:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset/count_6"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: -1
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset"
      op: "RepeatDataset"
      input: "ShuffleDataset:handle:0"
      input: "RepeatDataset/count_6:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "BatchDataset/batch_size"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 50
          }
        }
      }
    }
    node_def {
      name: "BatchDataset"
      op: "BatchDataset"
      input: "RepeatDataset:handle:0"
      input: "BatchDataset/batch_size:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    ret {
      key: "BatchDataset"
      value: "BatchDataset:handle:0"
    }
  }
  function {
    signature {
      name: "_make_dataset_4a35a938"
      output_arg {
        name: "BatchDataset"
        type: DT_RESOURCE
      }
    }
    node_def {
      name: "TFRecordDataset/filenames_62"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset/compression_type_62"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: ""
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset"
      op: "TFRecordDataset"
      input: "TFRecordDataset/filenames_62:output:0"
      input: "TFRecordDataset/compression_type_62:output:0"
    }
    node_def {
      name: "MapDataset"
      op: "MapDataset"
      input: "TFRecordDataset:handle:0"
      attr {
        key: "Targuments"
        value {
          list {
          }
        }
      }
      attr {
        key: "f"
        value {
          func {
            name: "tf_map_func_1c539d92"
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/buffer_size_62"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 10000
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed_62"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed2_62"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset"
      op: "ShuffleDataset"
      input: "MapDataset:handle:0"
      input: "ShuffleDataset/buffer_size_62:output:0"
      input: "ShuffleDataset/seed_62:output:0"
      input: "ShuffleDataset/seed2_62:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset/count_62"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: -1
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset"
      op: "RepeatDataset"
      input: "ShuffleDataset:handle:0"
      input: "RepeatDataset/count_62:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "BatchDataset/batch_size"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 50
          }
        }
      }
    }
    node_def {
      name: "BatchDataset"
      op: "BatchDataset"
      input: "RepeatDataset:handle:0"
      input: "BatchDataset/batch_size:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    ret {
      key: "BatchDataset"
      value: "BatchDataset:handle:0"
    }
  }
  function {
    signature {
      name: "_make_dataset_8f84aee2"
      output_arg {
        name: "BatchDataset"
        type: DT_RESOURCE
      }
    }
    node_def {
      name: "TFRecordDataset/filenames_18"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset/compression_type_18"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: ""
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset"
      op: "TFRecordDataset"
      input: "TFRecordDataset/filenames_18:output:0"
      input: "TFRecordDataset/compression_type_18:output:0"
    }
    node_def {
      name: "MapDataset"
      op: "MapDataset"
      input: "TFRecordDataset:handle:0"
      attr {
        key: "Targuments"
        value {
          list {
          }
        }
      }
      attr {
        key: "f"
        value {
          func {
            name: "tf_map_func_1c539d92"
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/buffer_size_18"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 10000
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed_18"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed2_18"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset"
      op: "ShuffleDataset"
      input: "MapDataset:handle:0"
      input: "ShuffleDataset/buffer_size_18:output:0"
      input: "ShuffleDataset/seed_18:output:0"
      input: "ShuffleDataset/seed2_18:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset/count_18"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: -1
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset"
      op: "RepeatDataset"
      input: "ShuffleDataset:handle:0"
      input: "RepeatDataset/count_18:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "BatchDataset/batch_size"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 50
          }
        }
      }
    }
    node_def {
      name: "BatchDataset"
      op: "BatchDataset"
      input: "RepeatDataset:handle:0"
      input: "BatchDataset/batch_size:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    ret {
      key: "BatchDataset"
      value: "BatchDataset:handle:0"
    }
  }
  function {
    signature {
      name: "_make_dataset_5df3c43f"
      output_arg {
        name: "BatchDataset"
        type: DT_RESOURCE
      }
    }
    node_def {
      name: "TFRecordDataset/filenames_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset/compression_type_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: ""
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset"
      op: "TFRecordDataset"
      input: "TFRecordDataset/filenames_2:output:0"
      input: "TFRecordDataset/compression_type_2:output:0"
    }
    node_def {
      name: "MapDataset"
      op: "MapDataset"
      input: "TFRecordDataset:handle:0"
      attr {
        key: "Targuments"
        value {
          list {
          }
        }
      }
      attr {
        key: "f"
        value {
          func {
            name: "tf_map_func_1c539d92"
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/buffer_size_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 10000
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed2_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset"
      op: "ShuffleDataset"
      input: "MapDataset:handle:0"
      input: "ShuffleDataset/buffer_size_2:output:0"
      input: "ShuffleDataset/seed_2:output:0"
      input: "ShuffleDataset/seed2_2:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset/count_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: -1
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset"
      op: "RepeatDataset"
      input: "ShuffleDataset:handle:0"
      input: "RepeatDataset/count_2:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "BatchDataset/batch_size"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 50
          }
        }
      }
    }
    node_def {
      name: "BatchDataset"
      op: "BatchDataset"
      input: "RepeatDataset:handle:0"
      input: "BatchDataset/batch_size:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    ret {
      key: "BatchDataset"
      value: "BatchDataset:handle:0"
    }
  }
  function {
    signature {
      name: "_make_dataset_15282579"
      output_arg {
        name: "BatchDataset"
        type: DT_RESOURCE
      }
    }
    node_def {
      name: "TFRecordDataset/filenames_4"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset/compression_type_4"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: ""
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset"
      op: "TFRecordDataset"
      input: "TFRecordDataset/filenames_4:output:0"
      input: "TFRecordDataset/compression_type_4:output:0"
    }
    node_def {
      name: "MapDataset"
      op: "MapDataset"
      input: "TFRecordDataset:handle:0"
      attr {
        key: "Targuments"
        value {
          list {
          }
        }
      }
      attr {
        key: "f"
        value {
          func {
            name: "tf_map_func_1c539d92"
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/buffer_size_4"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 10000
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed_4"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed2_4"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset"
      op: "ShuffleDataset"
      input: "MapDataset:handle:0"
      input: "ShuffleDataset/buffer_size_4:output:0"
      input: "ShuffleDataset/seed_4:output:0"
      input: "ShuffleDataset/seed2_4:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset/count_4"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: -1
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset"
      op: "RepeatDataset"
      input: "ShuffleDataset:handle:0"
      input: "RepeatDataset/count_4:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "BatchDataset/batch_size"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 50
          }
        }
      }
    }
    node_def {
      name: "BatchDataset"
      op: "BatchDataset"
      input: "RepeatDataset:handle:0"
      input: "BatchDataset/batch_size:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    ret {
      key: "BatchDataset"
      value: "BatchDataset:handle:0"
    }
  }
  function {
    signature {
      name: "_make_dataset_968812d7"
      output_arg {
        name: "BatchDataset"
        type: DT_RESOURCE
      }
    }
    node_def {
      name: "TFRecordDataset/filenames_38"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset/compression_type_38"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: ""
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset"
      op: "TFRecordDataset"
      input: "TFRecordDataset/filenames_38:output:0"
      input: "TFRecordDataset/compression_type_38:output:0"
    }
    node_def {
      name: "MapDataset"
      op: "MapDataset"
      input: "TFRecordDataset:handle:0"
      attr {
        key: "Targuments"
        value {
          list {
          }
        }
      }
      attr {
        key: "f"
        value {
          func {
            name: "tf_map_func_1c539d92"
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/buffer_size_38"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 10000
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed_38"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed2_38"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset"
      op: "ShuffleDataset"
      input: "MapDataset:handle:0"
      input: "ShuffleDataset/buffer_size_38:output:0"
      input: "ShuffleDataset/seed_38:output:0"
      input: "ShuffleDataset/seed2_38:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset/count_38"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: -1
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset"
      op: "RepeatDataset"
      input: "ShuffleDataset:handle:0"
      input: "RepeatDataset/count_38:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "BatchDataset/batch_size"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 50
          }
        }
      }
    }
    node_def {
      name: "BatchDataset"
      op: "BatchDataset"
      input: "RepeatDataset:handle:0"
      input: "BatchDataset/batch_size:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    ret {
      key: "BatchDataset"
      value: "BatchDataset:handle:0"
    }
  }
  function {
    signature {
      name: "_make_dataset_b5cadf40"
      output_arg {
        name: "BatchDataset"
        type: DT_RESOURCE
      }
    }
    node_def {
      name: "TFRecordDataset/filenames_12"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset/compression_type_12"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: ""
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset"
      op: "TFRecordDataset"
      input: "TFRecordDataset/filenames_12:output:0"
      input: "TFRecordDataset/compression_type_12:output:0"
    }
    node_def {
      name: "MapDataset"
      op: "MapDataset"
      input: "TFRecordDataset:handle:0"
      attr {
        key: "Targuments"
        value {
          list {
          }
        }
      }
      attr {
        key: "f"
        value {
          func {
            name: "tf_map_func_1c539d92"
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/buffer_size_12"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 10000
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed_12"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed2_12"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset"
      op: "ShuffleDataset"
      input: "MapDataset:handle:0"
      input: "ShuffleDataset/buffer_size_12:output:0"
      input: "ShuffleDataset/seed_12:output:0"
      input: "ShuffleDataset/seed2_12:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset/count_12"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: -1
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset"
      op: "RepeatDataset"
      input: "ShuffleDataset:handle:0"
      input: "RepeatDataset/count_12:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "BatchDataset/batch_size"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 50
          }
        }
      }
    }
    node_def {
      name: "BatchDataset"
      op: "BatchDataset"
      input: "RepeatDataset:handle:0"
      input: "BatchDataset/batch_size:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    ret {
      key: "BatchDataset"
      value: "BatchDataset:handle:0"
    }
  }
  function {
    signature {
      name: "_make_dataset_a09faf70"
      output_arg {
        name: "BatchDataset"
        type: DT_RESOURCE
      }
    }
    node_def {
      name: "TFRecordDataset/filenames_55"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset/compression_type_55"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: ""
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset"
      op: "TFRecordDataset"
      input: "TFRecordDataset/filenames_55:output:0"
      input: "TFRecordDataset/compression_type_55:output:0"
    }
    node_def {
      name: "MapDataset"
      op: "MapDataset"
      input: "TFRecordDataset:handle:0"
      attr {
        key: "Targuments"
        value {
          list {
          }
        }
      }
      attr {
        key: "f"
        value {
          func {
            name: "tf_map_func_1c539d92"
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/buffer_size_55"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 10000
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed_55"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed2_55"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset"
      op: "ShuffleDataset"
      input: "MapDataset:handle:0"
      input: "ShuffleDataset/buffer_size_55:output:0"
      input: "ShuffleDataset/seed_55:output:0"
      input: "ShuffleDataset/seed2_55:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset/count_55"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: -1
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset"
      op: "RepeatDataset"
      input: "ShuffleDataset:handle:0"
      input: "RepeatDataset/count_55:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "BatchDataset/batch_size"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 50
          }
        }
      }
    }
    node_def {
      name: "BatchDataset"
      op: "BatchDataset"
      input: "RepeatDataset:handle:0"
      input: "BatchDataset/batch_size:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    ret {
      key: "BatchDataset"
      value: "BatchDataset:handle:0"
    }
  }
  function {
    signature {
      name: "_make_dataset_6466fdba"
      output_arg {
        name: "BatchDataset"
        type: DT_RESOURCE
      }
    }
    node_def {
      name: "TFRecordDataset/filenames_41"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset/compression_type_41"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: ""
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset"
      op: "TFRecordDataset"
      input: "TFRecordDataset/filenames_41:output:0"
      input: "TFRecordDataset/compression_type_41:output:0"
    }
    node_def {
      name: "MapDataset"
      op: "MapDataset"
      input: "TFRecordDataset:handle:0"
      attr {
        key: "Targuments"
        value {
          list {
          }
        }
      }
      attr {
        key: "f"
        value {
          func {
            name: "tf_map_func_1c539d92"
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/buffer_size_41"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 10000
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed_41"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed2_41"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset"
      op: "ShuffleDataset"
      input: "MapDataset:handle:0"
      input: "ShuffleDataset/buffer_size_41:output:0"
      input: "ShuffleDataset/seed_41:output:0"
      input: "ShuffleDataset/seed2_41:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset/count_41"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: -1
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset"
      op: "RepeatDataset"
      input: "ShuffleDataset:handle:0"
      input: "RepeatDataset/count_41:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "BatchDataset/batch_size"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 50
          }
        }
      }
    }
    node_def {
      name: "BatchDataset"
      op: "BatchDataset"
      input: "RepeatDataset:handle:0"
      input: "BatchDataset/batch_size:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    ret {
      key: "BatchDataset"
      value: "BatchDataset:handle:0"
    }
  }
  function {
    signature {
      name: "_make_dataset_65d8ed86"
      output_arg {
        name: "BatchDataset"
        type: DT_RESOURCE
      }
    }
    node_def {
      name: "TFRecordDataset/filenames_57"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset/compression_type_57"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: ""
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset"
      op: "TFRecordDataset"
      input: "TFRecordDataset/filenames_57:output:0"
      input: "TFRecordDataset/compression_type_57:output:0"
    }
    node_def {
      name: "MapDataset"
      op: "MapDataset"
      input: "TFRecordDataset:handle:0"
      attr {
        key: "Targuments"
        value {
          list {
          }
        }
      }
      attr {
        key: "f"
        value {
          func {
            name: "tf_map_func_1c539d92"
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/buffer_size_57"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 10000
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed_57"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed2_57"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset"
      op: "ShuffleDataset"
      input: "MapDataset:handle:0"
      input: "ShuffleDataset/buffer_size_57:output:0"
      input: "ShuffleDataset/seed_57:output:0"
      input: "ShuffleDataset/seed2_57:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset/count_57"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: -1
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset"
      op: "RepeatDataset"
      input: "ShuffleDataset:handle:0"
      input: "RepeatDataset/count_57:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "BatchDataset/batch_size"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 50
          }
        }
      }
    }
    node_def {
      name: "BatchDataset"
      op: "BatchDataset"
      input: "RepeatDataset:handle:0"
      input: "BatchDataset/batch_size:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    ret {
      key: "BatchDataset"
      value: "BatchDataset:handle:0"
    }
  }
  function {
    signature {
      name: "_make_dataset_9871388b"
      output_arg {
        name: "BatchDataset"
        type: DT_RESOURCE
      }
    }
    node_def {
      name: "TFRecordDataset/filenames_76"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset/compression_type_76"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: ""
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset"
      op: "TFRecordDataset"
      input: "TFRecordDataset/filenames_76:output:0"
      input: "TFRecordDataset/compression_type_76:output:0"
    }
    node_def {
      name: "MapDataset"
      op: "MapDataset"
      input: "TFRecordDataset:handle:0"
      attr {
        key: "Targuments"
        value {
          list {
          }
        }
      }
      attr {
        key: "f"
        value {
          func {
            name: "tf_map_func_1c539d92"
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/buffer_size_76"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 10000
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed_76"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed2_76"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset"
      op: "ShuffleDataset"
      input: "MapDataset:handle:0"
      input: "ShuffleDataset/buffer_size_76:output:0"
      input: "ShuffleDataset/seed_76:output:0"
      input: "ShuffleDataset/seed2_76:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset/count_76"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: -1
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset"
      op: "RepeatDataset"
      input: "ShuffleDataset:handle:0"
      input: "RepeatDataset/count_76:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "BatchDataset/batch_size"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 50
          }
        }
      }
    }
    node_def {
      name: "BatchDataset"
      op: "BatchDataset"
      input: "RepeatDataset:handle:0"
      input: "BatchDataset/batch_size:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    ret {
      key: "BatchDataset"
      value: "BatchDataset:handle:0"
    }
  }
  function {
    signature {
      name: "_make_dataset_43233022"
      output_arg {
        name: "BatchDataset"
        type: DT_RESOURCE
      }
    }
    node_def {
      name: "TFRecordDataset/filenames_46"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset/compression_type_46"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: ""
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset"
      op: "TFRecordDataset"
      input: "TFRecordDataset/filenames_46:output:0"
      input: "TFRecordDataset/compression_type_46:output:0"
    }
    node_def {
      name: "MapDataset"
      op: "MapDataset"
      input: "TFRecordDataset:handle:0"
      attr {
        key: "Targuments"
        value {
          list {
          }
        }
      }
      attr {
        key: "f"
        value {
          func {
            name: "tf_map_func_1c539d92"
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/buffer_size_46"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 10000
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed_46"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed2_46"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset"
      op: "ShuffleDataset"
      input: "MapDataset:handle:0"
      input: "ShuffleDataset/buffer_size_46:output:0"
      input: "ShuffleDataset/seed_46:output:0"
      input: "ShuffleDataset/seed2_46:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset/count_46"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: -1
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset"
      op: "RepeatDataset"
      input: "ShuffleDataset:handle:0"
      input: "RepeatDataset/count_46:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "BatchDataset/batch_size"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 50
          }
        }
      }
    }
    node_def {
      name: "BatchDataset"
      op: "BatchDataset"
      input: "RepeatDataset:handle:0"
      input: "BatchDataset/batch_size:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    ret {
      key: "BatchDataset"
      value: "BatchDataset:handle:0"
    }
  }
  function {
    signature {
      name: "_make_dataset_20ee02c1"
      output_arg {
        name: "BatchDataset"
        type: DT_RESOURCE
      }
    }
    node_def {
      name: "TFRecordDataset/filenames_16"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset/compression_type_16"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: ""
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset"
      op: "TFRecordDataset"
      input: "TFRecordDataset/filenames_16:output:0"
      input: "TFRecordDataset/compression_type_16:output:0"
    }
    node_def {
      name: "MapDataset"
      op: "MapDataset"
      input: "TFRecordDataset:handle:0"
      attr {
        key: "Targuments"
        value {
          list {
          }
        }
      }
      attr {
        key: "f"
        value {
          func {
            name: "tf_map_func_1c539d92"
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/buffer_size_16"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 10000
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed_16"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed2_16"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset"
      op: "ShuffleDataset"
      input: "MapDataset:handle:0"
      input: "ShuffleDataset/buffer_size_16:output:0"
      input: "ShuffleDataset/seed_16:output:0"
      input: "ShuffleDataset/seed2_16:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset/count_16"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: -1
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset"
      op: "RepeatDataset"
      input: "ShuffleDataset:handle:0"
      input: "RepeatDataset/count_16:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "BatchDataset/batch_size"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 50
          }
        }
      }
    }
    node_def {
      name: "BatchDataset"
      op: "BatchDataset"
      input: "RepeatDataset:handle:0"
      input: "BatchDataset/batch_size:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    ret {
      key: "BatchDataset"
      value: "BatchDataset:handle:0"
    }
  }
  function {
    signature {
      name: "_make_dataset_fcb8bb92"
      output_arg {
        name: "BatchDataset"
        type: DT_RESOURCE
      }
    }
    node_def {
      name: "TFRecordDataset/filenames_51"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset/compression_type_51"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: ""
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset"
      op: "TFRecordDataset"
      input: "TFRecordDataset/filenames_51:output:0"
      input: "TFRecordDataset/compression_type_51:output:0"
    }
    node_def {
      name: "MapDataset"
      op: "MapDataset"
      input: "TFRecordDataset:handle:0"
      attr {
        key: "Targuments"
        value {
          list {
          }
        }
      }
      attr {
        key: "f"
        value {
          func {
            name: "tf_map_func_1c539d92"
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/buffer_size_51"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 10000
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed_51"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed2_51"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset"
      op: "ShuffleDataset"
      input: "MapDataset:handle:0"
      input: "ShuffleDataset/buffer_size_51:output:0"
      input: "ShuffleDataset/seed_51:output:0"
      input: "ShuffleDataset/seed2_51:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset/count_51"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: -1
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset"
      op: "RepeatDataset"
      input: "ShuffleDataset:handle:0"
      input: "RepeatDataset/count_51:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "BatchDataset/batch_size"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 50
          }
        }
      }
    }
    node_def {
      name: "BatchDataset"
      op: "BatchDataset"
      input: "RepeatDataset:handle:0"
      input: "BatchDataset/batch_size:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    ret {
      key: "BatchDataset"
      value: "BatchDataset:handle:0"
    }
  }
  function {
    signature {
      name: "_make_dataset_55b0acd8"
      output_arg {
        name: "BatchDataset"
        type: DT_RESOURCE
      }
    }
    node_def {
      name: "TFRecordDataset/filenames_73"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset/compression_type_73"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: ""
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset"
      op: "TFRecordDataset"
      input: "TFRecordDataset/filenames_73:output:0"
      input: "TFRecordDataset/compression_type_73:output:0"
    }
    node_def {
      name: "MapDataset"
      op: "MapDataset"
      input: "TFRecordDataset:handle:0"
      attr {
        key: "Targuments"
        value {
          list {
          }
        }
      }
      attr {
        key: "f"
        value {
          func {
            name: "tf_map_func_1c539d92"
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/buffer_size_73"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 10000
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed_73"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed2_73"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset"
      op: "ShuffleDataset"
      input: "MapDataset:handle:0"
      input: "ShuffleDataset/buffer_size_73:output:0"
      input: "ShuffleDataset/seed_73:output:0"
      input: "ShuffleDataset/seed2_73:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset/count_73"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: -1
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset"
      op: "RepeatDataset"
      input: "ShuffleDataset:handle:0"
      input: "RepeatDataset/count_73:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "BatchDataset/batch_size"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 50
          }
        }
      }
    }
    node_def {
      name: "BatchDataset"
      op: "BatchDataset"
      input: "RepeatDataset:handle:0"
      input: "BatchDataset/batch_size:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    ret {
      key: "BatchDataset"
      value: "BatchDataset:handle:0"
    }
  }
  function {
    signature {
      name: "_make_dataset_bbd58a07"
      output_arg {
        name: "BatchDataset"
        type: DT_RESOURCE
      }
    }
    node_def {
      name: "TFRecordDataset/filenames_22"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset/compression_type_22"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: ""
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset"
      op: "TFRecordDataset"
      input: "TFRecordDataset/filenames_22:output:0"
      input: "TFRecordDataset/compression_type_22:output:0"
    }
    node_def {
      name: "MapDataset"
      op: "MapDataset"
      input: "TFRecordDataset:handle:0"
      attr {
        key: "Targuments"
        value {
          list {
          }
        }
      }
      attr {
        key: "f"
        value {
          func {
            name: "tf_map_func_1c539d92"
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/buffer_size_22"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 10000
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed_22"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed2_22"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset"
      op: "ShuffleDataset"
      input: "MapDataset:handle:0"
      input: "ShuffleDataset/buffer_size_22:output:0"
      input: "ShuffleDataset/seed_22:output:0"
      input: "ShuffleDataset/seed2_22:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset/count_22"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: -1
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset"
      op: "RepeatDataset"
      input: "ShuffleDataset:handle:0"
      input: "RepeatDataset/count_22:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "BatchDataset/batch_size"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 50
          }
        }
      }
    }
    node_def {
      name: "BatchDataset"
      op: "BatchDataset"
      input: "RepeatDataset:handle:0"
      input: "BatchDataset/batch_size:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    ret {
      key: "BatchDataset"
      value: "BatchDataset:handle:0"
    }
  }
  function {
    signature {
      name: "_make_dataset_8e12433b"
      output_arg {
        name: "BatchDataset"
        type: DT_RESOURCE
      }
    }
    node_def {
      name: "TFRecordDataset/filenames_60"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset/compression_type_60"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: ""
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset"
      op: "TFRecordDataset"
      input: "TFRecordDataset/filenames_60:output:0"
      input: "TFRecordDataset/compression_type_60:output:0"
    }
    node_def {
      name: "MapDataset"
      op: "MapDataset"
      input: "TFRecordDataset:handle:0"
      attr {
        key: "Targuments"
        value {
          list {
          }
        }
      }
      attr {
        key: "f"
        value {
          func {
            name: "tf_map_func_1c539d92"
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/buffer_size_60"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 10000
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed_60"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed2_60"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset"
      op: "ShuffleDataset"
      input: "MapDataset:handle:0"
      input: "ShuffleDataset/buffer_size_60:output:0"
      input: "ShuffleDataset/seed_60:output:0"
      input: "ShuffleDataset/seed2_60:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset/count_60"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: -1
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset"
      op: "RepeatDataset"
      input: "ShuffleDataset:handle:0"
      input: "RepeatDataset/count_60:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "BatchDataset/batch_size"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 50
          }
        }
      }
    }
    node_def {
      name: "BatchDataset"
      op: "BatchDataset"
      input: "RepeatDataset:handle:0"
      input: "BatchDataset/batch_size:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    ret {
      key: "BatchDataset"
      value: "BatchDataset:handle:0"
    }
  }
  function {
    signature {
      name: "_make_dataset_7482019a"
      output_arg {
        name: "BatchDataset"
        type: DT_RESOURCE
      }
    }
    node_def {
      name: "TFRecordDataset/filenames_10"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset/compression_type_10"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: ""
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset"
      op: "TFRecordDataset"
      input: "TFRecordDataset/filenames_10:output:0"
      input: "TFRecordDataset/compression_type_10:output:0"
    }
    node_def {
      name: "MapDataset"
      op: "MapDataset"
      input: "TFRecordDataset:handle:0"
      attr {
        key: "Targuments"
        value {
          list {
          }
        }
      }
      attr {
        key: "f"
        value {
          func {
            name: "tf_map_func_1c539d92"
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/buffer_size_10"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 10000
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed_10"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed2_10"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset"
      op: "ShuffleDataset"
      input: "MapDataset:handle:0"
      input: "ShuffleDataset/buffer_size_10:output:0"
      input: "ShuffleDataset/seed_10:output:0"
      input: "ShuffleDataset/seed2_10:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset/count_10"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: -1
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset"
      op: "RepeatDataset"
      input: "ShuffleDataset:handle:0"
      input: "RepeatDataset/count_10:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "BatchDataset/batch_size"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 50
          }
        }
      }
    }
    node_def {
      name: "BatchDataset"
      op: "BatchDataset"
      input: "RepeatDataset:handle:0"
      input: "BatchDataset/batch_size:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    ret {
      key: "BatchDataset"
      value: "BatchDataset:handle:0"
    }
  }
  function {
    signature {
      name: "_make_dataset_10e7a901"
      output_arg {
        name: "BatchDataset"
        type: DT_RESOURCE
      }
    }
    node_def {
      name: "TFRecordDataset/filenames_13"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset/compression_type_13"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: ""
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset"
      op: "TFRecordDataset"
      input: "TFRecordDataset/filenames_13:output:0"
      input: "TFRecordDataset/compression_type_13:output:0"
    }
    node_def {
      name: "MapDataset"
      op: "MapDataset"
      input: "TFRecordDataset:handle:0"
      attr {
        key: "Targuments"
        value {
          list {
          }
        }
      }
      attr {
        key: "f"
        value {
          func {
            name: "tf_map_func_1c539d92"
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/buffer_size_13"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 10000
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed_13"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed2_13"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset"
      op: "ShuffleDataset"
      input: "MapDataset:handle:0"
      input: "ShuffleDataset/buffer_size_13:output:0"
      input: "ShuffleDataset/seed_13:output:0"
      input: "ShuffleDataset/seed2_13:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset/count_13"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: -1
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset"
      op: "RepeatDataset"
      input: "ShuffleDataset:handle:0"
      input: "RepeatDataset/count_13:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "BatchDataset/batch_size"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 50
          }
        }
      }
    }
    node_def {
      name: "BatchDataset"
      op: "BatchDataset"
      input: "RepeatDataset:handle:0"
      input: "BatchDataset/batch_size:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    ret {
      key: "BatchDataset"
      value: "BatchDataset:handle:0"
    }
  }
  function {
    signature {
      name: "tf_map_func_1c539d92"
      input_arg {
        name: "arg0"
        type: DT_STRING
      }
      output_arg {
        name: "Reshape"
        type: DT_UINT8
      }
      output_arg {
        name: "Cast"
        type: DT_INT32
      }
      description: "A wrapper for Defun that facilitates shape inference."
    }
    node_def {
      name: "ParseSingleExample/ExpandDims/dim"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "ParseSingleExample/ExpandDims"
      op: "ExpandDims"
      input: "arg0"
      input: "ParseSingleExample/ExpandDims/dim:output:0"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "Tdim"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "ParseSingleExample/ParseExample/Const"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node_def {
      name: "ParseSingleExample/ParseExample/Const_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node_def {
      name: "ParseSingleExample/ParseExample/ParseExample/names"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node_def {
      name: "ParseSingleExample/ParseExample/ParseExample/dense_keys_0"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "train/image"
          }
        }
      }
    }
    node_def {
      name: "ParseSingleExample/ParseExample/ParseExample/dense_keys_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "train/label"
          }
        }
      }
    }
    node_def {
      name: "ParseSingleExample/ParseExample/ParseExample"
      op: "ParseExample"
      input: "ParseSingleExample/ExpandDims:output:0"
      input: "ParseSingleExample/ParseExample/ParseExample/names:output:0"
      input: "ParseSingleExample/ParseExample/ParseExample/dense_keys_0:output:0"
      input: "ParseSingleExample/ParseExample/ParseExample/dense_keys_1:output:0"
      input: "ParseSingleExample/ParseExample/Const:output:0"
      input: "ParseSingleExample/ParseExample/Const_1:output:0"
      attr {
        key: "Ndense"
        value {
          i: 2
        }
      }
      attr {
        key: "Nsparse"
        value {
          i: 0
        }
      }
      attr {
        key: "Tdense"
        value {
          list {
            type: DT_STRING
            type: DT_INT64
          }
        }
      }
      attr {
        key: "dense_shapes"
        value {
          list {
            shape {
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "sparse_types"
        value {
          list {
          }
        }
      }
    }
    node_def {
      name: "ParseSingleExample/Squeeze_train/image"
      op: "Squeeze"
      input: "ParseSingleExample/ParseExample/ParseExample:dense_values:0"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "squeeze_dims"
        value {
          list {
            i: 0
          }
        }
      }
    }
    node_def {
      name: "ParseSingleExample/Squeeze_train/label"
      op: "Squeeze"
      input: "ParseSingleExample/ParseExample/ParseExample:dense_values:1"
      attr {
        key: "T"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "squeeze_dims"
        value {
          list {
            i: 0
          }
        }
      }
    }
    node_def {
      name: "DecodeRaw"
      op: "DecodeRaw"
      input: "ParseSingleExample/Squeeze_train/image:output:0"
      attr {
        key: "little_endian"
        value {
          b: true
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_UINT8
        }
      }
    }
    node_def {
      name: "Cast"
      op: "Cast"
      input: "ParseSingleExample/Squeeze_train/label:output:0"
      attr {
        key: "DstT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT64
        }
      }
    }
    node_def {
      name: "Reshape/shape"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 3
              }
            }
            tensor_content: "\024\000\000\000F\000\000\000\003\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "Reshape"
      op: "Reshape"
      input: "DecodeRaw:output:0"
      input: "Reshape/shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_UINT8
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    ret {
      key: "Cast"
      value: "Cast:y:0"
    }
    ret {
      key: "Reshape"
      value: "Reshape:output:0"
    }
  }
  function {
    signature {
      name: "_make_dataset_3b8774cf"
      output_arg {
        name: "BatchDataset"
        type: DT_RESOURCE
      }
    }
    node_def {
      name: "TFRecordDataset/filenames_30"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset/compression_type_30"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: ""
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset"
      op: "TFRecordDataset"
      input: "TFRecordDataset/filenames_30:output:0"
      input: "TFRecordDataset/compression_type_30:output:0"
    }
    node_def {
      name: "MapDataset"
      op: "MapDataset"
      input: "TFRecordDataset:handle:0"
      attr {
        key: "Targuments"
        value {
          list {
          }
        }
      }
      attr {
        key: "f"
        value {
          func {
            name: "tf_map_func_1c539d92"
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/buffer_size_30"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 10000
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed_30"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed2_30"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset"
      op: "ShuffleDataset"
      input: "MapDataset:handle:0"
      input: "ShuffleDataset/buffer_size_30:output:0"
      input: "ShuffleDataset/seed_30:output:0"
      input: "ShuffleDataset/seed2_30:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset/count_30"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: -1
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset"
      op: "RepeatDataset"
      input: "ShuffleDataset:handle:0"
      input: "RepeatDataset/count_30:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "BatchDataset/batch_size"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 50
          }
        }
      }
    }
    node_def {
      name: "BatchDataset"
      op: "BatchDataset"
      input: "RepeatDataset:handle:0"
      input: "BatchDataset/batch_size:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    ret {
      key: "BatchDataset"
      value: "BatchDataset:handle:0"
    }
  }
  function {
    signature {
      name: "_make_dataset_54129f92"
      output_arg {
        name: "BatchDataset"
        type: DT_RESOURCE
      }
    }
    node_def {
      name: "TFRecordDataset/filenames_52"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset/compression_type_52"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: ""
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset"
      op: "TFRecordDataset"
      input: "TFRecordDataset/filenames_52:output:0"
      input: "TFRecordDataset/compression_type_52:output:0"
    }
    node_def {
      name: "MapDataset"
      op: "MapDataset"
      input: "TFRecordDataset:handle:0"
      attr {
        key: "Targuments"
        value {
          list {
          }
        }
      }
      attr {
        key: "f"
        value {
          func {
            name: "tf_map_func_1c539d92"
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/buffer_size_52"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 10000
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed_52"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed2_52"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset"
      op: "ShuffleDataset"
      input: "MapDataset:handle:0"
      input: "ShuffleDataset/buffer_size_52:output:0"
      input: "ShuffleDataset/seed_52:output:0"
      input: "ShuffleDataset/seed2_52:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset/count_52"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: -1
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset"
      op: "RepeatDataset"
      input: "ShuffleDataset:handle:0"
      input: "RepeatDataset/count_52:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "BatchDataset/batch_size"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 50
          }
        }
      }
    }
    node_def {
      name: "BatchDataset"
      op: "BatchDataset"
      input: "RepeatDataset:handle:0"
      input: "BatchDataset/batch_size:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    ret {
      key: "BatchDataset"
      value: "BatchDataset:handle:0"
    }
  }
  function {
    signature {
      name: "_make_dataset_daefaee5"
      output_arg {
        name: "BatchDataset"
        type: DT_RESOURCE
      }
    }
    node_def {
      name: "TFRecordDataset/filenames_75"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset/compression_type_75"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: ""
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset"
      op: "TFRecordDataset"
      input: "TFRecordDataset/filenames_75:output:0"
      input: "TFRecordDataset/compression_type_75:output:0"
    }
    node_def {
      name: "MapDataset"
      op: "MapDataset"
      input: "TFRecordDataset:handle:0"
      attr {
        key: "Targuments"
        value {
          list {
          }
        }
      }
      attr {
        key: "f"
        value {
          func {
            name: "tf_map_func_1c539d92"
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/buffer_size_75"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 10000
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed_75"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed2_75"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset"
      op: "ShuffleDataset"
      input: "MapDataset:handle:0"
      input: "ShuffleDataset/buffer_size_75:output:0"
      input: "ShuffleDataset/seed_75:output:0"
      input: "ShuffleDataset/seed2_75:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset/count_75"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: -1
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset"
      op: "RepeatDataset"
      input: "ShuffleDataset:handle:0"
      input: "RepeatDataset/count_75:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "BatchDataset/batch_size"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 50
          }
        }
      }
    }
    node_def {
      name: "BatchDataset"
      op: "BatchDataset"
      input: "RepeatDataset:handle:0"
      input: "BatchDataset/batch_size:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    ret {
      key: "BatchDataset"
      value: "BatchDataset:handle:0"
    }
  }
  function {
    signature {
      name: "_make_dataset_3d6ea077"
      output_arg {
        name: "BatchDataset"
        type: DT_RESOURCE
      }
    }
    node_def {
      name: "TFRecordDataset/filenames_35"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset/compression_type_35"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: ""
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset"
      op: "TFRecordDataset"
      input: "TFRecordDataset/filenames_35:output:0"
      input: "TFRecordDataset/compression_type_35:output:0"
    }
    node_def {
      name: "MapDataset"
      op: "MapDataset"
      input: "TFRecordDataset:handle:0"
      attr {
        key: "Targuments"
        value {
          list {
          }
        }
      }
      attr {
        key: "f"
        value {
          func {
            name: "tf_map_func_1c539d92"
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/buffer_size_35"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 10000
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed_35"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed2_35"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset"
      op: "ShuffleDataset"
      input: "MapDataset:handle:0"
      input: "ShuffleDataset/buffer_size_35:output:0"
      input: "ShuffleDataset/seed_35:output:0"
      input: "ShuffleDataset/seed2_35:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset/count_35"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: -1
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset"
      op: "RepeatDataset"
      input: "ShuffleDataset:handle:0"
      input: "RepeatDataset/count_35:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "BatchDataset/batch_size"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 50
          }
        }
      }
    }
    node_def {
      name: "BatchDataset"
      op: "BatchDataset"
      input: "RepeatDataset:handle:0"
      input: "BatchDataset/batch_size:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    ret {
      key: "BatchDataset"
      value: "BatchDataset:handle:0"
    }
  }
  function {
    signature {
      name: "_make_dataset_be888d2a"
      output_arg {
        name: "BatchDataset"
        type: DT_RESOURCE
      }
    }
    node_def {
      name: "TFRecordDataset/filenames_25"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset/compression_type_25"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: ""
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset"
      op: "TFRecordDataset"
      input: "TFRecordDataset/filenames_25:output:0"
      input: "TFRecordDataset/compression_type_25:output:0"
    }
    node_def {
      name: "MapDataset"
      op: "MapDataset"
      input: "TFRecordDataset:handle:0"
      attr {
        key: "Targuments"
        value {
          list {
          }
        }
      }
      attr {
        key: "f"
        value {
          func {
            name: "tf_map_func_1c539d92"
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/buffer_size_25"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 10000
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed_25"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed2_25"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset"
      op: "ShuffleDataset"
      input: "MapDataset:handle:0"
      input: "ShuffleDataset/buffer_size_25:output:0"
      input: "ShuffleDataset/seed_25:output:0"
      input: "ShuffleDataset/seed2_25:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset/count_25"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: -1
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset"
      op: "RepeatDataset"
      input: "ShuffleDataset:handle:0"
      input: "RepeatDataset/count_25:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "BatchDataset/batch_size"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 50
          }
        }
      }
    }
    node_def {
      name: "BatchDataset"
      op: "BatchDataset"
      input: "RepeatDataset:handle:0"
      input: "BatchDataset/batch_size:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    ret {
      key: "BatchDataset"
      value: "BatchDataset:handle:0"
    }
  }
  function {
    signature {
      name: "_make_dataset_fe0a0ebb"
      output_arg {
        name: "BatchDataset"
        type: DT_RESOURCE
      }
    }
    node_def {
      name: "TFRecordDataset/filenames_40"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset/compression_type_40"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: ""
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset"
      op: "TFRecordDataset"
      input: "TFRecordDataset/filenames_40:output:0"
      input: "TFRecordDataset/compression_type_40:output:0"
    }
    node_def {
      name: "MapDataset"
      op: "MapDataset"
      input: "TFRecordDataset:handle:0"
      attr {
        key: "Targuments"
        value {
          list {
          }
        }
      }
      attr {
        key: "f"
        value {
          func {
            name: "tf_map_func_1c539d92"
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/buffer_size_40"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 10000
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed_40"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed2_40"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset"
      op: "ShuffleDataset"
      input: "MapDataset:handle:0"
      input: "ShuffleDataset/buffer_size_40:output:0"
      input: "ShuffleDataset/seed_40:output:0"
      input: "ShuffleDataset/seed2_40:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset/count_40"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: -1
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset"
      op: "RepeatDataset"
      input: "ShuffleDataset:handle:0"
      input: "RepeatDataset/count_40:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "BatchDataset/batch_size"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 50
          }
        }
      }
    }
    node_def {
      name: "BatchDataset"
      op: "BatchDataset"
      input: "RepeatDataset:handle:0"
      input: "BatchDataset/batch_size:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    ret {
      key: "BatchDataset"
      value: "BatchDataset:handle:0"
    }
  }
  function {
    signature {
      name: "_make_dataset_8917fddd"
      output_arg {
        name: "BatchDataset"
        type: DT_RESOURCE
      }
    }
    node_def {
      name: "TFRecordDataset/filenames_28"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset/compression_type_28"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: ""
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset"
      op: "TFRecordDataset"
      input: "TFRecordDataset/filenames_28:output:0"
      input: "TFRecordDataset/compression_type_28:output:0"
    }
    node_def {
      name: "MapDataset"
      op: "MapDataset"
      input: "TFRecordDataset:handle:0"
      attr {
        key: "Targuments"
        value {
          list {
          }
        }
      }
      attr {
        key: "f"
        value {
          func {
            name: "tf_map_func_1c539d92"
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/buffer_size_28"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 10000
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed_28"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed2_28"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset"
      op: "ShuffleDataset"
      input: "MapDataset:handle:0"
      input: "ShuffleDataset/buffer_size_28:output:0"
      input: "ShuffleDataset/seed_28:output:0"
      input: "ShuffleDataset/seed2_28:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset/count_28"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: -1
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset"
      op: "RepeatDataset"
      input: "ShuffleDataset:handle:0"
      input: "RepeatDataset/count_28:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "BatchDataset/batch_size"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 50
          }
        }
      }
    }
    node_def {
      name: "BatchDataset"
      op: "BatchDataset"
      input: "RepeatDataset:handle:0"
      input: "BatchDataset/batch_size:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    ret {
      key: "BatchDataset"
      value: "BatchDataset:handle:0"
    }
  }
  function {
    signature {
      name: "_make_dataset_ddfb07b9"
      output_arg {
        name: "BatchDataset"
        type: DT_RESOURCE
      }
    }
    node_def {
      name: "TFRecordDataset/filenames_14"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset/compression_type_14"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: ""
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset"
      op: "TFRecordDataset"
      input: "TFRecordDataset/filenames_14:output:0"
      input: "TFRecordDataset/compression_type_14:output:0"
    }
    node_def {
      name: "MapDataset"
      op: "MapDataset"
      input: "TFRecordDataset:handle:0"
      attr {
        key: "Targuments"
        value {
          list {
          }
        }
      }
      attr {
        key: "f"
        value {
          func {
            name: "tf_map_func_1c539d92"
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/buffer_size_14"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 10000
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed_14"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed2_14"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset"
      op: "ShuffleDataset"
      input: "MapDataset:handle:0"
      input: "ShuffleDataset/buffer_size_14:output:0"
      input: "ShuffleDataset/seed_14:output:0"
      input: "ShuffleDataset/seed2_14:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset/count_14"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: -1
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset"
      op: "RepeatDataset"
      input: "ShuffleDataset:handle:0"
      input: "RepeatDataset/count_14:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "BatchDataset/batch_size"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 50
          }
        }
      }
    }
    node_def {
      name: "BatchDataset"
      op: "BatchDataset"
      input: "RepeatDataset:handle:0"
      input: "BatchDataset/batch_size:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    ret {
      key: "BatchDataset"
      value: "BatchDataset:handle:0"
    }
  }
  function {
    signature {
      name: "_make_dataset_5ad50476"
      output_arg {
        name: "BatchDataset"
        type: DT_RESOURCE
      }
    }
    node_def {
      name: "TFRecordDataset/filenames_26"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset/compression_type_26"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: ""
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset"
      op: "TFRecordDataset"
      input: "TFRecordDataset/filenames_26:output:0"
      input: "TFRecordDataset/compression_type_26:output:0"
    }
    node_def {
      name: "MapDataset"
      op: "MapDataset"
      input: "TFRecordDataset:handle:0"
      attr {
        key: "Targuments"
        value {
          list {
          }
        }
      }
      attr {
        key: "f"
        value {
          func {
            name: "tf_map_func_1c539d92"
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/buffer_size_26"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 10000
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed_26"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed2_26"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset"
      op: "ShuffleDataset"
      input: "MapDataset:handle:0"
      input: "ShuffleDataset/buffer_size_26:output:0"
      input: "ShuffleDataset/seed_26:output:0"
      input: "ShuffleDataset/seed2_26:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset/count_26"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: -1
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset"
      op: "RepeatDataset"
      input: "ShuffleDataset:handle:0"
      input: "RepeatDataset/count_26:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "BatchDataset/batch_size"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 50
          }
        }
      }
    }
    node_def {
      name: "BatchDataset"
      op: "BatchDataset"
      input: "RepeatDataset:handle:0"
      input: "BatchDataset/batch_size:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    ret {
      key: "BatchDataset"
      value: "BatchDataset:handle:0"
    }
  }
  function {
    signature {
      name: "_make_dataset_bd7c878b"
      output_arg {
        name: "BatchDataset"
        type: DT_RESOURCE
      }
    }
    node_def {
      name: "TFRecordDataset/filenames_36"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset/compression_type_36"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: ""
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset"
      op: "TFRecordDataset"
      input: "TFRecordDataset/filenames_36:output:0"
      input: "TFRecordDataset/compression_type_36:output:0"
    }
    node_def {
      name: "MapDataset"
      op: "MapDataset"
      input: "TFRecordDataset:handle:0"
      attr {
        key: "Targuments"
        value {
          list {
          }
        }
      }
      attr {
        key: "f"
        value {
          func {
            name: "tf_map_func_1c539d92"
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/buffer_size_36"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 10000
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed_36"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed2_36"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset"
      op: "ShuffleDataset"
      input: "MapDataset:handle:0"
      input: "ShuffleDataset/buffer_size_36:output:0"
      input: "ShuffleDataset/seed_36:output:0"
      input: "ShuffleDataset/seed2_36:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset/count_36"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: -1
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset"
      op: "RepeatDataset"
      input: "ShuffleDataset:handle:0"
      input: "RepeatDataset/count_36:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "BatchDataset/batch_size"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 50
          }
        }
      }
    }
    node_def {
      name: "BatchDataset"
      op: "BatchDataset"
      input: "RepeatDataset:handle:0"
      input: "BatchDataset/batch_size:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    ret {
      key: "BatchDataset"
      value: "BatchDataset:handle:0"
    }
  }
  function {
    signature {
      name: "_make_dataset_73321b54"
      output_arg {
        name: "BatchDataset"
        type: DT_RESOURCE
      }
    }
    node_def {
      name: "TFRecordDataset/filenames"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset/compression_type"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: ""
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset"
      op: "TFRecordDataset"
      input: "TFRecordDataset/filenames:output:0"
      input: "TFRecordDataset/compression_type:output:0"
    }
    node_def {
      name: "MapDataset"
      op: "MapDataset"
      input: "TFRecordDataset:handle:0"
      attr {
        key: "Targuments"
        value {
          list {
          }
        }
      }
      attr {
        key: "f"
        value {
          func {
            name: "tf_map_func_1c539d92"
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/buffer_size"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 10000
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset"
      op: "ShuffleDataset"
      input: "MapDataset:handle:0"
      input: "ShuffleDataset/buffer_size:output:0"
      input: "ShuffleDataset/seed:output:0"
      input: "ShuffleDataset/seed2:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset/count"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: -1
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset"
      op: "RepeatDataset"
      input: "ShuffleDataset:handle:0"
      input: "RepeatDataset/count:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "BatchDataset/batch_size"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 50
          }
        }
      }
    }
    node_def {
      name: "BatchDataset"
      op: "BatchDataset"
      input: "RepeatDataset:handle:0"
      input: "BatchDataset/batch_size:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    ret {
      key: "BatchDataset"
      value: "BatchDataset:handle:0"
    }
  }
  function {
    signature {
      name: "_make_dataset_25fe4941"
      output_arg {
        name: "BatchDataset"
        type: DT_RESOURCE
      }
    }
    node_def {
      name: "TFRecordDataset/filenames_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset/compression_type_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: ""
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset"
      op: "TFRecordDataset"
      input: "TFRecordDataset/filenames_1:output:0"
      input: "TFRecordDataset/compression_type_1:output:0"
    }
    node_def {
      name: "MapDataset"
      op: "MapDataset"
      input: "TFRecordDataset:handle:0"
      attr {
        key: "Targuments"
        value {
          list {
          }
        }
      }
      attr {
        key: "f"
        value {
          func {
            name: "tf_map_func_1c539d92"
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/buffer_size_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 10000
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed2_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset"
      op: "ShuffleDataset"
      input: "MapDataset:handle:0"
      input: "ShuffleDataset/buffer_size_1:output:0"
      input: "ShuffleDataset/seed_1:output:0"
      input: "ShuffleDataset/seed2_1:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset/count_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: -1
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset"
      op: "RepeatDataset"
      input: "ShuffleDataset:handle:0"
      input: "RepeatDataset/count_1:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "BatchDataset/batch_size"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 50
          }
        }
      }
    }
    node_def {
      name: "BatchDataset"
      op: "BatchDataset"
      input: "RepeatDataset:handle:0"
      input: "BatchDataset/batch_size:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    ret {
      key: "BatchDataset"
      value: "BatchDataset:handle:0"
    }
  }
  function {
    signature {
      name: "_make_dataset_df21f516"
      output_arg {
        name: "BatchDataset"
        type: DT_RESOURCE
      }
    }
    node_def {
      name: "TFRecordDataset/filenames_44"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset/compression_type_44"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: ""
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset"
      op: "TFRecordDataset"
      input: "TFRecordDataset/filenames_44:output:0"
      input: "TFRecordDataset/compression_type_44:output:0"
    }
    node_def {
      name: "MapDataset"
      op: "MapDataset"
      input: "TFRecordDataset:handle:0"
      attr {
        key: "Targuments"
        value {
          list {
          }
        }
      }
      attr {
        key: "f"
        value {
          func {
            name: "tf_map_func_1c539d92"
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/buffer_size_44"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 10000
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed_44"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed2_44"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset"
      op: "ShuffleDataset"
      input: "MapDataset:handle:0"
      input: "ShuffleDataset/buffer_size_44:output:0"
      input: "ShuffleDataset/seed_44:output:0"
      input: "ShuffleDataset/seed2_44:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset/count_44"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: -1
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset"
      op: "RepeatDataset"
      input: "ShuffleDataset:handle:0"
      input: "RepeatDataset/count_44:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "BatchDataset/batch_size"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 50
          }
        }
      }
    }
    node_def {
      name: "BatchDataset"
      op: "BatchDataset"
      input: "RepeatDataset:handle:0"
      input: "BatchDataset/batch_size:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    ret {
      key: "BatchDataset"
      value: "BatchDataset:handle:0"
    }
  }
  function {
    signature {
      name: "_make_dataset_da51847f"
      output_arg {
        name: "BatchDataset"
        type: DT_RESOURCE
      }
    }
    node_def {
      name: "TFRecordDataset/filenames_5"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset/compression_type_5"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: ""
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset"
      op: "TFRecordDataset"
      input: "TFRecordDataset/filenames_5:output:0"
      input: "TFRecordDataset/compression_type_5:output:0"
    }
    node_def {
      name: "MapDataset"
      op: "MapDataset"
      input: "TFRecordDataset:handle:0"
      attr {
        key: "Targuments"
        value {
          list {
          }
        }
      }
      attr {
        key: "f"
        value {
          func {
            name: "tf_map_func_1c539d92"
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/buffer_size_5"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 10000
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed_5"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed2_5"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset"
      op: "ShuffleDataset"
      input: "MapDataset:handle:0"
      input: "ShuffleDataset/buffer_size_5:output:0"
      input: "ShuffleDataset/seed_5:output:0"
      input: "ShuffleDataset/seed2_5:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset/count_5"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: -1
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset"
      op: "RepeatDataset"
      input: "ShuffleDataset:handle:0"
      input: "RepeatDataset/count_5:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "BatchDataset/batch_size"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 50
          }
        }
      }
    }
    node_def {
      name: "BatchDataset"
      op: "BatchDataset"
      input: "RepeatDataset:handle:0"
      input: "BatchDataset/batch_size:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    ret {
      key: "BatchDataset"
      value: "BatchDataset:handle:0"
    }
  }
  function {
    signature {
      name: "_make_dataset_136a545c"
      output_arg {
        name: "BatchDataset"
        type: DT_RESOURCE
      }
    }
    node_def {
      name: "TFRecordDataset/filenames_47"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset/compression_type_47"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: ""
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset"
      op: "TFRecordDataset"
      input: "TFRecordDataset/filenames_47:output:0"
      input: "TFRecordDataset/compression_type_47:output:0"
    }
    node_def {
      name: "MapDataset"
      op: "MapDataset"
      input: "TFRecordDataset:handle:0"
      attr {
        key: "Targuments"
        value {
          list {
          }
        }
      }
      attr {
        key: "f"
        value {
          func {
            name: "tf_map_func_1c539d92"
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/buffer_size_47"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 10000
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed_47"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed2_47"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset"
      op: "ShuffleDataset"
      input: "MapDataset:handle:0"
      input: "ShuffleDataset/buffer_size_47:output:0"
      input: "ShuffleDataset/seed_47:output:0"
      input: "ShuffleDataset/seed2_47:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset/count_47"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: -1
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset"
      op: "RepeatDataset"
      input: "ShuffleDataset:handle:0"
      input: "RepeatDataset/count_47:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "BatchDataset/batch_size"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 50
          }
        }
      }
    }
    node_def {
      name: "BatchDataset"
      op: "BatchDataset"
      input: "RepeatDataset:handle:0"
      input: "BatchDataset/batch_size:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    ret {
      key: "BatchDataset"
      value: "BatchDataset:handle:0"
    }
  }
  function {
    signature {
      name: "_make_dataset_ed5cae73"
      output_arg {
        name: "BatchDataset"
        type: DT_RESOURCE
      }
    }
    node_def {
      name: "TFRecordDataset/filenames_66"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset/compression_type_66"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: ""
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset"
      op: "TFRecordDataset"
      input: "TFRecordDataset/filenames_66:output:0"
      input: "TFRecordDataset/compression_type_66:output:0"
    }
    node_def {
      name: "MapDataset"
      op: "MapDataset"
      input: "TFRecordDataset:handle:0"
      attr {
        key: "Targuments"
        value {
          list {
          }
        }
      }
      attr {
        key: "f"
        value {
          func {
            name: "tf_map_func_1c539d92"
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/buffer_size_66"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 10000
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed_66"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed2_66"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset"
      op: "ShuffleDataset"
      input: "MapDataset:handle:0"
      input: "ShuffleDataset/buffer_size_66:output:0"
      input: "ShuffleDataset/seed_66:output:0"
      input: "ShuffleDataset/seed2_66:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset/count_66"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: -1
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset"
      op: "RepeatDataset"
      input: "ShuffleDataset:handle:0"
      input: "RepeatDataset/count_66:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "BatchDataset/batch_size"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 50
          }
        }
      }
    }
    node_def {
      name: "BatchDataset"
      op: "BatchDataset"
      input: "RepeatDataset:handle:0"
      input: "BatchDataset/batch_size:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    ret {
      key: "BatchDataset"
      value: "BatchDataset:handle:0"
    }
  }
  function {
    signature {
      name: "_make_dataset_e2eb9688"
      output_arg {
        name: "BatchDataset"
        type: DT_RESOURCE
      }
    }
    node_def {
      name: "TFRecordDataset/filenames_8"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset/compression_type_8"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: ""
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset"
      op: "TFRecordDataset"
      input: "TFRecordDataset/filenames_8:output:0"
      input: "TFRecordDataset/compression_type_8:output:0"
    }
    node_def {
      name: "MapDataset"
      op: "MapDataset"
      input: "TFRecordDataset:handle:0"
      attr {
        key: "Targuments"
        value {
          list {
          }
        }
      }
      attr {
        key: "f"
        value {
          func {
            name: "tf_map_func_1c539d92"
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/buffer_size_8"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 10000
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed_8"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed2_8"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset"
      op: "ShuffleDataset"
      input: "MapDataset:handle:0"
      input: "ShuffleDataset/buffer_size_8:output:0"
      input: "ShuffleDataset/seed_8:output:0"
      input: "ShuffleDataset/seed2_8:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset/count_8"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: -1
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset"
      op: "RepeatDataset"
      input: "ShuffleDataset:handle:0"
      input: "RepeatDataset/count_8:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "BatchDataset/batch_size"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 50
          }
        }
      }
    }
    node_def {
      name: "BatchDataset"
      op: "BatchDataset"
      input: "RepeatDataset:handle:0"
      input: "BatchDataset/batch_size:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    ret {
      key: "BatchDataset"
      value: "BatchDataset:handle:0"
    }
  }
  function {
    signature {
      name: "_make_dataset_6afdf9ca"
      output_arg {
        name: "BatchDataset"
        type: DT_RESOURCE
      }
    }
    node_def {
      name: "TFRecordDataset/filenames_29"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset/compression_type_29"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: ""
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset"
      op: "TFRecordDataset"
      input: "TFRecordDataset/filenames_29:output:0"
      input: "TFRecordDataset/compression_type_29:output:0"
    }
    node_def {
      name: "MapDataset"
      op: "MapDataset"
      input: "TFRecordDataset:handle:0"
      attr {
        key: "Targuments"
        value {
          list {
          }
        }
      }
      attr {
        key: "f"
        value {
          func {
            name: "tf_map_func_1c539d92"
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/buffer_size_29"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 10000
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed_29"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed2_29"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset"
      op: "ShuffleDataset"
      input: "MapDataset:handle:0"
      input: "ShuffleDataset/buffer_size_29:output:0"
      input: "ShuffleDataset/seed_29:output:0"
      input: "ShuffleDataset/seed2_29:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset/count_29"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: -1
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset"
      op: "RepeatDataset"
      input: "ShuffleDataset:handle:0"
      input: "RepeatDataset/count_29:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "BatchDataset/batch_size"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 50
          }
        }
      }
    }
    node_def {
      name: "BatchDataset"
      op: "BatchDataset"
      input: "RepeatDataset:handle:0"
      input: "BatchDataset/batch_size:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    ret {
      key: "BatchDataset"
      value: "BatchDataset:handle:0"
    }
  }
  function {
    signature {
      name: "_make_dataset_f7d61085"
      output_arg {
        name: "BatchDataset"
        type: DT_RESOURCE
      }
    }
    node_def {
      name: "TFRecordDataset/filenames_50"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset/compression_type_50"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: ""
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset"
      op: "TFRecordDataset"
      input: "TFRecordDataset/filenames_50:output:0"
      input: "TFRecordDataset/compression_type_50:output:0"
    }
    node_def {
      name: "MapDataset"
      op: "MapDataset"
      input: "TFRecordDataset:handle:0"
      attr {
        key: "Targuments"
        value {
          list {
          }
        }
      }
      attr {
        key: "f"
        value {
          func {
            name: "tf_map_func_1c539d92"
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/buffer_size_50"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 10000
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed_50"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed2_50"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset"
      op: "ShuffleDataset"
      input: "MapDataset:handle:0"
      input: "ShuffleDataset/buffer_size_50:output:0"
      input: "ShuffleDataset/seed_50:output:0"
      input: "ShuffleDataset/seed2_50:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset/count_50"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: -1
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset"
      op: "RepeatDataset"
      input: "ShuffleDataset:handle:0"
      input: "RepeatDataset/count_50:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "BatchDataset/batch_size"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 50
          }
        }
      }
    }
    node_def {
      name: "BatchDataset"
      op: "BatchDataset"
      input: "RepeatDataset:handle:0"
      input: "BatchDataset/batch_size:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    ret {
      key: "BatchDataset"
      value: "BatchDataset:handle:0"
    }
  }
  function {
    signature {
      name: "_make_dataset_464637a7"
      output_arg {
        name: "BatchDataset"
        type: DT_RESOURCE
      }
    }
    node_def {
      name: "TFRecordDataset/filenames_42"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset/compression_type_42"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: ""
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset"
      op: "TFRecordDataset"
      input: "TFRecordDataset/filenames_42:output:0"
      input: "TFRecordDataset/compression_type_42:output:0"
    }
    node_def {
      name: "MapDataset"
      op: "MapDataset"
      input: "TFRecordDataset:handle:0"
      attr {
        key: "Targuments"
        value {
          list {
          }
        }
      }
      attr {
        key: "f"
        value {
          func {
            name: "tf_map_func_1c539d92"
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/buffer_size_42"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 10000
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed_42"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed2_42"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset"
      op: "ShuffleDataset"
      input: "MapDataset:handle:0"
      input: "ShuffleDataset/buffer_size_42:output:0"
      input: "ShuffleDataset/seed_42:output:0"
      input: "ShuffleDataset/seed2_42:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset/count_42"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: -1
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset"
      op: "RepeatDataset"
      input: "ShuffleDataset:handle:0"
      input: "RepeatDataset/count_42:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "BatchDataset/batch_size"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 50
          }
        }
      }
    }
    node_def {
      name: "BatchDataset"
      op: "BatchDataset"
      input: "RepeatDataset:handle:0"
      input: "BatchDataset/batch_size:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    ret {
      key: "BatchDataset"
      value: "BatchDataset:handle:0"
    }
  }
  function {
    signature {
      name: "_make_dataset_08ab466c"
      output_arg {
        name: "BatchDataset"
        type: DT_RESOURCE
      }
    }
    node_def {
      name: "TFRecordDataset/filenames_20"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset/compression_type_20"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: ""
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset"
      op: "TFRecordDataset"
      input: "TFRecordDataset/filenames_20:output:0"
      input: "TFRecordDataset/compression_type_20:output:0"
    }
    node_def {
      name: "MapDataset"
      op: "MapDataset"
      input: "TFRecordDataset:handle:0"
      attr {
        key: "Targuments"
        value {
          list {
          }
        }
      }
      attr {
        key: "f"
        value {
          func {
            name: "tf_map_func_1c539d92"
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/buffer_size_20"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 10000
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed_20"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed2_20"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset"
      op: "ShuffleDataset"
      input: "MapDataset:handle:0"
      input: "ShuffleDataset/buffer_size_20:output:0"
      input: "ShuffleDataset/seed_20:output:0"
      input: "ShuffleDataset/seed2_20:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset/count_20"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: -1
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset"
      op: "RepeatDataset"
      input: "ShuffleDataset:handle:0"
      input: "RepeatDataset/count_20:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "BatchDataset/batch_size"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 50
          }
        }
      }
    }
    node_def {
      name: "BatchDataset"
      op: "BatchDataset"
      input: "RepeatDataset:handle:0"
      input: "BatchDataset/batch_size:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    ret {
      key: "BatchDataset"
      value: "BatchDataset:handle:0"
    }
  }
  function {
    signature {
      name: "_make_dataset_17047d1a"
      output_arg {
        name: "BatchDataset"
        type: DT_RESOURCE
      }
    }
    node_def {
      name: "TFRecordDataset/filenames_48"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset/compression_type_48"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: ""
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset"
      op: "TFRecordDataset"
      input: "TFRecordDataset/filenames_48:output:0"
      input: "TFRecordDataset/compression_type_48:output:0"
    }
    node_def {
      name: "MapDataset"
      op: "MapDataset"
      input: "TFRecordDataset:handle:0"
      attr {
        key: "Targuments"
        value {
          list {
          }
        }
      }
      attr {
        key: "f"
        value {
          func {
            name: "tf_map_func_1c539d92"
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/buffer_size_48"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 10000
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed_48"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed2_48"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset"
      op: "ShuffleDataset"
      input: "MapDataset:handle:0"
      input: "ShuffleDataset/buffer_size_48:output:0"
      input: "ShuffleDataset/seed_48:output:0"
      input: "ShuffleDataset/seed2_48:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset/count_48"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: -1
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset"
      op: "RepeatDataset"
      input: "ShuffleDataset:handle:0"
      input: "RepeatDataset/count_48:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "BatchDataset/batch_size"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 50
          }
        }
      }
    }
    node_def {
      name: "BatchDataset"
      op: "BatchDataset"
      input: "RepeatDataset:handle:0"
      input: "BatchDataset/batch_size:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    ret {
      key: "BatchDataset"
      value: "BatchDataset:handle:0"
    }
  }
  function {
    signature {
      name: "_make_dataset_260153e1"
      output_arg {
        name: "BatchDataset"
        type: DT_RESOURCE
      }
    }
    node_def {
      name: "TFRecordDataset/filenames_58"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset/compression_type_58"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: ""
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset"
      op: "TFRecordDataset"
      input: "TFRecordDataset/filenames_58:output:0"
      input: "TFRecordDataset/compression_type_58:output:0"
    }
    node_def {
      name: "MapDataset"
      op: "MapDataset"
      input: "TFRecordDataset:handle:0"
      attr {
        key: "Targuments"
        value {
          list {
          }
        }
      }
      attr {
        key: "f"
        value {
          func {
            name: "tf_map_func_1c539d92"
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/buffer_size_58"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 10000
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed_58"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed2_58"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset"
      op: "ShuffleDataset"
      input: "MapDataset:handle:0"
      input: "ShuffleDataset/buffer_size_58:output:0"
      input: "ShuffleDataset/seed_58:output:0"
      input: "ShuffleDataset/seed2_58:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset/count_58"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: -1
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset"
      op: "RepeatDataset"
      input: "ShuffleDataset:handle:0"
      input: "RepeatDataset/count_58:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "BatchDataset/batch_size"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 50
          }
        }
      }
    }
    node_def {
      name: "BatchDataset"
      op: "BatchDataset"
      input: "RepeatDataset:handle:0"
      input: "BatchDataset/batch_size:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    ret {
      key: "BatchDataset"
      value: "BatchDataset:handle:0"
    }
  }
  function {
    signature {
      name: "_make_dataset_375450ea"
      output_arg {
        name: "BatchDataset"
        type: DT_RESOURCE
      }
    }
    node_def {
      name: "TFRecordDataset/filenames_49"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset/compression_type_49"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: ""
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset"
      op: "TFRecordDataset"
      input: "TFRecordDataset/filenames_49:output:0"
      input: "TFRecordDataset/compression_type_49:output:0"
    }
    node_def {
      name: "MapDataset"
      op: "MapDataset"
      input: "TFRecordDataset:handle:0"
      attr {
        key: "Targuments"
        value {
          list {
          }
        }
      }
      attr {
        key: "f"
        value {
          func {
            name: "tf_map_func_1c539d92"
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/buffer_size_49"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 10000
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed_49"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed2_49"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset"
      op: "ShuffleDataset"
      input: "MapDataset:handle:0"
      input: "ShuffleDataset/buffer_size_49:output:0"
      input: "ShuffleDataset/seed_49:output:0"
      input: "ShuffleDataset/seed2_49:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset/count_49"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: -1
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset"
      op: "RepeatDataset"
      input: "ShuffleDataset:handle:0"
      input: "RepeatDataset/count_49:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "BatchDataset/batch_size"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 50
          }
        }
      }
    }
    node_def {
      name: "BatchDataset"
      op: "BatchDataset"
      input: "RepeatDataset:handle:0"
      input: "BatchDataset/batch_size:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    ret {
      key: "BatchDataset"
      value: "BatchDataset:handle:0"
    }
  }
  function {
    signature {
      name: "_make_dataset_d27c5142"
      output_arg {
        name: "BatchDataset"
        type: DT_RESOURCE
      }
    }
    node_def {
      name: "TFRecordDataset/filenames_17"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset/compression_type_17"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: ""
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset"
      op: "TFRecordDataset"
      input: "TFRecordDataset/filenames_17:output:0"
      input: "TFRecordDataset/compression_type_17:output:0"
    }
    node_def {
      name: "MapDataset"
      op: "MapDataset"
      input: "TFRecordDataset:handle:0"
      attr {
        key: "Targuments"
        value {
          list {
          }
        }
      }
      attr {
        key: "f"
        value {
          func {
            name: "tf_map_func_1c539d92"
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/buffer_size_17"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 10000
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed_17"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed2_17"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset"
      op: "ShuffleDataset"
      input: "MapDataset:handle:0"
      input: "ShuffleDataset/buffer_size_17:output:0"
      input: "ShuffleDataset/seed_17:output:0"
      input: "ShuffleDataset/seed2_17:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset/count_17"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: -1
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset"
      op: "RepeatDataset"
      input: "ShuffleDataset:handle:0"
      input: "RepeatDataset/count_17:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "BatchDataset/batch_size"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 50
          }
        }
      }
    }
    node_def {
      name: "BatchDataset"
      op: "BatchDataset"
      input: "RepeatDataset:handle:0"
      input: "BatchDataset/batch_size:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    ret {
      key: "BatchDataset"
      value: "BatchDataset:handle:0"
    }
  }
  function {
    signature {
      name: "_make_dataset_0e7e60c6"
      output_arg {
        name: "BatchDataset"
        type: DT_RESOURCE
      }
    }
    node_def {
      name: "TFRecordDataset/filenames_32"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset/compression_type_32"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: ""
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset"
      op: "TFRecordDataset"
      input: "TFRecordDataset/filenames_32:output:0"
      input: "TFRecordDataset/compression_type_32:output:0"
    }
    node_def {
      name: "MapDataset"
      op: "MapDataset"
      input: "TFRecordDataset:handle:0"
      attr {
        key: "Targuments"
        value {
          list {
          }
        }
      }
      attr {
        key: "f"
        value {
          func {
            name: "tf_map_func_1c539d92"
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/buffer_size_32"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 10000
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed_32"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed2_32"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset"
      op: "ShuffleDataset"
      input: "MapDataset:handle:0"
      input: "ShuffleDataset/buffer_size_32:output:0"
      input: "ShuffleDataset/seed_32:output:0"
      input: "ShuffleDataset/seed2_32:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset/count_32"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: -1
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset"
      op: "RepeatDataset"
      input: "ShuffleDataset:handle:0"
      input: "RepeatDataset/count_32:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "BatchDataset/batch_size"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 50
          }
        }
      }
    }
    node_def {
      name: "BatchDataset"
      op: "BatchDataset"
      input: "RepeatDataset:handle:0"
      input: "BatchDataset/batch_size:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    ret {
      key: "BatchDataset"
      value: "BatchDataset:handle:0"
    }
  }
  function {
    signature {
      name: "_make_dataset_02f6c029"
      output_arg {
        name: "BatchDataset"
        type: DT_RESOURCE
      }
    }
    node_def {
      name: "TFRecordDataset/filenames_24"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset/compression_type_24"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: ""
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset"
      op: "TFRecordDataset"
      input: "TFRecordDataset/filenames_24:output:0"
      input: "TFRecordDataset/compression_type_24:output:0"
    }
    node_def {
      name: "MapDataset"
      op: "MapDataset"
      input: "TFRecordDataset:handle:0"
      attr {
        key: "Targuments"
        value {
          list {
          }
        }
      }
      attr {
        key: "f"
        value {
          func {
            name: "tf_map_func_1c539d92"
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/buffer_size_24"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 10000
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed_24"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed2_24"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset"
      op: "ShuffleDataset"
      input: "MapDataset:handle:0"
      input: "ShuffleDataset/buffer_size_24:output:0"
      input: "ShuffleDataset/seed_24:output:0"
      input: "ShuffleDataset/seed2_24:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset/count_24"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: -1
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset"
      op: "RepeatDataset"
      input: "ShuffleDataset:handle:0"
      input: "RepeatDataset/count_24:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "BatchDataset/batch_size"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 50
          }
        }
      }
    }
    node_def {
      name: "BatchDataset"
      op: "BatchDataset"
      input: "RepeatDataset:handle:0"
      input: "BatchDataset/batch_size:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    ret {
      key: "BatchDataset"
      value: "BatchDataset:handle:0"
    }
  }
  function {
    signature {
      name: "_make_dataset_a0e2d541"
      output_arg {
        name: "BatchDataset"
        type: DT_RESOURCE
      }
    }
    node_def {
      name: "TFRecordDataset/filenames_23"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset/compression_type_23"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: ""
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset"
      op: "TFRecordDataset"
      input: "TFRecordDataset/filenames_23:output:0"
      input: "TFRecordDataset/compression_type_23:output:0"
    }
    node_def {
      name: "MapDataset"
      op: "MapDataset"
      input: "TFRecordDataset:handle:0"
      attr {
        key: "Targuments"
        value {
          list {
          }
        }
      }
      attr {
        key: "f"
        value {
          func {
            name: "tf_map_func_1c539d92"
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/buffer_size_23"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 10000
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed_23"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed2_23"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset"
      op: "ShuffleDataset"
      input: "MapDataset:handle:0"
      input: "ShuffleDataset/buffer_size_23:output:0"
      input: "ShuffleDataset/seed_23:output:0"
      input: "ShuffleDataset/seed2_23:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset/count_23"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: -1
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset"
      op: "RepeatDataset"
      input: "ShuffleDataset:handle:0"
      input: "RepeatDataset/count_23:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "BatchDataset/batch_size"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 50
          }
        }
      }
    }
    node_def {
      name: "BatchDataset"
      op: "BatchDataset"
      input: "RepeatDataset:handle:0"
      input: "BatchDataset/batch_size:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    ret {
      key: "BatchDataset"
      value: "BatchDataset:handle:0"
    }
  }
  function {
    signature {
      name: "_make_dataset_432ed112"
      output_arg {
        name: "BatchDataset"
        type: DT_RESOURCE
      }
    }
    node_def {
      name: "TFRecordDataset/filenames_69"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset/compression_type_69"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: ""
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset"
      op: "TFRecordDataset"
      input: "TFRecordDataset/filenames_69:output:0"
      input: "TFRecordDataset/compression_type_69:output:0"
    }
    node_def {
      name: "MapDataset"
      op: "MapDataset"
      input: "TFRecordDataset:handle:0"
      attr {
        key: "Targuments"
        value {
          list {
          }
        }
      }
      attr {
        key: "f"
        value {
          func {
            name: "tf_map_func_1c539d92"
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/buffer_size_69"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 10000
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed_69"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed2_69"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset"
      op: "ShuffleDataset"
      input: "MapDataset:handle:0"
      input: "ShuffleDataset/buffer_size_69:output:0"
      input: "ShuffleDataset/seed_69:output:0"
      input: "ShuffleDataset/seed2_69:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset/count_69"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: -1
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset"
      op: "RepeatDataset"
      input: "ShuffleDataset:handle:0"
      input: "RepeatDataset/count_69:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "BatchDataset/batch_size"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 50
          }
        }
      }
    }
    node_def {
      name: "BatchDataset"
      op: "BatchDataset"
      input: "RepeatDataset:handle:0"
      input: "BatchDataset/batch_size:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    ret {
      key: "BatchDataset"
      value: "BatchDataset:handle:0"
    }
  }
  function {
    signature {
      name: "_make_dataset_96c799d7"
      output_arg {
        name: "BatchDataset"
        type: DT_RESOURCE
      }
    }
    node_def {
      name: "TFRecordDataset/filenames_39"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset/compression_type_39"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: ""
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset"
      op: "TFRecordDataset"
      input: "TFRecordDataset/filenames_39:output:0"
      input: "TFRecordDataset/compression_type_39:output:0"
    }
    node_def {
      name: "MapDataset"
      op: "MapDataset"
      input: "TFRecordDataset:handle:0"
      attr {
        key: "Targuments"
        value {
          list {
          }
        }
      }
      attr {
        key: "f"
        value {
          func {
            name: "tf_map_func_1c539d92"
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/buffer_size_39"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 10000
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed_39"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed2_39"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset"
      op: "ShuffleDataset"
      input: "MapDataset:handle:0"
      input: "ShuffleDataset/buffer_size_39:output:0"
      input: "ShuffleDataset/seed_39:output:0"
      input: "ShuffleDataset/seed2_39:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset/count_39"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: -1
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset"
      op: "RepeatDataset"
      input: "ShuffleDataset:handle:0"
      input: "RepeatDataset/count_39:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "BatchDataset/batch_size"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 50
          }
        }
      }
    }
    node_def {
      name: "BatchDataset"
      op: "BatchDataset"
      input: "RepeatDataset:handle:0"
      input: "BatchDataset/batch_size:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    ret {
      key: "BatchDataset"
      value: "BatchDataset:handle:0"
    }
  }
  function {
    signature {
      name: "_make_dataset_e60c3697"
      output_arg {
        name: "BatchDataset"
        type: DT_RESOURCE
      }
    }
    node_def {
      name: "TFRecordDataset/filenames_56"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset/compression_type_56"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: ""
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset"
      op: "TFRecordDataset"
      input: "TFRecordDataset/filenames_56:output:0"
      input: "TFRecordDataset/compression_type_56:output:0"
    }
    node_def {
      name: "MapDataset"
      op: "MapDataset"
      input: "TFRecordDataset:handle:0"
      attr {
        key: "Targuments"
        value {
          list {
          }
        }
      }
      attr {
        key: "f"
        value {
          func {
            name: "tf_map_func_1c539d92"
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/buffer_size_56"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 10000
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed_56"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed2_56"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset"
      op: "ShuffleDataset"
      input: "MapDataset:handle:0"
      input: "ShuffleDataset/buffer_size_56:output:0"
      input: "ShuffleDataset/seed_56:output:0"
      input: "ShuffleDataset/seed2_56:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset/count_56"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: -1
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset"
      op: "RepeatDataset"
      input: "ShuffleDataset:handle:0"
      input: "RepeatDataset/count_56:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "BatchDataset/batch_size"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 50
          }
        }
      }
    }
    node_def {
      name: "BatchDataset"
      op: "BatchDataset"
      input: "RepeatDataset:handle:0"
      input: "BatchDataset/batch_size:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    ret {
      key: "BatchDataset"
      value: "BatchDataset:handle:0"
    }
  }
  function {
    signature {
      name: "_make_dataset_76800637"
      output_arg {
        name: "BatchDataset"
        type: DT_RESOURCE
      }
    }
    node_def {
      name: "TFRecordDataset/filenames_31"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset/compression_type_31"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: ""
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset"
      op: "TFRecordDataset"
      input: "TFRecordDataset/filenames_31:output:0"
      input: "TFRecordDataset/compression_type_31:output:0"
    }
    node_def {
      name: "MapDataset"
      op: "MapDataset"
      input: "TFRecordDataset:handle:0"
      attr {
        key: "Targuments"
        value {
          list {
          }
        }
      }
      attr {
        key: "f"
        value {
          func {
            name: "tf_map_func_1c539d92"
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/buffer_size_31"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 10000
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed_31"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed2_31"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset"
      op: "ShuffleDataset"
      input: "MapDataset:handle:0"
      input: "ShuffleDataset/buffer_size_31:output:0"
      input: "ShuffleDataset/seed_31:output:0"
      input: "ShuffleDataset/seed2_31:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset/count_31"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: -1
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset"
      op: "RepeatDataset"
      input: "ShuffleDataset:handle:0"
      input: "RepeatDataset/count_31:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "BatchDataset/batch_size"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 50
          }
        }
      }
    }
    node_def {
      name: "BatchDataset"
      op: "BatchDataset"
      input: "RepeatDataset:handle:0"
      input: "BatchDataset/batch_size:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    ret {
      key: "BatchDataset"
      value: "BatchDataset:handle:0"
    }
  }
  function {
    signature {
      name: "_make_dataset_a7dab47c"
      output_arg {
        name: "BatchDataset"
        type: DT_RESOURCE
      }
    }
    node_def {
      name: "TFRecordDataset/filenames_21"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset/compression_type_21"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: ""
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset"
      op: "TFRecordDataset"
      input: "TFRecordDataset/filenames_21:output:0"
      input: "TFRecordDataset/compression_type_21:output:0"
    }
    node_def {
      name: "MapDataset"
      op: "MapDataset"
      input: "TFRecordDataset:handle:0"
      attr {
        key: "Targuments"
        value {
          list {
          }
        }
      }
      attr {
        key: "f"
        value {
          func {
            name: "tf_map_func_1c539d92"
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/buffer_size_21"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 10000
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed_21"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed2_21"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset"
      op: "ShuffleDataset"
      input: "MapDataset:handle:0"
      input: "ShuffleDataset/buffer_size_21:output:0"
      input: "ShuffleDataset/seed_21:output:0"
      input: "ShuffleDataset/seed2_21:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset/count_21"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: -1
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset"
      op: "RepeatDataset"
      input: "ShuffleDataset:handle:0"
      input: "RepeatDataset/count_21:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "BatchDataset/batch_size"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 50
          }
        }
      }
    }
    node_def {
      name: "BatchDataset"
      op: "BatchDataset"
      input: "RepeatDataset:handle:0"
      input: "BatchDataset/batch_size:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    ret {
      key: "BatchDataset"
      value: "BatchDataset:handle:0"
    }
  }
  function {
    signature {
      name: "_make_dataset_296cfc11"
      output_arg {
        name: "BatchDataset"
        type: DT_RESOURCE
      }
    }
    node_def {
      name: "TFRecordDataset/filenames_54"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset/compression_type_54"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: ""
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset"
      op: "TFRecordDataset"
      input: "TFRecordDataset/filenames_54:output:0"
      input: "TFRecordDataset/compression_type_54:output:0"
    }
    node_def {
      name: "MapDataset"
      op: "MapDataset"
      input: "TFRecordDataset:handle:0"
      attr {
        key: "Targuments"
        value {
          list {
          }
        }
      }
      attr {
        key: "f"
        value {
          func {
            name: "tf_map_func_1c539d92"
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/buffer_size_54"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 10000
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed_54"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed2_54"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset"
      op: "ShuffleDataset"
      input: "MapDataset:handle:0"
      input: "ShuffleDataset/buffer_size_54:output:0"
      input: "ShuffleDataset/seed_54:output:0"
      input: "ShuffleDataset/seed2_54:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset/count_54"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: -1
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset"
      op: "RepeatDataset"
      input: "ShuffleDataset:handle:0"
      input: "RepeatDataset/count_54:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "BatchDataset/batch_size"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 50
          }
        }
      }
    }
    node_def {
      name: "BatchDataset"
      op: "BatchDataset"
      input: "RepeatDataset:handle:0"
      input: "BatchDataset/batch_size:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    ret {
      key: "BatchDataset"
      value: "BatchDataset:handle:0"
    }
  }
  function {
    signature {
      name: "_make_dataset_bac733e5"
      output_arg {
        name: "BatchDataset"
        type: DT_RESOURCE
      }
    }
    node_def {
      name: "TFRecordDataset/filenames_43"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset/compression_type_43"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: ""
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset"
      op: "TFRecordDataset"
      input: "TFRecordDataset/filenames_43:output:0"
      input: "TFRecordDataset/compression_type_43:output:0"
    }
    node_def {
      name: "MapDataset"
      op: "MapDataset"
      input: "TFRecordDataset:handle:0"
      attr {
        key: "Targuments"
        value {
          list {
          }
        }
      }
      attr {
        key: "f"
        value {
          func {
            name: "tf_map_func_1c539d92"
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/buffer_size_43"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 10000
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed_43"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed2_43"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset"
      op: "ShuffleDataset"
      input: "MapDataset:handle:0"
      input: "ShuffleDataset/buffer_size_43:output:0"
      input: "ShuffleDataset/seed_43:output:0"
      input: "ShuffleDataset/seed2_43:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset/count_43"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: -1
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset"
      op: "RepeatDataset"
      input: "ShuffleDataset:handle:0"
      input: "RepeatDataset/count_43:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "BatchDataset/batch_size"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 50
          }
        }
      }
    }
    node_def {
      name: "BatchDataset"
      op: "BatchDataset"
      input: "RepeatDataset:handle:0"
      input: "BatchDataset/batch_size:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    ret {
      key: "BatchDataset"
      value: "BatchDataset:handle:0"
    }
  }
  function {
    signature {
      name: "_make_dataset_dc7837c5"
      output_arg {
        name: "BatchDataset"
        type: DT_RESOURCE
      }
    }
    node_def {
      name: "TFRecordDataset/filenames_37"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset/compression_type_37"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: ""
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset"
      op: "TFRecordDataset"
      input: "TFRecordDataset/filenames_37:output:0"
      input: "TFRecordDataset/compression_type_37:output:0"
    }
    node_def {
      name: "MapDataset"
      op: "MapDataset"
      input: "TFRecordDataset:handle:0"
      attr {
        key: "Targuments"
        value {
          list {
          }
        }
      }
      attr {
        key: "f"
        value {
          func {
            name: "tf_map_func_1c539d92"
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/buffer_size_37"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 10000
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed_37"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed2_37"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset"
      op: "ShuffleDataset"
      input: "MapDataset:handle:0"
      input: "ShuffleDataset/buffer_size_37:output:0"
      input: "ShuffleDataset/seed_37:output:0"
      input: "ShuffleDataset/seed2_37:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset/count_37"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: -1
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset"
      op: "RepeatDataset"
      input: "ShuffleDataset:handle:0"
      input: "RepeatDataset/count_37:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "BatchDataset/batch_size"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 50
          }
        }
      }
    }
    node_def {
      name: "BatchDataset"
      op: "BatchDataset"
      input: "RepeatDataset:handle:0"
      input: "BatchDataset/batch_size:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    ret {
      key: "BatchDataset"
      value: "BatchDataset:handle:0"
    }
  }
  function {
    signature {
      name: "_make_dataset_adaad4e5"
      output_arg {
        name: "BatchDataset"
        type: DT_RESOURCE
      }
    }
    node_def {
      name: "TFRecordDataset/filenames_11"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset/compression_type_11"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: ""
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset"
      op: "TFRecordDataset"
      input: "TFRecordDataset/filenames_11:output:0"
      input: "TFRecordDataset/compression_type_11:output:0"
    }
    node_def {
      name: "MapDataset"
      op: "MapDataset"
      input: "TFRecordDataset:handle:0"
      attr {
        key: "Targuments"
        value {
          list {
          }
        }
      }
      attr {
        key: "f"
        value {
          func {
            name: "tf_map_func_1c539d92"
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/buffer_size_11"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 10000
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed_11"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed2_11"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset"
      op: "ShuffleDataset"
      input: "MapDataset:handle:0"
      input: "ShuffleDataset/buffer_size_11:output:0"
      input: "ShuffleDataset/seed_11:output:0"
      input: "ShuffleDataset/seed2_11:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset/count_11"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: -1
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset"
      op: "RepeatDataset"
      input: "ShuffleDataset:handle:0"
      input: "RepeatDataset/count_11:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "BatchDataset/batch_size"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 50
          }
        }
      }
    }
    node_def {
      name: "BatchDataset"
      op: "BatchDataset"
      input: "RepeatDataset:handle:0"
      input: "BatchDataset/batch_size:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    ret {
      key: "BatchDataset"
      value: "BatchDataset:handle:0"
    }
  }
  function {
    signature {
      name: "_make_dataset_0b93173e"
      output_arg {
        name: "BatchDataset"
        type: DT_RESOURCE
      }
    }
    node_def {
      name: "TFRecordDataset/filenames_15"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset/compression_type_15"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: ""
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset"
      op: "TFRecordDataset"
      input: "TFRecordDataset/filenames_15:output:0"
      input: "TFRecordDataset/compression_type_15:output:0"
    }
    node_def {
      name: "MapDataset"
      op: "MapDataset"
      input: "TFRecordDataset:handle:0"
      attr {
        key: "Targuments"
        value {
          list {
          }
        }
      }
      attr {
        key: "f"
        value {
          func {
            name: "tf_map_func_1c539d92"
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/buffer_size_15"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 10000
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed_15"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed2_15"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset"
      op: "ShuffleDataset"
      input: "MapDataset:handle:0"
      input: "ShuffleDataset/buffer_size_15:output:0"
      input: "ShuffleDataset/seed_15:output:0"
      input: "ShuffleDataset/seed2_15:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset/count_15"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: -1
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset"
      op: "RepeatDataset"
      input: "ShuffleDataset:handle:0"
      input: "RepeatDataset/count_15:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "BatchDataset/batch_size"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 50
          }
        }
      }
    }
    node_def {
      name: "BatchDataset"
      op: "BatchDataset"
      input: "RepeatDataset:handle:0"
      input: "BatchDataset/batch_size:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    ret {
      key: "BatchDataset"
      value: "BatchDataset:handle:0"
    }
  }
  function {
    signature {
      name: "_make_dataset_51fdfb70"
      output_arg {
        name: "BatchDataset"
        type: DT_RESOURCE
      }
    }
    node_def {
      name: "TFRecordDataset/filenames_64"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset/compression_type_64"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: ""
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset"
      op: "TFRecordDataset"
      input: "TFRecordDataset/filenames_64:output:0"
      input: "TFRecordDataset/compression_type_64:output:0"
    }
    node_def {
      name: "MapDataset"
      op: "MapDataset"
      input: "TFRecordDataset:handle:0"
      attr {
        key: "Targuments"
        value {
          list {
          }
        }
      }
      attr {
        key: "f"
        value {
          func {
            name: "tf_map_func_1c539d92"
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/buffer_size_64"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 10000
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed_64"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed2_64"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset"
      op: "ShuffleDataset"
      input: "MapDataset:handle:0"
      input: "ShuffleDataset/buffer_size_64:output:0"
      input: "ShuffleDataset/seed_64:output:0"
      input: "ShuffleDataset/seed2_64:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset/count_64"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: -1
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset"
      op: "RepeatDataset"
      input: "ShuffleDataset:handle:0"
      input: "RepeatDataset/count_64:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "BatchDataset/batch_size"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 50
          }
        }
      }
    }
    node_def {
      name: "BatchDataset"
      op: "BatchDataset"
      input: "RepeatDataset:handle:0"
      input: "BatchDataset/batch_size:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    ret {
      key: "BatchDataset"
      value: "BatchDataset:handle:0"
    }
  }
  function {
    signature {
      name: "_make_dataset_cc57a2fb"
      output_arg {
        name: "BatchDataset"
        type: DT_RESOURCE
      }
    }
    node_def {
      name: "TFRecordDataset/filenames_70"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset/compression_type_70"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: ""
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset"
      op: "TFRecordDataset"
      input: "TFRecordDataset/filenames_70:output:0"
      input: "TFRecordDataset/compression_type_70:output:0"
    }
    node_def {
      name: "MapDataset"
      op: "MapDataset"
      input: "TFRecordDataset:handle:0"
      attr {
        key: "Targuments"
        value {
          list {
          }
        }
      }
      attr {
        key: "f"
        value {
          func {
            name: "tf_map_func_1c539d92"
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/buffer_size_70"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 10000
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed_70"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed2_70"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset"
      op: "ShuffleDataset"
      input: "MapDataset:handle:0"
      input: "ShuffleDataset/buffer_size_70:output:0"
      input: "ShuffleDataset/seed_70:output:0"
      input: "ShuffleDataset/seed2_70:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset/count_70"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: -1
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset"
      op: "RepeatDataset"
      input: "ShuffleDataset:handle:0"
      input: "RepeatDataset/count_70:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "BatchDataset/batch_size"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 50
          }
        }
      }
    }
    node_def {
      name: "BatchDataset"
      op: "BatchDataset"
      input: "RepeatDataset:handle:0"
      input: "BatchDataset/batch_size:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    ret {
      key: "BatchDataset"
      value: "BatchDataset:handle:0"
    }
  }
  function {
    signature {
      name: "_make_dataset_d163ac24"
      output_arg {
        name: "BatchDataset"
        type: DT_RESOURCE
      }
    }
    node_def {
      name: "TFRecordDataset/filenames_34"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset/compression_type_34"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: ""
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset"
      op: "TFRecordDataset"
      input: "TFRecordDataset/filenames_34:output:0"
      input: "TFRecordDataset/compression_type_34:output:0"
    }
    node_def {
      name: "MapDataset"
      op: "MapDataset"
      input: "TFRecordDataset:handle:0"
      attr {
        key: "Targuments"
        value {
          list {
          }
        }
      }
      attr {
        key: "f"
        value {
          func {
            name: "tf_map_func_1c539d92"
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/buffer_size_34"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 10000
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed_34"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed2_34"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset"
      op: "ShuffleDataset"
      input: "MapDataset:handle:0"
      input: "ShuffleDataset/buffer_size_34:output:0"
      input: "ShuffleDataset/seed_34:output:0"
      input: "ShuffleDataset/seed2_34:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset/count_34"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: -1
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset"
      op: "RepeatDataset"
      input: "ShuffleDataset:handle:0"
      input: "RepeatDataset/count_34:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "BatchDataset/batch_size"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 50
          }
        }
      }
    }
    node_def {
      name: "BatchDataset"
      op: "BatchDataset"
      input: "RepeatDataset:handle:0"
      input: "BatchDataset/batch_size:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    ret {
      key: "BatchDataset"
      value: "BatchDataset:handle:0"
    }
  }
  function {
    signature {
      name: "_make_dataset_1e24b8dc"
      output_arg {
        name: "BatchDataset"
        type: DT_RESOURCE
      }
    }
    node_def {
      name: "TFRecordDataset/filenames_7"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset/compression_type_7"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: ""
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset"
      op: "TFRecordDataset"
      input: "TFRecordDataset/filenames_7:output:0"
      input: "TFRecordDataset/compression_type_7:output:0"
    }
    node_def {
      name: "MapDataset"
      op: "MapDataset"
      input: "TFRecordDataset:handle:0"
      attr {
        key: "Targuments"
        value {
          list {
          }
        }
      }
      attr {
        key: "f"
        value {
          func {
            name: "tf_map_func_1c539d92"
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/buffer_size_7"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 10000
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed_7"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed2_7"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset"
      op: "ShuffleDataset"
      input: "MapDataset:handle:0"
      input: "ShuffleDataset/buffer_size_7:output:0"
      input: "ShuffleDataset/seed_7:output:0"
      input: "ShuffleDataset/seed2_7:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset/count_7"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: -1
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset"
      op: "RepeatDataset"
      input: "ShuffleDataset:handle:0"
      input: "RepeatDataset/count_7:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "BatchDataset/batch_size"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 50
          }
        }
      }
    }
    node_def {
      name: "BatchDataset"
      op: "BatchDataset"
      input: "RepeatDataset:handle:0"
      input: "BatchDataset/batch_size:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    ret {
      key: "BatchDataset"
      value: "BatchDataset:handle:0"
    }
  }
  function {
    signature {
      name: "_make_dataset_30cffda9"
      output_arg {
        name: "BatchDataset"
        type: DT_RESOURCE
      }
    }
    node_def {
      name: "TFRecordDataset/filenames_63"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset/compression_type_63"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: ""
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset"
      op: "TFRecordDataset"
      input: "TFRecordDataset/filenames_63:output:0"
      input: "TFRecordDataset/compression_type_63:output:0"
    }
    node_def {
      name: "MapDataset"
      op: "MapDataset"
      input: "TFRecordDataset:handle:0"
      attr {
        key: "Targuments"
        value {
          list {
          }
        }
      }
      attr {
        key: "f"
        value {
          func {
            name: "tf_map_func_1c539d92"
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/buffer_size_63"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 10000
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed_63"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed2_63"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset"
      op: "ShuffleDataset"
      input: "MapDataset:handle:0"
      input: "ShuffleDataset/buffer_size_63:output:0"
      input: "ShuffleDataset/seed_63:output:0"
      input: "ShuffleDataset/seed2_63:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset/count_63"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: -1
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset"
      op: "RepeatDataset"
      input: "ShuffleDataset:handle:0"
      input: "RepeatDataset/count_63:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "BatchDataset/batch_size"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 50
          }
        }
      }
    }
    node_def {
      name: "BatchDataset"
      op: "BatchDataset"
      input: "RepeatDataset:handle:0"
      input: "BatchDataset/batch_size:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    ret {
      key: "BatchDataset"
      value: "BatchDataset:handle:0"
    }
  }
  function {
    signature {
      name: "_make_dataset_60ad243e"
      output_arg {
        name: "BatchDataset"
        type: DT_RESOURCE
      }
    }
    node_def {
      name: "TFRecordDataset/filenames_72"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset/compression_type_72"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: ""
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset"
      op: "TFRecordDataset"
      input: "TFRecordDataset/filenames_72:output:0"
      input: "TFRecordDataset/compression_type_72:output:0"
    }
    node_def {
      name: "MapDataset"
      op: "MapDataset"
      input: "TFRecordDataset:handle:0"
      attr {
        key: "Targuments"
        value {
          list {
          }
        }
      }
      attr {
        key: "f"
        value {
          func {
            name: "tf_map_func_1c539d92"
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/buffer_size_72"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 10000
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed_72"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed2_72"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset"
      op: "ShuffleDataset"
      input: "MapDataset:handle:0"
      input: "ShuffleDataset/buffer_size_72:output:0"
      input: "ShuffleDataset/seed_72:output:0"
      input: "ShuffleDataset/seed2_72:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset/count_72"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: -1
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset"
      op: "RepeatDataset"
      input: "ShuffleDataset:handle:0"
      input: "RepeatDataset/count_72:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "BatchDataset/batch_size"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 50
          }
        }
      }
    }
    node_def {
      name: "BatchDataset"
      op: "BatchDataset"
      input: "RepeatDataset:handle:0"
      input: "BatchDataset/batch_size:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    ret {
      key: "BatchDataset"
      value: "BatchDataset:handle:0"
    }
  }
  function {
    signature {
      name: "_make_dataset_c93cb149"
      output_arg {
        name: "BatchDataset"
        type: DT_RESOURCE
      }
    }
    node_def {
      name: "TFRecordDataset/filenames_3"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset/compression_type_3"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: ""
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset"
      op: "TFRecordDataset"
      input: "TFRecordDataset/filenames_3:output:0"
      input: "TFRecordDataset/compression_type_3:output:0"
    }
    node_def {
      name: "MapDataset"
      op: "MapDataset"
      input: "TFRecordDataset:handle:0"
      attr {
        key: "Targuments"
        value {
          list {
          }
        }
      }
      attr {
        key: "f"
        value {
          func {
            name: "tf_map_func_1c539d92"
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/buffer_size_3"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 10000
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed_3"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed2_3"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset"
      op: "ShuffleDataset"
      input: "MapDataset:handle:0"
      input: "ShuffleDataset/buffer_size_3:output:0"
      input: "ShuffleDataset/seed_3:output:0"
      input: "ShuffleDataset/seed2_3:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset/count_3"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: -1
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset"
      op: "RepeatDataset"
      input: "ShuffleDataset:handle:0"
      input: "RepeatDataset/count_3:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "BatchDataset/batch_size"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 50
          }
        }
      }
    }
    node_def {
      name: "BatchDataset"
      op: "BatchDataset"
      input: "RepeatDataset:handle:0"
      input: "BatchDataset/batch_size:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    ret {
      key: "BatchDataset"
      value: "BatchDataset:handle:0"
    }
  }
  function {
    signature {
      name: "_make_dataset_c48ab57b"
      output_arg {
        name: "BatchDataset"
        type: DT_RESOURCE
      }
    }
    node_def {
      name: "TFRecordDataset/filenames_27"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset/compression_type_27"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: ""
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset"
      op: "TFRecordDataset"
      input: "TFRecordDataset/filenames_27:output:0"
      input: "TFRecordDataset/compression_type_27:output:0"
    }
    node_def {
      name: "MapDataset"
      op: "MapDataset"
      input: "TFRecordDataset:handle:0"
      attr {
        key: "Targuments"
        value {
          list {
          }
        }
      }
      attr {
        key: "f"
        value {
          func {
            name: "tf_map_func_1c539d92"
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/buffer_size_27"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 10000
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed_27"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed2_27"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset"
      op: "ShuffleDataset"
      input: "MapDataset:handle:0"
      input: "ShuffleDataset/buffer_size_27:output:0"
      input: "ShuffleDataset/seed_27:output:0"
      input: "ShuffleDataset/seed2_27:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset/count_27"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: -1
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset"
      op: "RepeatDataset"
      input: "ShuffleDataset:handle:0"
      input: "RepeatDataset/count_27:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "BatchDataset/batch_size"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 50
          }
        }
      }
    }
    node_def {
      name: "BatchDataset"
      op: "BatchDataset"
      input: "RepeatDataset:handle:0"
      input: "BatchDataset/batch_size:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    ret {
      key: "BatchDataset"
      value: "BatchDataset:handle:0"
    }
  }
  function {
    signature {
      name: "_make_dataset_d038d0fe"
      output_arg {
        name: "BatchDataset"
        type: DT_RESOURCE
      }
    }
    node_def {
      name: "TFRecordDataset/filenames_65"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset/compression_type_65"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: ""
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset"
      op: "TFRecordDataset"
      input: "TFRecordDataset/filenames_65:output:0"
      input: "TFRecordDataset/compression_type_65:output:0"
    }
    node_def {
      name: "MapDataset"
      op: "MapDataset"
      input: "TFRecordDataset:handle:0"
      attr {
        key: "Targuments"
        value {
          list {
          }
        }
      }
      attr {
        key: "f"
        value {
          func {
            name: "tf_map_func_1c539d92"
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/buffer_size_65"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 10000
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed_65"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed2_65"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset"
      op: "ShuffleDataset"
      input: "MapDataset:handle:0"
      input: "ShuffleDataset/buffer_size_65:output:0"
      input: "ShuffleDataset/seed_65:output:0"
      input: "ShuffleDataset/seed2_65:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset/count_65"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: -1
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset"
      op: "RepeatDataset"
      input: "ShuffleDataset:handle:0"
      input: "RepeatDataset/count_65:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "BatchDataset/batch_size"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 50
          }
        }
      }
    }
    node_def {
      name: "BatchDataset"
      op: "BatchDataset"
      input: "RepeatDataset:handle:0"
      input: "BatchDataset/batch_size:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    ret {
      key: "BatchDataset"
      value: "BatchDataset:handle:0"
    }
  }
  function {
    signature {
      name: "_make_dataset_fa002fc6"
      output_arg {
        name: "BatchDataset"
        type: DT_RESOURCE
      }
    }
    node_def {
      name: "TFRecordDataset/filenames_71"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "/nfs/users/matthew/workdir/plates.tfrecords"
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset/compression_type_71"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: ""
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset"
      op: "TFRecordDataset"
      input: "TFRecordDataset/filenames_71:output:0"
      input: "TFRecordDataset/compression_type_71:output:0"
    }
    node_def {
      name: "MapDataset"
      op: "MapDataset"
      input: "TFRecordDataset:handle:0"
      attr {
        key: "Targuments"
        value {
          list {
          }
        }
      }
      attr {
        key: "f"
        value {
          func {
            name: "tf_map_func_1c539d92"
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/buffer_size_71"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 10000
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed_71"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed2_71"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset"
      op: "ShuffleDataset"
      input: "MapDataset:handle:0"
      input: "ShuffleDataset/buffer_size_71:output:0"
      input: "ShuffleDataset/seed_71:output:0"
      input: "ShuffleDataset/seed2_71:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset/count_71"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: -1
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset"
      op: "RepeatDataset"
      input: "ShuffleDataset:handle:0"
      input: "RepeatDataset/count_71:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "BatchDataset/batch_size"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 50
          }
        }
      }
    }
    node_def {
      name: "BatchDataset"
      op: "BatchDataset"
      input: "RepeatDataset:handle:0"
      input: "BatchDataset/batch_size:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 20
              }
              dim {
                size: 70
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_UINT8
            type: DT_INT32
          }
        }
      }
    }
    ret {
      key: "BatchDataset"
      value: "BatchDataset:handle:0"
    }
  }
}
versions {
  producer: 22
  min_consumer: 12
}
